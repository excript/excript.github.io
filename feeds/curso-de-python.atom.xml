<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>eXcript - curso de python</title><link href="http://excript.com/" rel="alternate"></link><link href="http://feeds.excript.com/feeds/curso-de-python.atom.xml" rel="self"></link><id>http://excript.com/</id><updated>2018-07-24T15:00:00-03:00</updated><subtitle></subtitle><entry><title>Tabela de Conversão de Números em Python</title><link href="http://excript.com/blog/conversao-numeros.html" rel="alternate"></link><published>2018-07-24T15:00:00-03:00</published><updated>2018-07-24T15:00:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2018-07-24:/blog/conversao-numeros.html</id><summary type="html">&lt;div class="section" id="introducao"&gt;
&lt;h2&gt;INTRODUÇÃO&lt;/h2&gt;
&lt;p&gt;Abaixo temos uma tabela onde o objetivo é converte de algum tipo para um tipo numérico ou de um tipo numérico para algum outro tipo. Algumas vezes é necessário importar a função para que seja possível executar o código.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="tabela"&gt;
&lt;h2&gt;TABELA&lt;/h2&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="22%" /&gt;
&lt;col width="25%" /&gt;
&lt;col width="53%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;DE&lt;/td&gt;
&lt;td&gt;PARA&lt;/td&gt;
&lt;td&gt;EXPRESSÃO&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;45&lt;/td&gt;
&lt;td&gt;&amp;quot;45&amp;quot;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;str(data)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;45&lt;/td&gt;
&lt;td&gt;&amp;quot;101101 …&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="section" id="introducao"&gt;
&lt;h2&gt;INTRODUÇÃO&lt;/h2&gt;
&lt;p&gt;Abaixo temos uma tabela onde o objetivo é converte de algum tipo para um tipo numérico ou de um tipo numérico para algum outro tipo. Algumas vezes é necessário importar a função para que seja possível executar o código.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="tabela"&gt;
&lt;h2&gt;TABELA&lt;/h2&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="22%" /&gt;
&lt;col width="25%" /&gt;
&lt;col width="53%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;DE&lt;/td&gt;
&lt;td&gt;PARA&lt;/td&gt;
&lt;td&gt;EXPRESSÃO&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;45&lt;/td&gt;
&lt;td&gt;&amp;quot;45&amp;quot;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;str(data)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;45&lt;/td&gt;
&lt;td&gt;&amp;quot;101101&amp;quot;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;bin(data)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;45&lt;/td&gt;
&lt;td&gt;&amp;quot;2D&amp;quot;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hex(data)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;45&lt;/td&gt;
&lt;td&gt;b&amp;quot;x00x00x00x2d&amp;quot;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;struct.pack('!i', data)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&amp;quot;45&amp;quot;&lt;/td&gt;
&lt;td&gt;45&lt;/td&gt;
&lt;td&gt;&lt;code&gt;int(data)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&amp;quot;45&amp;quot;&lt;/td&gt;
&lt;td&gt;&amp;quot;3435&amp;quot;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;data.encode('hex')&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&amp;quot;101101&amp;quot;&lt;/td&gt;
&lt;td&gt;45&lt;/td&gt;
&lt;td&gt;&lt;code&gt;int(data, 2)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&amp;quot;2D&amp;quot;&lt;/td&gt;
&lt;td&gt;45&lt;/td&gt;
&lt;td&gt;&lt;code&gt;int(data, 16)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&amp;quot;2D&amp;quot;&lt;/td&gt;
&lt;td&gt;b&amp;quot;x2d&amp;quot;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;binascii.unhexlify(data)&lt;/code&gt; ou
&lt;code&gt;data.decode('hex')&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&amp;quot;x00x00x00x2d&amp;quot;&lt;/td&gt;
&lt;td&gt;45&lt;/td&gt;
&lt;td&gt;&lt;code&gt;struct.unpack('!i', data)[0]&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&amp;quot;x2d&amp;quot;&lt;/td&gt;
&lt;td&gt;b&amp;quot;2D&amp;quot;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;binascii.hexlify(data)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&amp;quot;3435&amp;quot;&lt;/td&gt;
&lt;td&gt;&amp;quot;45&amp;quot;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;data.decode('hex')&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
</content><category term="python"></category><category term="conversão"></category><category term="número"></category><category term="blog"></category></entry><entry><title>Biblioteca Kivy</title><link href="http://excript.com/python/kivy.html" rel="alternate"></link><published>2018-06-21T08:00:00-03:00</published><updated>2018-06-21T08:00:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2018-06-21:/python/kivy.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Neste artigo será apresentado o projeto que permite o desenvolvimento multiplataforma com Python utilizando o framework Kivy.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="introducao"&gt;
&lt;h2&gt;INTRODUÇÃO&lt;/h2&gt;
&lt;img alt="Logo oficial do projeto Kivy" src="../images/blog/kivy-logo.png" /&gt;
&lt;p&gt;A biblioteca Kivy é um framework para desenvolvimento multiplataforma escrito majoritariamente com a linguagem Python e, com  alguns trechos escritos em Cython (explicaremos melhor a seguir). O framework permite o desenvolvimento de …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Neste artigo será apresentado o projeto que permite o desenvolvimento multiplataforma com Python utilizando o framework Kivy.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="introducao"&gt;
&lt;h2&gt;INTRODUÇÃO&lt;/h2&gt;
&lt;img alt="Logo oficial do projeto Kivy" src="../images/blog/kivy-logo.png" /&gt;
&lt;p&gt;A biblioteca Kivy é um framework para desenvolvimento multiplataforma escrito majoritariamente com a linguagem Python e, com  alguns trechos escritos em Cython (explicaremos melhor a seguir). O framework permite o desenvolvimento de aplicações para os sistema operacional Microsoft Windows, Linux, Mac OSX, Android, iOS e Raspberry utilizando um mesmo código Python.&lt;/p&gt;
&lt;p&gt;O projeto é composto por vários subprojetos, cada um especializado numa determinada tarefa, como por exemplo, a geração de executáveis para determinada plataforma, uma API genérica para o fácil acesso ao hardware em plataformas diferentes, desenvolvimento de games e etc.&lt;/p&gt;
&lt;p&gt;É importante não confundir o projeto Kivy com a biblioteca Kivy. O projeto Kivy, cujo site é &lt;a class="reference external" href="http://kivy.org"&gt;http://kivy.org&lt;/a&gt; é composto por vários subprojetos, dentre estes, a biblioteca Kivy.&lt;/p&gt;
&lt;p&gt;A eXcript, junto a comunidade brasileira, traduziu a &lt;a class="reference external" href="http://excript.com/python/doc-kivy-ptbr.html"&gt;documentação oficial do framework&lt;/a&gt; e o mesmo pode ser baixado aqui em nosso site.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="a-biblioteca-kivy"&gt;
&lt;h2&gt;A BIBLIOTECA KIVY&lt;/h2&gt;
&lt;p&gt;Uma aplicação desenvolvida com a &lt;a class="reference external" href="https://github.com/kivy/kivy/"&gt;biblioteca Kivy&lt;/a&gt; será executada diretamente em cima da biblioteca gráfica &lt;tt class="docutils literal"&gt;OpenGL&lt;/tt&gt; que normalmente é executado em cima da placa gráfica. O OpenGL possui suporte nativo para as principais plataformas, e, estando o Kivy desenvolvido em cima do mesmo, toda plataforma que oferece suporte ao OpenGL poderá executar uma aplicação escrita com o framework Kivy.&lt;/p&gt;
&lt;p&gt;Em outras palavras, todo o código será executado em cima dos processadores da placa de vídeo, e é por essa razão que em muitos casos, é possível que aplicações Kivy tenham performance igual, ou então superior a aplicações nativas!&lt;/p&gt;
&lt;p&gt;Como o OpenGL é multiplataforma, o projeto Kivy, construído em cima dessa camada, pode ser executado em qualquer dispositivo que suporte a biblioteca e, como praticamente todos dispositivos oferecem suporte devido a sua amplitude, a quantidade e a complexidade de trabalhar com o hardware e aplicações gráficas, aplicações Kivy são compatíveis com uma grande quantidade de dispositivos.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="opengl-2-0"&gt;
&lt;h2&gt;OpenGL 2.0&lt;/h2&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;OpenGL&lt;/tt&gt; é uma API de desenvolvimento de aplicações gráficas e, ao mesmo tempo, o nome de uma linguagem de programação semelhante ao C++. A palavra OpenGL é um acrônimo de &lt;cite&gt;Open Graphics Library`&lt;/cite&gt;, que, numa tradução livre teríamos &lt;tt class="docutils literal"&gt;Biblioteca Gráfica Aberta&lt;/tt&gt;. O seu uso permite o fácil desenvolvimento de aplicações gráficas, inclusive com ambientes 3D pondendo ser executado em praticamente todos sistemas operacionais e nos principais dispositivos. A biblioteca é amplamente utilizada na construção de jogos, ferramentas 3D ou qualquer aplicação que faça uso intensivo do hardware gráfico.&lt;/p&gt;
&lt;blockquote&gt;
OpenGL é um conjunto de padrões de processamento de alto desempenho de gráficos 2D e 3D na unidade de processamento (GPU) para vários aplicativos. O OpenGL permite a renderização rápida de visualizações (modo Rascunho rápido).
&lt;a class="reference external" href="https://helpx.adobe.com/br/after-effects/using/rendering-opengl.html"&gt;https://helpx.adobe.com/br/after-effects/using/rendering-opengl.html&lt;/a&gt;&lt;/blockquote&gt;
&lt;p&gt;A construção da biblioteca OpenGL era definir um padrão entre os desenvolvedores de hardware e os desenvolvedores de software, de forma a permitir a evolução contínua do hardware sem entrar em conflito com o software. Dessa forma, a API OpenGL faz o &amp;quot;meio de campo&amp;quot; entre o programador que utiliza as funções da API e os mais variados hardwares de vídeo. Então, nós programadores de linguagens de alto nível (alto nível pois estamos longe do hardware) não precisamos nos preocupar se a placa de vídeo é &lt;a class="reference external" href="https://www.intel.com.br/"&gt;Intel&lt;/a&gt;, &lt;a class="reference external" href="http://www.nvidia.com/"&gt;NVidia&lt;/a&gt; ou Xingling, pois a compatibilidade é trabalho da equipe que desenvolve e implementa a API.&lt;/p&gt;
&lt;p&gt;O núcleo do OpenGL é conhecido como &amp;quot;rendering pipeline&amp;quot; ou dutos de renderização. Podemos utilizar a biblioteca tanto para desenhos vetoriais, definidos por vértices, ou mapas de bits, desenhos construídos pixel-a-pixel.&lt;/p&gt;
&lt;p&gt;Os desenvolvedores de hardware conseguem criar extensões, inovando e diferenciando seus produtos, sem a necessidade de alterar a biblioteca e as atualizações, raramente obrigam os usuários da API OpenGL a alterarem os seus códigos.&lt;/p&gt;
&lt;p&gt;As extensões fornecem aos desenvolvedores de aplicativos os novos recursos de renderização e permite ir além das características especificadas na norma oficial do OpenGL (o padrão). Extensões da OpenGL mantém a API atual com as últimas inovações em hardware gráfico e algoritmos de processamento.&lt;/p&gt;
&lt;p&gt;Por fim, a biblioteca OpenGL é vastamente utilizada, seja por navegadores, seja por sistemas operacionais ou Engines de Games. Na foto abaixo, temos um sistema utilizado em automóveis brasileiros de nome LGE sendo utilizado como biblioteca gráfica.&lt;/p&gt;
&lt;img alt="Sistema operacional LGE como item de fábrica em carros da Renault brasileiros. O sistema é comumente chamado de Media Nav." src="../images/blog/sistema-operacional-lge.jpg" /&gt;
&lt;p&gt;Tirei a foto no carro do meu amigo Daniel Mello quando esperavamos a pizza ficar pronta. O sistema operacional a princípio parece ser proprietário e é desenvolvido pela LG, porém, o código fonte está disponível segundo a documentação oficial, porém, não encontrei onde. No Brasil o sistema vem sendo chamado de Media Nav.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="opengl-opengl-es-2-2-e-desktop-gl"&gt;
&lt;h2&gt;OpenGL, OpenGL ES 2.2 e Desktop GL&lt;/h2&gt;
&lt;p&gt;O framework Kivy está construido &lt;a class="reference external" href="https://www.opengl.org/"&gt;sob a API OpenGL ES 2.0&lt;/a&gt; e possui muito do seu código-fonte escrito com a linguagem OpenGL que possui sintaxe identica a linguagem C. Os módulos de integração com a API OpenGL podem ser considerados o núcleo da biblioteca Kivy e também, o código mais complexo a ser estudado.&lt;/p&gt;
&lt;blockquote&gt;
OpenGL® ES is a royalty-free, cross-platform API for full-function 2D and 3D graphics on embedded systems - including consoles, phones, appliances and vehicles. It consists of well-defined subsets of desktop OpenGL, creating a flexible and powerful low-level interface between software and graphics acceleration. OpenGL ES includes profiles for floating-point and fixed-point systems and the EGL™ specification for portably binding to native windowing systems. OpenGL ES 1.X is for fixed function hardware and offers acceleration, image quality and performance. OpenGL ES 2.X enables full programmable 3D graphics. OpenGL SC is tuned for the safety critical market.
&lt;a class="reference external" href="https://www.khronos.org/opengles/"&gt;https://www.khronos.org/opengles/&lt;/a&gt;&lt;/blockquote&gt;
&lt;p&gt;Atualmente há vários subsets (versões derivadas) da biblioteca OpenGL. Por padrão (convenção), os principais Sistemas Operacionais voltados a dispositivos móveis utilizam a biblioteca OpenGL ES 2.0. Portanto, é comum falarmos que o projeto Kivy está construido sob a arquitetura OpenGL, porém, a biblioteca utiliza de fato uma versão derivada de OpenGL ES 2.0 e que é um acrônimo de &lt;tt class="docutils literal"&gt;OpenGL for Embedded Systems&lt;/tt&gt; que numa tradução livre seria:&lt;/p&gt;
&lt;p&gt;A seguir, temos os acrônimos seguido de seus nomes completos:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
- OpenGL: Open Graphic Library
- OpenGL ES: OpenGL for Embedded Systems
- Desktop GL: Desktop Graphic Library
&lt;/pre&gt;
&lt;p&gt;É comum nos referirmos ao OpenGL ES 2.0 como GLES2 e ao Desktop GL como OpenGL 2.0 minimum, então temos que:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
- GLES2 = OpenGL ES 2.0
- Desktop GL = OpenGL 2.0 minimum)
&lt;/pre&gt;
&lt;p&gt;GLES2 é um subset de OpenGL 2.0, com alguns poucos simbolos diferentes. O Kivy &lt;em&gt;utiliza somente instrução instrução GLES2&lt;/em&gt; que é compatível com GL.&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;On Desktop (Win/Linux/OSX), a compilação é feita com &lt;tt class="docutils literal"&gt;Desktop GL&lt;/tt&gt; (salvo se os cabeçalhos do &lt;tt class="docutils literal"&gt;GLES2&lt;/tt&gt; forem encontrados). Utilizamos &lt;tt class="docutils literal"&gt;PyGame&lt;/tt&gt; e &lt;tt class="docutils literal"&gt;SDL&lt;/tt&gt; somente para inicializar uma janela em sistemas Desktop como &lt;tt class="docutils literal"&gt;Mac&lt;/tt&gt; e &lt;tt class="docutils literal"&gt;Windows&lt;/tt&gt;, isso porque, o &lt;tt class="docutils literal"&gt;Kivy&lt;/tt&gt; possui a sua própria Engine gráfica.&lt;/li&gt;
&lt;li&gt;No Android, temos o Java bootstrap que inicializa o contexto da janela/&lt;tt class="docutils literal"&gt;GLES2&lt;/tt&gt;.&lt;/li&gt;
&lt;li&gt;No &lt;tt class="docutils literal"&gt;iOS&lt;/tt&gt;, utilizamos o &lt;tt class="docutils literal"&gt;SDL 2.0&lt;/tt&gt;, que suporta o contexto do &lt;tt class="docutils literal"&gt;iOS&lt;/tt&gt; e do &lt;tt class="docutils literal"&gt;GLES2&lt;/tt&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;O Kivy não utiliza funções gráficas do sistema operacional hospedeiro, logo, os componentes/Widgets são desenhados do zero e portanto, aplicações Kivy, terão o mesmo visual em todas as plataformas. Essa é a parte boa. A parte ruim é que se desejarmos que o nosso App utilize o leiaute do sistema operacional hospedeiro, teremos que desenvolver por conta própria.&lt;/p&gt;
&lt;p&gt;Existe versões em desenvolvimento que implementam o padrão gráfico do &lt;a class="reference external" href="https://kivymd.github.io/"&gt;Material Design&lt;/a&gt;, e muito provavelmente, alguém já está desenvolvendo uma versão que utilize os padrões do iOS. Porém, é importante saber que esses são projetos de terceiros, por isso, não há suporte oficial.&lt;/p&gt;
&lt;p&gt;É importante dizer que a biblioteca Kivy utiliza a API &lt;tt class="docutils literal"&gt;OpenGL ES 2.0&lt;/tt&gt;, porém, está não é a última versão disponibilizada pela fabricante.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.opengl.org/sdk/docs/"&gt;Para consultar a documentação do projeto OpenGL utilize este link&lt;/a&gt;.&lt;/p&gt;

    &lt;div class="admonitionblock note data-line"&gt;
        &lt;table&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="icon"&gt;
                        &lt;i class="fa icon-note" title="Nota!"&gt;&lt;/i&gt;
                    &lt;/td&gt;
                    &lt;td class="content"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt;A biblioteca Kivy é multiplataforma devido principalmente a biblioteca OpenGL.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="o-python"&gt;
&lt;h2&gt;O PYTHON&lt;/h2&gt;
&lt;p&gt;A biblioteca inicialmente foi escrita para a versão 2x do &lt;a class="reference external" href="https://blog.kivy.org/2016/01/python-for-android-now-supports-python-3%C2%A0apks/"&gt;Python e recentemente (2016) foi publicado o suporte experimental à versão 3x&lt;/a&gt; . Ainda que o suporte seja experimental, há casos de sucesso utilizando a versão 3x.&lt;/p&gt;
&lt;p&gt;Mesmo assim, a versão do Python amplamente suportada ainda é a 2x e algumas plataformas, como por exemplo o Mac OSX, ainda não possuem suporte para gerar executáveis utilizando as últimas versões.&lt;/p&gt;
&lt;p&gt;O desenvolvimento utilizando a versão 2x e 3x são iguais, salvo a manipulação de String que, na versão 2x do Python possui um tratamento diferente, ou seja, as cadeias de caracteres não são Unicode por padrão.&lt;/p&gt;
&lt;p&gt;Projetos escritos com a versão 3x do Python podem ser convertidos para a versão 2x utilizando utilitários como por exemplo o &lt;a class="reference external" href="https://docs.python.org/2/library/2to3.html"&gt;2to3&lt;/a&gt; que, mesmo não sendo perfeito, resolve a maioria dos problemas de conversão.&lt;/p&gt;
&lt;p&gt;Por fim, é importante dizer que o buildozer, projeto que gera executáveis para as mais diversas plataformas pode ser baixado junto com uma versão do Lubuntu para as versões 2x, ou seja, a forma mais utilizada na geração de executáveis ainda é a versão 2x.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="a-linguagem-kivy-ou-entao-a-kvlang"&gt;
&lt;h2&gt;A LINGUAGEM KIVY OU ENTÃO A kvlang&lt;/h2&gt;
&lt;p&gt;O projeto Kivy desenvolveu uma linguagem especializada e semelhante a linguagem Python para a construção de interfaces gráficas. O objetivo é facilitar a adição e remoção de Widgets (componentes visuais) ao mesmo tempo que separa o código utilizado para construção gráfica (View) do código Python, ou a lógica de negócios.&lt;/p&gt;
&lt;p&gt;Num primeiro momento é impossível não pensarmos se realmente existe a necessidade de criar mais uma linguagem sendo que já existem tantas. Talvez somente na prática é que conseguimos perceber o quão útil foi o estabelecimento dessa nova linguagem que de fato não passa de uma linguagem de marcação, haja vista que somente pequenas expressões podem ser utilizadas.&lt;/p&gt;
&lt;p&gt;Abaixo temos um trecho de código utilizando a kvlang e em seguida a tela que iremos obter quando executarmos.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;FloatLayout&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;TextInput&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;eXcript&amp;quot;&lt;/span&gt;
        &lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;30px&amp;quot;&lt;/span&gt;
        &lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;350&lt;/span&gt;
        &lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;
        &lt;span class="n"&gt;size_hint&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;
        &lt;span class="n"&gt;pos_hint&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;center_x&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,}&lt;/span&gt;
    &lt;span class="n"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Confirmar&amp;quot;&lt;/span&gt;
        &lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;
        &lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;
        &lt;span class="n"&gt;size_hint&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;
        &lt;span class="n"&gt;pos_hint&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;center_x&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;img alt="Tela construida com o framework Kivy contendo um TextEdit e um Botão" src="../images/blog/kivy-exemplo-textinput-button.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="a-ide-kivy-design"&gt;
&lt;h2&gt;A IDE Kivy Design&lt;/h2&gt;
&lt;img alt="Imagem do editor Kivy Design" src="../images/blog/kivy-design.png" /&gt;
&lt;p&gt;Kivy Design é um projeto de construção de uma IDE RAD para desenvolvimento de aplicações gráficas com Python utilizando a biblioteca kivy. A proposta é a construção do sonho de todos programadores: um ambiente de  completo, estável, para a construção de aplicações, seja para o Prompt de Comando, seja para aplicações gráfica para Desktop, Mobile e Web.&lt;/p&gt;
&lt;p&gt;O projeto Kivy Design objetiva fazer jus a todo o trabalho e esforço empreendido na construção da biblioteca Kivy e fornecer um ambiente para a construção de aplicações gráfica que tenha tanta qualidade como a biblioteca Kivy.&lt;/p&gt;
&lt;p&gt;A IDE vem sendo desenvolvido, obviamente, com o framework Kivy, então, talvez este venha a ser a primeira IDE RAD (Rapid Application Development) multiplataforma e multidispositivo do mundo. O mais legal é que temos a oportunidade de participar do desenvolvimento da IDE e assim, trabalhar para construir uma ferramenta que seja como sempre desejamos que ela fosse.&lt;/p&gt;
&lt;p&gt;Uma das razões do código do Kivy Design ser tão simples é que tudo ainda está no começo, por isso tanta simplicidade. E, essa é a parte boa, ou seja, temos a oportunidade de acompanhar o crescimento do código e ir assimilando naturalmente e participando da construção de um grande software!&lt;/p&gt;
&lt;div class="section" id="estado-do-projeto-kivy-design"&gt;
&lt;h3&gt;ESTADO DO PROJETO Kivy Design&lt;/h3&gt;
&lt;p&gt;Neste momento, ainda que seja possível executar o projeto Kivy Design, não é recomendável sua utilização, até porque, o mesmo está caindo (travando) a todo momento.&lt;/p&gt;
&lt;p&gt;Caso queiras se divertir, toda vez que Kivy Design travar, é impresso o local em que ocorreu o problema, logo, poder ir até lá e tentar corrigir.
O interessante é que a maior parte das vezes em que o Kivy Design trava, o problema não está em seu código, mas sim, no código da biblioteca Kivy.&lt;/p&gt;
&lt;p&gt;Falando de maneira geral, o framework Kivy não faz um forte tratamento e verificação quando novos valores são atribuido para propriedades de um Widget. Se a propriedade estiver esperando uma Tupla e for enviado um dicionário, ocorre um erro na biblioteca, o que acaba por derrubar toda a IDE. A princípio, e, pelo que entendi, os desenvolvedores não tem interesse de fazer esse tipo de tratamento por questões de performance.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="projeto-garden"&gt;
&lt;h2&gt;PROJETO garden&lt;/h2&gt;
&lt;p&gt;O &lt;a class="reference external" href="https://github.com/kivy-garden"&gt;Projeto Garden&lt;/a&gt; centraliza componentes não oficiais de código-fonte aberto e distribuido sob a licença MIT desenvolvido por terceiros. Pense neste projeto como um centralizador de códigos de diferentes usuários cuja finalidade é distribuir e compartilhar módulos prontos para ser utilizado.&lt;/p&gt;
&lt;p&gt;Todos os pacotes Garden estão armazenados no Github, dentro do projeto Kivy, ou seja, no mesmo local em que baixamos o código fonte da biblioteca Kivy.&lt;/p&gt;
&lt;p&gt;O projeto Garden não está mais sendo entregue junto com o código do framework Kivy, por isso, agora, é necessário instala-lo manualmente. Para isso, vá no Terminal e digite:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install kivy-garden
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Vale dizer que todos são incentivados a colaborar com os pacotes existentes ou então, pela criação de novos módulos independentes. Inclusive, existe um sistema de premiação simbólica para aqueles que tenham colaborado.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/kivy-garden"&gt;Segue o link do repositório no Github&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="projeto-buildozer"&gt;
&lt;h2&gt;PROJETO Buildozer&lt;/h2&gt;
&lt;p&gt;O &lt;a class="reference external" href="https://github.com/kivy/buildozer"&gt;projeto Buildozer é uma ferramenta para facilitar a geração de App para as várias plataformas suportadas pelo projeto Kivy&lt;/a&gt; .&lt;/p&gt;
&lt;p&gt;O objetivo deste projeto, segundo a própria documentação oficial, é, através de um arquivo de nome &amp;quot;buildozer.spec&amp;quot; que contém uma lista de parâmetros que devemos definir, como por exemplo, título, ícone, módulos de terceiros (pacotes Python) e etc, gerar executáveis para as plataformas suportadas pelo projeto. Assim, definimos num único local as configurações do nosso App e em seguida, geramos um executável para a plataforma desejada.&lt;/p&gt;
&lt;p&gt;É importante dizer que o projeto Buildozer não implementa como o App será gerado, o que o mesmo faz, é servir como uma aplicação comum que analisará as informações e passará ao projeto especializado na geração.&lt;/p&gt;
&lt;p&gt;Então, não devemos pensar no Buildozer como um mega projeto que gera executáveis para várias plataformas, o seu principal objetivo é ler os valores definidos no arquivos &amp;quot;buildozer.spec&amp;quot; e envia-las ao projeto &lt;cite&gt;python-for-android&lt;/cite&gt; ou ao projeto &lt;cite&gt;kivy-ios&lt;/cite&gt;.&lt;/p&gt;
&lt;p&gt;O suporte a outras plataformas está previsto, porém, não existe qualquer informação adicional publicada, muito menos data prevista.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="projeto-python-for-android"&gt;
&lt;h2&gt;PROJETO python-for-android&lt;/h2&gt;
&lt;p&gt;O projeto &lt;cite&gt;python-for-android&lt;/cite&gt; é um subprojeto do projeto Kivy e seu objetivo é gerar executáveis para a plataforma Android.&lt;/p&gt;
&lt;p&gt;Este projeto utiliza várias linguagens de programação, como por exemplo, C, C++, Cython, Python e Java. O C e o C++ são utilizados para trabalhar nativamente com a API do Android, o &lt;a class="reference external" href="https://developer.android.com/ndk/index.html"&gt;Android NDK&lt;/a&gt; . O Cython faz a conversão do código Python para código C nativo e o código Java é utilizado para acessar a API nativa do Android.&lt;/p&gt;
&lt;p&gt;O App para a plataforma Android é gerada através de um projeto construído com o &lt;a class="reference external" href="https://developer.android.com/studio/index.html"&gt;AndroidStudio&lt;/a&gt; onde uma parte é nativa, ou seja, escrita com C e C++, outra parte utiliza a linguagem Java, outra parte utiliza o projeto &lt;a class="reference external" href="https://github.com/kivy/PyJNIus"&gt;PyJNIus&lt;/a&gt; e claro, tudo isso está integrado com a linguagem Python.&lt;/p&gt;
&lt;p&gt;Por essa razão, é correto dizer que o App gerado para a plataforma Android é nativo, até porque, o mesmo é construído através de um projeto nativo fornecido pela empresa desenvolvedora (a Google).&lt;/p&gt;
&lt;p&gt;O código Python por nós escrito é compilado com o &lt;a class="reference external" href="http://http://cython.org/"&gt;Cython&lt;/a&gt;, ou seja, um projeto que converte código Python para código C nativo, portanto, não é possível a terceiros ler, entender ou robar nossa implementação (facilmente).&lt;/p&gt;
&lt;p&gt;Dentro do App gerado (*.apk) contém uma VM do Python modificada, ou seja, todo aplicativo gerado com o Python-for-Android irá contér uma versão do Python modificada, por isso, é possível enviar código Python que será interpretado no dispositivo ou então, o que é o padrão, enviar o código compilado em C otimizado para processadores ARM.&lt;/p&gt;
&lt;p&gt;É incorreto dizer que aplicações escritas com a biblioteca Kivy são lentas ou então, que possuem baixa performance! Até porque, o Cython é um projeto amplamente respeitado por sua capacidade em converter código Python para código C puro altamente performático. E também, toda a parte gráfica é executada em cima da placa de vídeo, o que podemos facilmente deduzir, que a performance, algumas vezes, será superior ao código executado pelo processador na geração da parte gráfica.&lt;/p&gt;
&lt;p&gt;Talvez, o lado negativo é o tamanho do App que neste momento está ficando em torno de 44 megas, o que é grande se comparado ao tamanho de um App desenvolvido com Java, porém, pequeno, se comparado a capacidade de armazenamento e processamento dos dispositivos móveis atuais.&lt;/p&gt;
&lt;p&gt;Por fim, temos que TODA a API escrita em Java pode ser facilmente acessada via Python através do projeto &lt;a class="reference external" href="https://github.com/kivy/PyJNIus"&gt;PyJNIus&lt;/a&gt; que será explicado em seguida.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="projeto-pyjnius"&gt;
&lt;h2&gt;PROJETO PyJNIus&lt;/h2&gt;
&lt;p&gt;O projeto PyJNIus permite acessar a API nativa do Android disponibilizada em classes escritas em Java e que por detrás utiliza a linguagem C++. O PyJNIus acessa as classes em Java, portanto, podemos criar uma class Java e &amp;quot;mapea-la&amp;quot; com o projeto PyJNIus para ser utilizada com a linguagem Python.&lt;/p&gt;
&lt;p&gt;Este projeto é semelhante ao &lt;a class="reference external" href="http://docs.oracle.com/javase/8/docs/technotes/guides/jni/"&gt;JNI (Java Native Interface)&lt;/a&gt; que permite o acesso às classes escritas em Java por outras linguagens.&lt;/p&gt;
&lt;p&gt;Dessa forma, conseguimos por exemplo, acessar a classe &lt;a class="reference external" href="https://developer.android.com/reference/android/content/Intent.html"&gt;Intent&lt;/a&gt; do Android, ou então, a classe &lt;a class="reference external" href="https://developer.android.com/reference/android/app/Activity.html"&gt;Activity&lt;/a&gt; e inclusive, conseguimos desenvolver uma aplicação que rode nativamente em cima da API Java do Android.&lt;/p&gt;
&lt;p&gt;A seguir, temos um exemplo, retirado da documentação oficial do PyJNIus em que é feito o acesso a Activity do Android.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;jnius&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;cast&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;jnius&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;autoclass&lt;/span&gt;

&lt;span class="c1"&gt;# import the needed Java class&lt;/span&gt;
&lt;span class="n"&gt;PythonActivity&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;autoclass&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;org.renpy.android.PythonActivity&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Intent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;autoclass&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;android.content.Intent&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Uri&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;autoclass&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;android.net.Uri&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# create the intent&lt;/span&gt;
&lt;span class="n"&gt;intent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Intent&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;intent&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setAction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Intent&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ACTION_VIEW&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;intent&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Uri&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;http://kivy.org&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;# PythonActivity.mActivity is the instance of the current Activity&lt;/span&gt;
&lt;span class="c1"&gt;# BUT, startActivity is a method from the Activity class, not from our&lt;/span&gt;
&lt;span class="c1"&gt;# PythonActivity.&lt;/span&gt;
&lt;span class="c1"&gt;# We need to cast our class into an activity and use it&lt;/span&gt;
&lt;span class="n"&gt;currentActivity&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cast&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;android.app.Activity&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;PythonActivity&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mActivity&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;currentActivity&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;startActivity&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;intent&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Observe que estamos utilizando a linguagem Python para trabalhar com classes escritas em Java!&lt;/p&gt;
&lt;p&gt;Assim concluímos que a capacidade de desenvolvimento é ilimitada, até porque, podemos acessar nativamente tudo que a plataforma Android disponibiliza, seja através das classe em C++ pelo acesso via &lt;a class="reference external" href="https://developer.android.com/ndk/index.html"&gt;NDK&lt;/a&gt;,&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="projeto-kivy-for-ios"&gt;
&lt;h2&gt;PROJETO kivy-for-iOS&lt;/h2&gt;
&lt;p&gt;O projeto &lt;a class="reference external" href="https://github.com/kivy/kivy-ios"&gt;Kivy for iOS&lt;/a&gt; é semelhante ao projeto Python for Android a diferença é o suporte à plataforma &lt;a class="reference external" href="https://www.apple.com/ios/"&gt;iOS&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;O App gerado para iOS é feito através de um projeto desenvolvido com o &lt;a class="reference external" href="https://developer.apple.com/xcode/"&gt;Xcode&lt;/a&gt;, portanto, no final, teremos uma aplicação nativa, da mesma forma que temos com o Android.&lt;/p&gt;
&lt;p&gt;Internamente, o executável gerado também carregará uma versão otimizada o Python e por isso, é possível executar código Python no dispositivo em que a nossa aplicação estiver sendo executada. Normalmente, o nosso código será compilado com o &lt;a class="reference external" href="http://http://cython.org/"&gt;Cython&lt;/a&gt; o que impedirá terceiros de ler e entender nossos códigos (facilmente), até porque, será gerado código C nativo.&lt;/p&gt;
&lt;p&gt;O suporte a plataforma iOS não acompanha a plataforma Android, ou seja, uma aplicação híbrida construída com Python e Kivy conseguirá acessar melhor a API do Android do que do iOS (por enquanto).&lt;/p&gt;
&lt;p&gt;Como dito anteriormente, não há suporte ao Python 3x para iOS, portanto, temos que converter nosso código escrito com Python 3x para 2x manualmente ou então, utilizando ferramentas como &lt;a class="reference external" href="https://docs.python.org/2/library/2to3.html"&gt;2to3&lt;/a&gt; disponibilizada oficialmente pelo projeto Python.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="projeto-pyobjus"&gt;
&lt;h2&gt;PROJETO PyObjus&lt;/h2&gt;
&lt;p&gt;O projeto &lt;a class="reference external" href="https://github.com/kivy/pyobjus"&gt;PyObjus&lt;/a&gt; permite o acesso às classes escritas em &lt;a class="reference external" href="https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/ProgrammingWithObjectiveC/Introduction/Introduction.html"&gt;Objective-C&lt;/a&gt; pelo Python. Desta forma, conseguimos o acesso nativo a toda a API do &lt;a class="reference external" href="https://www.apple.com/ios/"&gt;iOS&lt;/a&gt; através do código Python.&lt;/p&gt;
&lt;p&gt;A seguir, temos um simples exemplos extraído da documentação oficial da PyObjnus.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pyobjus&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;autoclass&lt;/span&gt;

&lt;span class="n"&gt;NSString&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;autoclass&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;NSString&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;NSString&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;alloc&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;initWithUTF8String_&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Hello world&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;UTF8String&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Como podemos ver, é importado a classe NSString e em seguida é armazenado o texto Hello World na mesma. Ou seja, desta forma, estamos trabalhando com a API nativa do iOS utilizando a linguagem Python! Portanto, conseguimos desenvolver aplicações que utilizam toda a API nativa da plataforma utilizando código Python.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="componentes-widget"&gt;
&lt;h2&gt;COMPONENTES (WIDGET)&lt;/h2&gt;
&lt;p&gt;O framework Kivy contém um conjunto de componentes gráficos para a construção das telas de interação com o usuário. A documentação do Kivy chama os componentes de Widgets, ou seja, um botão é um Widget, um caixa de entrada de texto é um Widget e assim por diante.&lt;/p&gt;
&lt;p&gt;Existe um conjunto de Widgets bastante amplo que vem de fábrica. Os componentes visuais estão em pleno desenvolvimento e portanto, a cada nova versão, muitos recursos são adicionados. Neste momento, se compararmos os recursos da biblioteca Kivy com plataformas comerciais e consagradas tais como o &lt;a class="reference external" href="https://www.embarcadero.com/br/products/rad-studio"&gt;Embarcadero Delphi (Rad Studio)&lt;/a&gt;, &lt;a class="reference external" href="http://qt-project.org/qt5"&gt;Qt5&lt;/a&gt; ou &lt;a class="reference external" href="https://www.xamarin.com/"&gt;Xamarin&lt;/a&gt;, o Kivy fica numa posição bem inferior, porém, isso é uma questão de tempo e de desenvolvimento. A capacidade para que o Kivy disponha de componentes visuais tais como o Xamarin ou então o Embarcadero Delphi é uma questão de tempo!&lt;/p&gt;
&lt;p&gt;O Kivy seguiu o estilo utilizado pelo Sistema Operacional &lt;a class="reference external" href="`https://en.wikipedia.org/wiki/Moblin`"&gt;Moblin&lt;/a&gt; e, a verdade, é que estetícamente a biblioteca ainda deixa a desejar.&lt;/p&gt;
&lt;p&gt;Aparentemente, a equipe do Kivy dedica seus esforços à construção do núcleo do framework o que é muito bom, pois, a complexidade para melhorar a aparência visual é mínima se comparada com a implementação dos módulos que interagem com os periféricos.&lt;/p&gt;
&lt;p&gt;Há iniciativas de construção de bibliotecas gráficas independentes como por exemplo o &lt;a class="reference external" href="kivyMD.github.io"&gt;KivyMD&lt;/a&gt;, acrônimo de &lt;tt class="docutils literal"&gt;Kivy Material Design&lt;/tt&gt;. Essa biblioteca está construída em cima do framework Kivy e entrega um conjunto de componentes ricos em recursos e propriedades utilizando o visual nativo do Android, no caso, o &lt;a class="reference external" href="https://material.io/"&gt;Material Design&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Por fim, é importante lembrar que o foco dos grupo que desenvolve o framework Kivy é, num primeiro momento, fornecer total compatibilidade com as plataformas suportadas. Por essa razão, o foco do desenvolvimento não está direcionado com a aparência dos Widgets e nem na quantidade de recursos que cada componente possui. Ao que tudo indica, o principal objetivo é fazer com que todos os recursos de todas as plataformas funcionem sem quaisquer problema - o que é excelente!&lt;/p&gt;
&lt;img alt="Projeto KivyMD que disponibiliza um conjunto de componetes que possuem a estilização do Material Design da Google e os Widgets incorporão o funcionamento conforme a especificação." src="../images/blog/kivymd.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="games"&gt;
&lt;h2&gt;GAMES&lt;/h2&gt;
&lt;p&gt;O framework Kivy, como já dito várias vezes, foi desenhado para ser executado sob a placa gráfica e inclusive, no modo de aceleração gráfica. A biblioteca entrega um módulo para a construção gráfica bastante completo estando assim, uma camada acima da API OpenGL.&lt;/p&gt;
&lt;p&gt;O módulo gráfico que fornece as classes e funções para o desenho vetorial 2D pode ser utilizado com a linguagem Kivy, o que nos permite por exemplo, declarar um círculo e definir a propriedade raio. Ou seja, criamos imagens vetoriais facilmente e com uma linguagem de marcação, semelhante ao que temos com o formato de &lt;a class="reference external" href="https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/SVG_Image_Tag"&gt;imagem SVG (Scalable Vector Graphics)&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;O suporte a renderização de imagem é excelente e, tendo como aliado bibliotecas gráficas como &lt;cite&gt;OpenCV (Open Source Computer Vision Library)&lt;/cite&gt; é possível tratar imagem sendo o limite a imaginação.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="audio-e-video"&gt;
&lt;h2&gt;ÁUDIO E VÍDEO&lt;/h2&gt;
&lt;p&gt;O suporte a áudio e a vídeo são implementações estáveis e bastante testadas. Há inclusive player musicais construidos só com as bibliotecas nativas do Python. Inclusive, há suporte a Stream, tanto de áudio como de vídeo.&lt;/p&gt;
&lt;p&gt;Um exemplo interessante é o Widget Image que renderiza imagens no Path local ou remoto, abstraindo todo o donwload e abertura dos desenvolvedores finais.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="projeto-kivent"&gt;
&lt;h2&gt;PROJETO KivEnt&lt;/h2&gt;
&lt;p&gt;O projeto &lt;a class="reference external" href="http://kivent.org/"&gt;KivEnt&lt;/a&gt; é um subprojeto do projeto Kivy voltado para o desenvolvimento de games e aplicações gráficas interativas em tempo real.&lt;/p&gt;
&lt;p&gt;Esse é uma projeto que vem sendo desenvolvido, principalmente, por outro grupo de desenvolvedores, porém, é um repositório do projeto Kivy.&lt;/p&gt;
&lt;p&gt;Toda a biblioteca vem sendo construida com a linguagem Python e os módulos que normalmente são responsáveis pelos gargalos, utilizam a linguagem Cython, conseguindo assim, performance semelhante ao que temos com a linguagem C.&lt;/p&gt;
&lt;p&gt;O núcleo do KivEnt é a biblioteca Kivy, ou seja, a parte principal da Engine não possui dependencias.&lt;/p&gt;
&lt;p&gt;Alguns módulos em especifico utilizam a biblioteca &lt;a class="reference external" href="https://chipmunk-physics.net/"&gt;Chipmunk2D&lt;/a&gt; que é um uma simples, leve e rápida plataforma para corpos 2D rígido e que facilita a implementação da matemática, ou seja, a física do game.&lt;/p&gt;
&lt;p&gt;Sendo o Chipmunk2D escrito em C, há uma versão em Cython disponibilizando um bind fácil e rápido para utilização com Python. A plataforma está disponibilizada com a licença MIT.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="a-magica-do-cython"&gt;
&lt;h2&gt;A MÁGICA DO CYTHON&lt;/h2&gt;
&lt;p&gt;Cython é um superconjunto da linguagem Python e seu objetivo é a conversão de código Python para código C (nativo). Cython é o nome de uma linguagem e também, o nome do compilador. A linguagem Cython estende a linguagem Python utilizando a mesma sintaxe, porém, trazendo um conjunto de instruções que otimizam a conversão para código C, aumentando a performance em alguma situações em dezenas, centenas e até, acredite, milhares de vezes! O principal objetivo da linguagem Cython é a otimização de trechos especificos que requerem alta performance sem quebrar a compatibilidade. Como o código Python nativo é reconhecido pelo compilador Cython, é possível a conversão de módulos ou mesmo funções sem perder a compatibilidade.&lt;/p&gt;
&lt;p&gt;O Cython fornece suporte a versão 2x e 3x do Python, ou seja, conseguimos facilmente transformar as estruturas simplificadas do Python para código C nativo e sendo capaz de otimizar trechos especificos através de um processo muito semelhante a refatoração de código. A refatoração neste caso deve ser entendida como a alteração de instruções, tipagem de variáveis e parâmetros e etc.&lt;/p&gt;
&lt;p&gt;Após converter o código de Python para C, o resultado é enviado para o GCC e o mesmo produz o executável compatível com a plataforma em que estiver sendo utilizada, pela simples compilação de código C, de forma semelhante e com performance que chega muito próxima a um código que foi de fato escrito nativamente em C.&lt;/p&gt;
&lt;p&gt;Como principais características, podemos citar que a linguagem Cython utiliza tipagem estática e dinâmica, e, como sabemos, quando mais tipado for, mais otimizado a execução será.&lt;/p&gt;
&lt;p&gt;Por fim, conseguiremos em algumas situações uma melhora na performance de até 5000 vezes! Inclusive, na página do projeto é possível encontrar várias ferramentas e códigos para que possamos mensurar em nosso computador.&lt;/p&gt;
&lt;p&gt;A seguir, temos um exemplo de um simples trecho de código utilizando somente a linguagem Cython.&lt;/p&gt;
&lt;div class="section" id="declaracao-de-variaveis-com-cython"&gt;
&lt;h3&gt;DECLARAÇÃO DE VARIÁVEIS COM CYTHON&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;cdef&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nf"&gt;j&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nf"&gt;k&lt;/span&gt;
&lt;span class="k"&gt;cdef&lt;/span&gt; &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="nf"&gt;f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;g&lt;/span&gt;[42], *&lt;span class="nf"&gt;h&lt;/span&gt;

&lt;span class="k"&gt;cdef&lt;/span&gt; &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="nf"&gt;Grail&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt;
    &lt;span class="nb"&gt;float&lt;/span&gt; &lt;span class="n"&gt;volume&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="declaracao-de-classe-e-funcao-em-cython"&gt;
&lt;h3&gt;DECLARAÇÃO DE CLASSE E FUNÇÃO EM CYTHON&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;cdef&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nf"&gt;A&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;cdef&lt;/span&gt; &lt;span class="nf"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;A&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="alocacao-de-memorica-em-cython"&gt;
&lt;h3&gt;ALOCAÇÃO DE MEMÓRICA EM CYTHON&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt;
&lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;libc.stdlib&lt;/span&gt; &lt;span class="k"&gt;cimport&lt;/span&gt; &lt;span class="n"&gt;malloc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;free&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;random_noise&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;cdef&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;i&lt;/span&gt;
    &lt;span class="c"&gt;# allocate number * sizeof(double) bytes of memory&lt;/span&gt;
    &lt;span class="k"&gt;cdef&lt;/span&gt; &lt;span class="kt"&gt;double&lt;/span&gt; *&lt;span class="nf"&gt;my_array&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;double&lt;/span&gt; &lt;span class="o"&gt;*&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;malloc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;double&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;my_array&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="ne"&gt;MemoryError&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;ran&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;normalvariate&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;my_array&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ran&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mf"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="n"&gt;my_array&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;finally&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="c"&gt;# return the previously allocated memory to the system&lt;/span&gt;
        &lt;span class="n"&gt;free&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;my_array&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="o-kivy-e-o-cython"&gt;
&lt;h3&gt;O KIVY E O CYTHON&lt;/h3&gt;
&lt;p&gt;A biblioteca Kivy está debruçada sobre o Cython e todo código que escrevemos será compilado para código C. Os principais módulos da biblioteca estão escritos com Cython e utilizando tipagem estática com a finalidade e obter máxima performance.&lt;/p&gt;
&lt;p&gt;Porém, a maior parte da biblioteca não possui qualquer otimização, até porque, o objetivo é utilizar a linguagem Python. Por isso, podemos melhorar a performance das aplicações construídas com Kivy, bastando somente, converter as principais estruturas da biblioteca Kivy para código Cython.&lt;/p&gt;
&lt;p&gt;Converter código Python para Cython com a finalidade de obter uma melhor performance é uma atividade relativamente simples e pouco sujeito a erros, é uma solução para aqueles momento em que realmente precisamos de muita performance e, acredito que num futuro breve, várias partes da biblioteca serão convertidas a cada nova versão se houver empresas interessas em obter uma excelente performance.&lt;/p&gt;
&lt;p&gt;Essa é mais uma das vantagens de trabalhar com a biblioteca Kivy! Temos a capacidade de melhorar a performance facilmente da nossa aplicação, o que normalmente não acontece com outras bibliotecas.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="codigo-fonte"&gt;
&lt;h2&gt;CÓDIGO-FONTE&lt;/h2&gt;
&lt;p&gt;Uma das principais dúvidas em relação ao uso da biblioteca Kivy é o acesso e eventual roubo do código-fonte da nossa aplicação por terceiros. A resposta a essa dúvida é: o código Python ou o bytecode gerado (código otimizado) não precisa ser distribuído junto com a sua aplicação, pois o projeto Kivy disponibiliza ferramentas que geram executáveis nativo - código binários e otimizado para cada plataforma. Resumidamente, temos que o Python foi concebido como sendo uma linguagem interpretada, ou seja, todo computador capaz de rodar um Script Python, precisa antes instalar o interpretador. Um interpretador, como o nome sugere, é um programa nativo, especializado no reconhecimento de código Python, é executado em segundo plano (background), inicializado junto com o sistema operacional, por padrão fica inativo esperando o recebimento de código. Essa é a forma tradicional de execução de programas ou Scripts Python.&lt;/p&gt;
&lt;p&gt;Comumente dizemos que o interpretador do Python executado código Python, mas isso não é verdade. Por padrão, o código Python é transformado numa estrutura hierarquica otimizada chamada de bytecode. A geração de bytecode é realizada na primeira execução do Script e armazenada numa pasta que será criada no mesmo diretório em que o arquivo que contém código Python está armazenado.&lt;/p&gt;
&lt;p&gt;A metodologia de gerar bytecode com a finalidade de otimização e armazena-lo num arquivo no mesmo diretório é um padrão utilizado por diversos interpretadores de outras linguagens. Ainda que essa prática melhore significativamente o desempenho, fica muito distante se comparado com a execução de código nativo.&lt;/p&gt;
&lt;p&gt;Como dito, as aplicações Kivy são executadas pelos processadores de aceleração gráfica e portanto, é preciso converter todos os nossos códigos para o &amp;quot;idioma&amp;quot; do mundo gráfico.&lt;/p&gt;
&lt;p&gt;É importante dizer que o fato do código Python ser interpretado se deve a uma opção de projeto e não de uma imposição inerente a tecnologia ou a linguagem! Simplesmente, num primeiro momento, optou-se por interpretar, ao invés de gerar um executável. Portanto, conforme a linguagem foi sendo desenvolvida e sua sintaxe criada, o pessoal do projeto foi desenvolvendo com a C uma aplicação capaz de interpretar as instruções e a sintaxe da linguagem.&lt;/p&gt;
&lt;p&gt;O tempo passou, a linguagem se popularizou, e surgiram propostas de, ao invés de interpretar o código, porque não transformar o mesmo em executáveis?&lt;/p&gt;
&lt;p&gt;Ao desenvolvermos com Kivy, temos que o nosso código é interpretado durante o desenvolvimento, porém, quando formos distribuir a nossa aplicação, por exemplo, para a plataforma Android, o código Python que escrevemos e código  Python/Cython do framework Kivy serão transformados em código C puro!&lt;/p&gt;
&lt;p&gt;Concluído a conversão, o código C produzido poderá ser compilado por qualqauer compilador C de sua preferência.&lt;/p&gt;
&lt;p&gt;Por fim e reafirmando o que já foi dito, a biblioteca Kivy possui ferramentas para que o código seja ocultado naturalmente.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="livros-publicados"&gt;
&lt;h2&gt;LIVROS PUBLICADOS&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://shop.oreilly.com/product/0636920032595.do"&gt;*Creating Apps in Kivy - Mobile with Python* (Dusty Phillips) (2014) (O'Reilly Media)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.packtpub.com/application-development/kivy-blueprints"&gt;*Kivy Blueprints* (Mark Vasilkov) (2015) (PacktPub)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.packtpub.com/application-development/kivy-cookbook"&gt;*Kivy Cookbook* (Hugo Solis) (2015) (PacktPub)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.packtpub.com/application-development/kivy-interactive-applications-python"&gt;*Kivy: Interactive Applications in Python* (Roberto Ulloa) (2013) (PacktPub)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.packtpub.com/application-development/kivy-%E2%80%93-interactive-applications-and-games-python-second-edition"&gt;*Kivy - Interactive Applications and Games in Python* (Second Edition) (Roberto Ulloa) (2015) (PacktPub)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="pontos-negativos"&gt;
&lt;h2&gt;PONTOS NEGATIVOS&lt;/h2&gt;
&lt;p&gt;Há inúmeros pontos negativos no framework Kivy e o objetivo da eXcript não é em momento algum mascara-los ou então, promover cegamente determinada tecnologia. A seguir, pretendemos discutir e sempre mostrar os 2 lados da discussão.&lt;/p&gt;
&lt;div class="section" id="o-que-significa-aplicacao-nativa"&gt;
&lt;h3&gt;O QUE SIGNIFICA APLICAÇÃO NATIVA?&lt;/h3&gt;
&lt;p&gt;Executáveis gerados com ferramentas do projeto Kivy realmente são aplicações nativas, até porque, o sistema operacional para o qual o executável foi gerado executa o arquivo sem a necessidade de qualquer outro aplicativo.&lt;/p&gt;
&lt;p&gt;Talvez seja importante nos perguntarmos o que é uma aplicação nativa e quais seriam as características que essas aplicações deveriam ter para serem assim classificadas.&lt;/p&gt;
&lt;p&gt;Uma aplicação pode ser considerada nativa somente porque seu executável é reconhecido pelo SO hospedeiro?&lt;/p&gt;
&lt;p&gt;Uma aplicação para ser considerada nativa, deve utilizar as bibliotecas e recursos do SO hospedeiro?&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="quao-nativo-sao-os-executaveis-gerados-pelo-projeto-kivy"&gt;
&lt;h3&gt;QUÃO NATIVO SÃO OS EXECUTÁVEIS GERADOS PELO PROJETO KIVY?&lt;/h3&gt;
&lt;p&gt;Visando o desenvolvimento de aplicações multiplataforma, a biblioteca Kivy &lt;strong&gt;NÃO&lt;/strong&gt; utiliza a maior parte das bibliotecas fornecidas pelo SO hospedeiro. Até porque, cada plataforma disponibiliza uma interface de acesso diferente e assim, o projeto Kivy precisaria conhecer e se adaptar a cada SO a fim de utilizar suas bibliotecas.&lt;/p&gt;
&lt;p&gt;Utilizar as bibliotecas nativas de cada plataforma, normalmente é, a melhor forma de construção de aplicações para a mesma. Ou seja, a melhor forma de criarmos aplicações para o SO Microsoft Windows é utilizando, por exemplo, suas bibliotecas gráficas, o seu sistema de arquivo, as suas caixas de diálogo nativas e etc.&lt;/p&gt;
&lt;p&gt;O projeto Kivy raramente utiliza as ferramentas disponibilizadas pela plataforma hospedeira! Em cada executável gerado pelas ferramentas do projeto Kivy, é adicionado TODAS AS ferramentas que a aplicação precisará ou possa vir a precisar. Isso é comumente chamado de &amp;quot;reinvenção da roda&amp;quot;, até porque, pra que refazer o que já está pronto? Pra que tornar o executável mais &amp;quot;pesado&amp;quot; adicionando implementações que podem ser acessadas diretamente na plataforma?&lt;/p&gt;
&lt;p&gt;Na minha opinião, este é o maior problema do projeto Kivy, até porque, podemos dizer que estamos utilizando uma gambiarra! Pois, ao invés dos nossos programas funcionarem como o fabricante do Sistema Operacional determinou, estamos fazendo tudo ao nosso modo e da nossa maneira.&lt;/p&gt;
&lt;p&gt;MAS CALMA AI! &lt;strong&gt;TODO DESENVOLVIMENTO&lt;/strong&gt; híbrido é por &lt;strong&gt;natureza, definição e implementação&lt;/strong&gt; uma gambiarra. Portanto, o Kivy é somente mais uma gambiarra, tecnologias como &lt;a class="reference external" href="https://www.xamarin.com/"&gt;Xamrian&lt;/a&gt;, &lt;a class="reference external" href="https://www.sencha.com/products/touch/"&gt;Sencha Touch&lt;/a&gt;, &lt;a class="reference external" href="https://phonegap.com/"&gt;Phonegap&lt;/a&gt;, &lt;a class="reference external" href="https://software.intel.com/en-us/intel-xdk/documentation"&gt;Intel XDK&lt;/a&gt; e tantas outras opções...&lt;/p&gt;
&lt;p&gt;Podemos dizer que a melhor forma de usar um produto é seguindo as normas do fabricante, como também, utilizar as ferramentas por ele disponibilizado. Ainda que essa ideia não possa ser considerado um regra, na maior parte dos caso é. As ferramentas produzidas pelo fabricante foram feitas pelas mesmas pessoas ou por uma equipe próxima ao engenheiros responsáveis da plataforma e estes são, sem qualquer duvida, especialistas no funcionamento da tecnologia.&lt;/p&gt;
&lt;p&gt;Portanto, isso é uma verdade que não podemos ignorar! A melhor maneira de construir aplicações para uma plataforma é utilizando as ferramentas nativas ou seguindo as especificações e diretrizes oficiais do fabricante.&lt;/p&gt;
&lt;p&gt;Então, quando dizemos que é gerado um executável nativo, estamos realmente falando a verdade, porém, de nativo há somente a tela inicial, pois o restante, trata-se de simulação e emulação.&lt;/p&gt;
&lt;p&gt;Gigantes como &lt;a class="reference external" href="http://www.microsoft.com/"&gt;Microsoft&lt;/a&gt;, &lt;a class="reference external" href="http://www.adobe.com/"&gt;Adobe&lt;/a&gt; e &lt;a class="reference external" href="http://www.intel.com"&gt;Intel&lt;/a&gt; possuem suas próprias &amp;quot;gambiarras&amp;quot; e comercializam ferramentas que geram executáveis híbridos da mesma forma, mas de uma maneira diferente que o projeto Kivy o faz!&lt;/p&gt;
&lt;p&gt;A pergunta que devemos responder é: &amp;quot;uma aplicação pra ser realmente nativa, deve gerar um executável através da ferramenta do fabricante e utilizar as bibliotecas por este disponibilizado&amp;quot;?&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="utilizacao-de-recurso"&gt;
&lt;h3&gt;UTILIZAÇÃO DE RECURSO&lt;/h3&gt;
&lt;p&gt;Aplicações escritas com o framework Kivy utilizam mais recursos do dispositivo e aplicações que precisam ser executadas em background devem realizar testes de consumo de energético antes de iniciar o desenvolvimento.&lt;/p&gt;
&lt;p&gt;A biblioteca Kivy é executada em cima da placa de vídeo com a aceleração de vídeo ligada. Se o código fosse executado em cima do processador do dispositivo, haveria garga-los na renderização e é graças a aceleração de vídeo que há tantas ferramentas de desenvolvimento híbridas.&lt;/p&gt;
&lt;p&gt;Por fim, uma aplicação construída com o Kivy irá consumir maior carga energética e utilizará aproximadamente 20 mega de memória RAM. Com relação a memória RAM não há preocupação, até porque, a maior parte dos dispositivos atuais possuem quantidades generosas de memória RAM. Porém, o uso da bateria deve ser considerado e a única forma que você possui pra realmente ter certeza se o seu projeto pode ser construído com o Kivy será através da realização de testes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="tempo-de-abertura"&gt;
&lt;h3&gt;TEMPO DE ABERTURA&lt;/h3&gt;
&lt;p&gt;Aplicações Kivy possuem um tempo de carregamento maior quando comparado a aplicações nativas. A razão pelo tempo adicional se deve ao carregamento de bibliotecas e a inicialização de uma Máquina Virtual Python, ou seja, uma versão compacta do interpretador do Python.&lt;/p&gt;
&lt;p&gt;O tempo de abertura da aplicação tende a desaparecer com o tempo em vista da evolução do hardware&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="widgets-nativos"&gt;
&lt;h3&gt;WIDGETS NATIVOS&lt;/h3&gt;
&lt;p&gt;A biblioteca Kivy, ao contrário de outras biblioteca gráficas, não disponibiliza um conjunto de Widgets amplo e robusto para a construção de telas que permitam a entrada de dados pelo usuário.&lt;/p&gt;
&lt;p&gt;O foco da equipe é disponibilizar um framework que possas ser executado em várias plataformas nativamente e uma interface para acesso ao hardware simples e padronizada. Por isso, num primeiro momento, alguns usuários podem se decepcionar ao conhecer o catalogo de componentes.&lt;/p&gt;
&lt;p&gt;Há alguns projetos paralelos como o KivyMD que estão construindo mega pacotes de componentes seguindo um esquema de cores e estilos como por exemplo, o Material Design da Google.&lt;/p&gt;
&lt;p&gt;Portanto, a pequena quantidade de Widgets e a sua simplicidade não são um problema, mesmo assim, num primeiro momento, muitos usuários acabam frustrados com a pequena gama de opções.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="o-kivy-e-um-projeto-experimental"&gt;
&lt;h2&gt;O KIVY É UM PROJETO EXPERIMENTAL?&lt;/h2&gt;
&lt;p&gt;É comum que algumas pessoas sugiram que o framework Kivy seja um trabalho experimental ou então, um projeto que ainda está no início e ninguém sabe exatamente o seu futuro.&lt;/p&gt;
&lt;p&gt;O Kivy não pode mais ser considerado um projeto experimental! Nesse momento, a única coisa que o projeto não possui é uma grande empresa por detrás financiando-o (ainda).&lt;/p&gt;
&lt;p&gt;Na atual conjuntura, softwares desenvolvidos com o framework Kivy rodam em todas as plataformas que possuem suporte e nenhum problema de ordem maior vem sendo relatado. Obviamente que ainda existe muito a ser feito, principalmente em relação a compatibilidade entre todas as plataformas igualmente. No entanto, o desenvolvimento é contínuo e estável e, para ter certeza disso, basta analisar a &lt;a class="reference external" href="https://github.com/kivy/kivy/commits/master"&gt;lista de Commits do projeto no Github&lt;/a&gt; e analisar a quantidade de problemas relatados.&lt;/p&gt;
&lt;p&gt;O autor entende por experimental aquilo que não possui um funcionamento estável e previsível e portanto não deveria ser utilizado em projetos comerciais e sérios.&lt;/p&gt;
&lt;p&gt;Inclusive, neste momento, há grandes aplicações escritas em Kivy e que estão funcionando perfeitamente, vide o projeto &lt;a class="reference external" href="https://github.com/ODiogoSilva/TriFusion"&gt;TriFusion&lt;/a&gt; .&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="demais"&gt;
&lt;h2&gt;DEMAIS&lt;/h2&gt;
&lt;p&gt;O blog &lt;a class="reference external" href="http://cadernodelaboratorio.com.br/category/kivy/"&gt;Caderno de Laboratório&lt;/a&gt; foi o primeiro blog brasileiro a disponiblizar vários tutorias e diversos exemplos sobre como utilizar a biblioteca Kivy. O pessoal continua produzindo mais artigos sobre o Kivy e em Português, por isso, vale a pena conferir!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="casos-de-sucesso"&gt;
&lt;h2&gt;CASOS DE SUCESSO&lt;/h2&gt;
&lt;p&gt;A seguir temos uma breve lista de alguns projetos que servem para demonstrar o poder ilimitado do framework Kivy.&lt;/p&gt;
&lt;p&gt;RaceCaptureApp
´´´´´´´´´´´´´´&lt;/p&gt;
&lt;table class="docutils field-list" frame="void" rules="none"&gt;
&lt;col class="field-name" /&gt;
&lt;col class="field-body" /&gt;
&lt;tbody valign="top"&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;site:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;a class="reference external" href="https://www.autosportlabs.com/tag/race-capture-app/"&gt;https://www.autosportlabs.com/tag/race-capture-app/&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;source:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;a class="reference external" href="https://github.com/autosportlabs/RaceCapture_App"&gt;https://github.com/autosportlabs/RaceCapture_App&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;playstore:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;a class="reference external" href="https://play.google.com/store/apps/details?id=com.autosportlabs.racecapture"&gt;https://play.google.com/store/apps/details?id=com.autosportlabs.racecapture&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;img alt="Aplicativo RaceCapture mostrando a tela em que as informações são atualizadas em tempo real" src="../images/blog/race-capture-app1.jpg" /&gt;
&lt;img alt="Aplicativo RaceCapture" src="../images/blog/race-capture-app2.jpg" /&gt;
&lt;p&gt;O aplicativo RaceCaptureApp é uma aplicação embarcada que envia os dados dos pilotos em uma corrida e exibindo em uma outra aplicação em tempo real.&lt;/p&gt;
&lt;p&gt;Este aplicativo é amplo, possui dezenas de aperfeiçoamentos, faz uso direto das API dos vários dispositivos e é amplamente utilizado.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/autosportlabs/RaceCapture_App"&gt;https://github.com/autosportlabs/RaceCapture_App&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Kognitivo
´´´´´´´´´&lt;/p&gt;
&lt;table class="docutils field-list" frame="void" rules="none"&gt;
&lt;col class="field-name" /&gt;
&lt;col class="field-body" /&gt;
&lt;tbody valign="top"&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;site:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;a class="reference external" href="http://cheparev.com/kognitivo-challenge-your-brain/"&gt;http://cheparev.com/kognitivo-challenge-your-brain/&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;source:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;a class="reference external" href="https://github.com/eviltnan/kognitivo"&gt;https://github.com/eviltnan/kognitivo&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;playstore:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;a class="reference external" href="https://play.google.com/store/apps/details?id=org.kognitivo.kognitivo"&gt;https://play.google.com/store/apps/details?id=org.kognitivo.kognitivo&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;img alt="Aplicativo Kognitivo" src="../images/blog/kognitivoapp.png" /&gt;
&lt;p&gt;O Kognitivo é um jogo bastante inteligente e a aplicação na época do seu lançamento trouxe bastante implementações e integrações que nenhuma outra aplicação havia realizado.&lt;/p&gt;
&lt;p&gt;No final do ano de 2017 seu código fonte foi liberado no Github de forma que possamos estudá-lo.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/eviltnan/kognitivo.git"&gt;https://github.com/eviltnan/kognitivo.git&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;TriFusion
´´´´´´´´´&lt;/p&gt;
&lt;table class="docutils field-list" frame="void" rules="none"&gt;
&lt;col class="field-name" /&gt;
&lt;col class="field-body" /&gt;
&lt;tbody valign="top"&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;site:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;a class="reference external" href="http://odiogosilva.github.io/TriFusion/"&gt;http://odiogosilva.github.io/TriFusion/&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;source:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;a class="reference external" href="https://github.com/ODiogoSilva/TriFusion"&gt;https://github.com/ODiogoSilva/TriFusion&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;img alt="Aplicativo Científico TriFusion" src="../images/blog/trifusion.png" /&gt;
&lt;p&gt;Este talvez seja o projeto de código aberto utilizando o Kivy de maior relevância. Segundo a própria descrição do projeto que, mesmo sendo desenvolvido por um instituto de pesquisa Português e o desenvolvedor principal também ser Português, toda a documentação do software está em Inglês.&lt;/p&gt;
&lt;p&gt;A seguir, temos uma tradução adaptada de como o próprio projeto se descreve.&lt;/p&gt;
&lt;p&gt;TriFusion é uma GUI moderna e uma aplicação de linha de comando projetada para facilitar a vida de qualquer pessoa com dados de sequência de proteoma e/ou &lt;strong&gt;alignment sequence data&lt;/strong&gt; mais prazerosos. Independentemente da sua experiência em bioinformática, o &lt;tt class="docutils literal"&gt;TriFusion&lt;/tt&gt; é fácil de usar e oferece uma grande variedade de recursos poderosos para ajudá-lo a lidar com seus dados. Ao mesmo tempo, foi desenvolvido para lidar com a enorme quantidade de dados gerados hoje em dia.&lt;/p&gt;
&lt;p&gt;No site do projeto é possível baixar toda a documentação e possuir instalador para Windows, Linux e Mac.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://odiogosilva.github.io/TriFusion/"&gt;http://odiogosilva.github.io/TriFusion/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="kivy-3d"&gt;
&lt;h2&gt;KIVY 3D&lt;/h2&gt;
&lt;p&gt;O Kivy possui excelentes recursos para trabalhar com imagens em 3D. Inclusive, existe uma versão especializada e destinada somente para essa finalida. Nos links a seguir, você encontra mais informações.&lt;/p&gt;
&lt;img alt="Projeto para construção de aplicações em 3 dimensões" src="../images/blog/kivy3d.gif" /&gt;
&lt;/div&gt;
&lt;div class="section" id="veja-tambem"&gt;
&lt;h2&gt;VEJA TAMBÉM&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/instalacao-kivy-mac.html"&gt;Instalação do Kivy no Mac OSX&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/instalacao-kivy-ubuntu.html"&gt;Instalação do Kivy no Ubuntu&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="links-externos"&gt;
&lt;h2&gt;LINKS EXTERNOS&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/doc-kivy-ptbr.html"&gt;Documentação Oficial do Kivy em Português&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.python.org"&gt;Linguagem Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.java.com/"&gt;Linguagem Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/ProgrammingWithObjectiveC/Introduction/Introduction.html"&gt;Linguagem Objective-C&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.android.com/"&gt;Sistema Operacional Android&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.apple.com/ios/"&gt;Sistema Operacional iOS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://kivy.org/"&gt;Site do projeto Kivy (en)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/kivy/"&gt;Repositório no Github do projeto Kivy (en)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/kivy/kivy/"&gt;Código-Fonte da biblioteca Kivy (en)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.opengl.org/"&gt;OpenGL (en)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://kivymd.github.io/"&gt;Projeto KivyMD: Kivy Material Design (en)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://developer.android.com/ndk/index.html"&gt;Android NDK (en)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/kivy/buildozer"&gt;Repositório Buildozer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/kivy/plyer"&gt;Repositório Plyer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/kivy/PyJNIus"&gt;Repositório PyJNIus&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/kivy/pyobjus"&gt;Repositório PyObjus&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/kivy/python-for-android"&gt;Repositório Python for Android&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/kivy/kivy-ios"&gt;Repositório Kivy for iOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/kivy/audiostream"&gt;Repositório Audiostream&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/kivy/kivy-designer"&gt;Repositório Kivy Designer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/kivy/kivent"&gt;Repositório KivEnt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/kivy-garden"&gt;Repositório Garden&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.jetbrains.com/pycharm/"&gt;PyCharm (en)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://developer.android.com/studio/index.html"&gt;AndroidStudio (en)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://developer.apple.com/xcode/"&gt;Xcode (en)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://cython.org/"&gt;Cython (en)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://docs.oracle.com/javase/8/docs/technotes/guides/jni/"&gt;JNI (Java Native Interface) (en)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.python.org/2/library/2to3.html"&gt;2to3: Conversor de código escrito em Python2x para Python3x (en)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://khronos.org/"&gt;khronos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://jp.khronos.org/webgl/"&gt;WebGL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.khronos.org/webgl/wiki/WebGL_and_OpenGL"&gt;Wiki do WebGL e OpenGL ES 2.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.ft.unicamp.br/~magic/opengl/index2006.html"&gt;Introdução à computação gráfica com OpenGL - Marco Antonio G. Carvalho&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.inf.pucrs.br/~pinho/CG/Aulas/OpenGL/OpenGL.html"&gt;Computação Gráfica - Biblioteca Gráfica OpenGL - Márcio Sarroglia Pinho&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.inf.pucrs.br/~manssour/OpenGL/Tutorial.html"&gt;Introdução à OpenGL - Isabel Harb Manssour&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/SVG_Image_Tag"&gt;SVG - Scalable Vector Graphics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://opencv.org/"&gt;OpenCV (Open Source Computer Vision Library)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://chipmunk-physics.net/"&gt;Chipmunk2D&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://cymunk.readthedocs.io/en/latest/"&gt;Cymunk&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.microsoft.com/"&gt;Microsoft&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.adobe.com/"&gt;Adobe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.intel.com"&gt;Intel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.xamarin.com/"&gt;Xamarin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.sencha.com/products/touch/"&gt;Sencha Touch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://phonegap.com/"&gt;Phonegap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://software.intel.com/en-us/intel-xdk/documentation"&gt;Intel XDK&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="python"></category><category term="kivy"></category><category term="android"></category><category term="ios"></category><category term="kivy design"></category><category term="opengl"></category><category term="blog"></category></entry><entry><title>Alteração no uso da instrução global no Python 3.6</title><link href="http://excript.com/blog/variaveis-local-non-local.html" rel="alternate"></link><published>2017-08-30T04:00:00-03:00</published><updated>2017-08-30T04:00:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2017-08-30:/blog/variaveis-local-non-local.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Neste artigo veremos a alteração ocorrida na versão 3.6 do Python que estabelece um novo funcionamento para a instrução global.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="instrucao-global"&gt;
&lt;h2&gt;INSTRUÇÃO &lt;tt class="docutils literal"&gt;global&lt;/tt&gt;&lt;/h2&gt;
&lt;p&gt;A &lt;a class="reference external" href="https://www.python.org/downloads/release/python-360/"&gt;versão 3.6 do Python&lt;/a&gt; trouxe alterações que afetam nossos códigos legados fazendo com que os mesmos deixem de ser executado. Ao definir variáveis com uso …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Neste artigo veremos a alteração ocorrida na versão 3.6 do Python que estabelece um novo funcionamento para a instrução global.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="instrucao-global"&gt;
&lt;h2&gt;INSTRUÇÃO &lt;tt class="docutils literal"&gt;global&lt;/tt&gt;&lt;/h2&gt;
&lt;p&gt;A &lt;a class="reference external" href="https://www.python.org/downloads/release/python-360/"&gt;versão 3.6 do Python&lt;/a&gt; trouxe alterações que afetam nossos códigos legados fazendo com que os mesmos deixem de ser executado. Ao definir variáveis com uso da instrução &lt;tt class="docutils literal"&gt;global&lt;/tt&gt; ou &lt;tt class="docutils literal"&gt;nonlocal&lt;/tt&gt; será necessário que a mesma (a variável) já esteja declarada no escopo externo.&lt;/p&gt;
&lt;p&gt;Código legados ou a não utilização desta nova norma resultará numa  exceção &lt;a class="reference external" href="https://docs.python.org/3/tutorial/errors.html#syntax-errors"&gt;SintaxError&lt;/a&gt;, fazendo com que a aplicação seja finalizada.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="exemplos-reais"&gt;
&lt;h2&gt;EXEMPLOS REAIS&lt;/h2&gt;
&lt;p&gt;Vamos estudar as mudanças analisando o que ocorrerá ao tentarmos executar um código antigo que não tenha ainda se adequado ou então, caso não trabalharmos seguindo as novas regras:&lt;/p&gt;
&lt;p&gt;O exemplo a seguir mostra um código legado não adaptado.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;fun&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;

    &lt;span class="n"&gt;var&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
    &lt;span class="k"&gt;global&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;O código acima, se executado, produzirá a seguinte exceção:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;main.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
    &lt;span class="k"&gt;global&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;

&lt;span class="ne"&gt;SyntaxError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;var&amp;#39;&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;assigned&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;before&lt;/span&gt; &lt;span class="k"&gt;global&lt;/span&gt; &lt;span class="n"&gt;declaration&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;É interessante observar que a exceção será levantada no momento da execução do código --- o que é muito bom! O Python geralmente levanta a exceção quando o Cursor de Execução executa uma expressão problemática. Ainda que nada tenha sido dito, muito provavelmente a execução da aplicação será interrompida ainda no seu lançamento para que os desenvolvedores consigam facilmente identificar e não corram o risco de liberar códigos que não estejam adaptados.&lt;/p&gt;
&lt;p&gt;Por essa razão é que muito provavelmente fora dado um tratamento diferencial --- para que possamos, ainda nos testes, identificar e corrigir. Sem dúvida que o quanto antes o código se mostrar problemático, melhor será nossas vidas como desenvolvedores! Essa é, na minha opinião, a melhor solução --- do contrário, teríamos pacotes e scripts quebrando em todos os lugares.&lt;/p&gt;
&lt;p&gt;A notificação dessa alteração pode ser vista &lt;a class="reference external" href="https://docs.python.org/3/whatsnew/3.6.html#other-language-changes"&gt;nesta página&lt;/a&gt; .&lt;/p&gt;
&lt;p&gt;A PEP que propôs a alteração &lt;a class="reference external" href="https://www.python.org/dev/peps/pep-0526/#id11"&gt;pode ser acessada PEP 526&lt;/a&gt; .&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="conclusao"&gt;
&lt;h2&gt;CONCLUSÃO&lt;/h2&gt;
&lt;p&gt;Sendo este site voltado majoritariamente (no momento em que escrevo) destinado ao público estudante, poucos terão código legados para alterarem.&lt;/p&gt;
&lt;p&gt;Aos que tiverem códigos escritos e vierem a ter problemas, facilmente conseguirão corrigir.&lt;/p&gt;
&lt;p&gt;A minha situação é diferente de ambos os casos acima, pois, fazem 2 meses que lancei uma aula especial explicando a utilização das instruções &lt;tt class="docutils literal"&gt;local&lt;/tt&gt; e &lt;tt class="docutils literal"&gt;nonlocal&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Alterar uma aula nunca é fácil, pois, você precisa falar algo que será encaixado no meio de um contexto. Não corrigir a aula e deixar o problema é aparentemente muito mais fácil, porém, após anos, comprovarás que a quantidade de perguntas realizadas pelos seus alunos lhe consumiu mais tempo do que a difícil, chata e ingrata missão de alterar uma aula --- quem acaba de ser lançada.&lt;/p&gt;
&lt;p&gt;Isso é trabalhar com tecnologia. Viver mudando e fazendo os outros mudarem pelas nossas mudanças.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="links-externos"&gt;
&lt;h2&gt;LINKS EXTERNOS&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.python.org/downloads/release/python-360/"&gt;Lançamento da Versão 3.6 do Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.python.org/3/whatsnew/3.6.html#other-language-changes"&gt;Notificação de alteração na versão 3.6 (en)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.python.org/dev/peps/pep-0526/#id11"&gt;PEP 526 (en)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.python.org/3/tutorial/errors.html#syntax-errors"&gt;SintaxError&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="python"></category><category term="python36"></category><category term="local"></category><category term="nonlocal"></category><category term="blog"></category></entry><entry><title>O Python na Linha de Comando</title><link href="http://excript.com/blog/python-na-linha-de-comando.html" rel="alternate"></link><published>2017-05-26T23:50:00-03:00</published><updated>2017-05-26T23:50:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2017-05-26:/blog/python-na-linha-de-comando.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos a relação entre o Python e a linha de comando, seja no Windows, Linux ou Mac&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="introducao"&gt;
&lt;h2&gt;INTRODUÇÃO&lt;/h2&gt;
&lt;p&gt;É recorrente encontrarmos programadores iniciantes se referindo a IDE ou ao interpretador ou a linguagem Python de forma equivocada o que é bastante natural. Com a finalidade de entendermos cada …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos a relação entre o Python e a linha de comando, seja no Windows, Linux ou Mac&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="introducao"&gt;
&lt;h2&gt;INTRODUÇÃO&lt;/h2&gt;
&lt;p&gt;É recorrente encontrarmos programadores iniciantes se referindo a IDE ou ao interpretador ou a linguagem Python de forma equivocada o que é bastante natural. Com a finalidade de entendermos cada conceito vamos rever algumas definições elementares mas de suma importância.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="o-python-como-linguagem"&gt;
&lt;h2&gt;O PYTHON COMO LINGUAGEM&lt;/h2&gt;
&lt;p&gt;O Python é uma linguagem de programação de alto nível e sua especificação, ou seja, sua sintaxe e semântica são definidas por um grupo de desenvolvimento internacional. Todo trabalho produzido pela equipe pode é publicado no site oficial da linguagem &lt;a class="reference external" href="http://www.python.org"&gt;http://www.python.org&lt;/a&gt; .&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="o-python-como-interpretador"&gt;
&lt;h2&gt;O PYTHON COMO INTERPRETADOR&lt;/h2&gt;
&lt;p&gt;O mesmo grupo internacional que desenvolve a linguagem Python também desenvolve um interpretador para códigos Python.&lt;/p&gt;
&lt;p&gt;É importante observar a diferença entre estabelecer as normas de uma linguagem e o desenvolvimento de um interpretador ou compilador para a mesma.&lt;/p&gt;
&lt;p&gt;Atualmente é normal que o mesmo grupo que desenvolve a sintaxe de uma linguagem de programação também forneça um compilador ou interpretador, mas isso não é uma regra.&lt;/p&gt;
&lt;p&gt;Então eu lhe pergunto: quando alguém se refere ao Python, o mesmo estará querendo se referir a linguagem ou ao interpretador?&lt;/p&gt;
&lt;p&gt;É correto dizer que o Python é uma linguagem lenta?&lt;/p&gt;
&lt;p&gt;A verdade é que no dia-a-dia acabamos nos referindo ao compilador e a linguagem como sendo Python o que geralmente não acarreta em problemas, porém, dizer que o Python é uma linguagem lenta é por definição um erro.&lt;/p&gt;
&lt;p&gt;O que pode ser lento é o interpretador da linguagem Python escrito pelo grupo oficial, porém, a linguagem Python também pode ser compilada e sua performance quando executada chega bastante perto de um código implementado pela linguagem C!&lt;/p&gt;
&lt;p&gt;Portanto, vamos agora estabelecer alguns conceitos:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Python é uma linguagem&lt;/li&gt;
&lt;li&gt;Interpretador é uma aplicação que entende a linguagem Python&lt;/li&gt;
&lt;li&gt;Compilador é uma aplicação que transforma código Python em outro código, como por exemplo, o código de máquina&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="linha-de-comando"&gt;
&lt;h2&gt;LINHA DE COMANDO&lt;/h2&gt;
&lt;p&gt;O interpretador do Python é uma aplicação (um arquivo executável) que recebe o mesmo nome da linguagem. Podemos localizar o executável na raiz do diretório onde o interpretador foi instalador em nosso computador.&lt;/p&gt;
&lt;p&gt;Se formos até o diretório da instalação do Python numa máquina com Windows, encontraremos um arquivo de nome &lt;tt class="docutils literal"&gt;python.exe&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Caso venha a dar um duplo clique sobre o executável será aberto uma janela com o Prompt de Comando do Windows e nesta encontraremos o Modo Interativo do Python, ou seja, o local onde podemos digitar instruções Python, pressionar a tecla Enter que a instrução será processada e o resultado impresso na sequência.&lt;/p&gt;
&lt;img alt="Interpretador do Python sendo executado no Prompt de Comando do Windows" src="../images/blog/python-interpretador.png" /&gt;
&lt;p&gt;Sendo o interpretador do Python uma aplicação executada na linha de comando, podemos executar através do prompt e dessa forma definir alguns parâmetros, como por exemplo, o nome do arquivo que contém código Python e que desejamos executar.&lt;/p&gt;
&lt;p&gt;Inicialmente, crie um arquivo de nome &lt;tt class="docutils literal"&gt;codigo.py&lt;/tt&gt; em qualquer diretório do seu computador. Em seguida, abra este arquivo com o Bloco de Notas ou então, qualquer outro editor de texto.&lt;/p&gt;
&lt;img alt="Arquivo de nome codigo.py criado num diretório do Windows" src="../images/blog/python-arquivo-codigo.png" /&gt;
&lt;p&gt;Insira uma única linha dentro do arquivo &lt;tt class="docutils literal"&gt;codigo.py&lt;/tt&gt;&lt;/p&gt;
&lt;!-- code-block::sh

print("Arquivo Python executado com sucesso!!") --&gt;
&lt;img alt="Arquivo de nome codigo.py contendo uma instrução Python que será executada no Prompt do Windows" src="../images/blog/python-arquivo-codigo-notepad.png" /&gt;
&lt;p&gt;Em seguida, salve as alterações que fizemos no arquivo &lt;tt class="docutils literal"&gt;codigo.py&lt;/tt&gt;, abra o Prompt de Comando do Windows, vá até o diretório em que você salvou o arquivo Python que acabamos de criar e digite a seguinte instrução no Prompt de Comando:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;python codigo.py
&lt;/pre&gt;&lt;/div&gt;
&lt;img alt="Arquivo contendo código Python sendo executado no Prompt do Windows" src="../images/blog/python-arquivo-codigo-cmd.png" /&gt;
&lt;p&gt;Se todos os passos anteriores foram executados com sucesso, será impresso no Prompt de Comando a frase que colocamos dentro da instrução &lt;code&gt;print()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;O exemplo que acabamos de realizar tem por objetivo demonstrar que arquivos Python são interpretados pelo executável do Python. Toda vez que desejarmos executar arquivos contendo código Python teremos que executar o executável &lt;tt class="docutils literal"&gt;python.exe&lt;/tt&gt; e em seguida informar o nome do arquivo a ser interpretado.&lt;/p&gt;
&lt;p&gt;É super importante entender que somente o arquivo &lt;tt class="docutils literal"&gt;python.exe&lt;/tt&gt; é capaz de interpretar código Python. E também, é super importante entender, que todas as mensagens de erro que recebemos quando após a execução de algum código Python, foi enviado pelo interpretador da linguagem para a saída padrão.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="o-python-e-as-ide-s"&gt;
&lt;h2&gt;O PYTHON E AS IDE's&lt;/h2&gt;
&lt;p&gt;Desenvolver aplicações pode se tornar uma atividade bastante complexa e demorada. Por exemplo, se estivermos escrevendo uma aplicação utilizando um editor de texto simples como o Notepad do Windows, as palavras da linguagem não serão coloridas e todas as vezes que desejarmos executar o código, teremos que abrir o Prompt de Comando, ir até o diretório em que estamos salvando os arquivos e por fim, executar o arquivo principal que contém código Python.&lt;/p&gt;
&lt;p&gt;No intento de evitar esse trabalho repetitivo foram criados aplicações para processamento de códigos cada vez mais avançados. Uma das características desses editores avançados, foi o envio de arquivos contendo códigos para o interpretador da linguagem com o pressionar de um única tecla.&lt;/p&gt;
&lt;p&gt;Eis que nascia o termo IDE (Ambiente de Desenvolvimento Integrado).&lt;/p&gt;
&lt;p&gt;A maior parte dos cursos de desenvolvimento de aplicações utiliza desde as primeiras aulas IDEs potentes que além de facilitar o desenvolvimento, também facilitam o aprendizado e o estudo da linguagem.&lt;/p&gt;
&lt;p&gt;A comodidade e facilidade que as IDEs proporcionam tem um lado negativo, que é o desconhecimento do processo fundamental da execução de código-fonte.&lt;/p&gt;
&lt;p&gt;É comum ler em fóruns ou então ouvir alunos confundindo a linguagem, o interpretador/compilador e a IDE! Por exemplo:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&amp;quot;O PyCharm está exibindo uma mensagem de erro&amp;quot;&lt;/li&gt;
&lt;li&gt;&amp;quot;Esse código não é executado no meu PyCharm&amp;quot;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Num primeiro momento pode parecer uma problema bobo, porém, enquanto o estudante não entende de fato os conceitos, toda a sua forma de pensar será prejudicada e toda a visão sobre como os computadores funcionam estará debilitado.&lt;/p&gt;
&lt;p&gt;Portanto, indiferente da IDE que você utilize, a mesma NUNCA terá acoplado junto ao seu código o interpretador da linguagem. A função da IDE nada tem a ver com a linguagem e portanto a função da IDE é enviar o arquivo contendo código como parâmetro para o interpretador da linguagem. Inclusive, isso pode ser observado na IDE PyCharm bem facilmente, veja a imagem a seguir:&lt;/p&gt;
&lt;img alt="Tela de configuração de execução e depuração do PyCharm" src="../images/blog/python-pycharm-run-debug-configurations.png" /&gt;
&lt;p&gt;Na imagem acima há 3 marcações, a seguir e definição de cada parte.&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Nome do arquivo que será enviado para o interpretador&lt;/li&gt;
&lt;li&gt;Nome do interpretador do Python selecionado&lt;/li&gt;
&lt;li&gt;Caminho para o local que contém os arquivos deste projeto&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="conclusao"&gt;
&lt;h2&gt;CONCLUSÃO&lt;/h2&gt;
&lt;p&gt;O objetivo desde breve trabalho é demonstrar que &lt;strong&gt;toda&lt;/strong&gt; IDE envia o nosso código para o interpretador/compilador. Em seguida, a mesma lê a resposta que o interpretador/compilador envia para a saída padrão e exibe para o programador.&lt;/p&gt;
&lt;p&gt;Portanto, uma IDE é uma camada de abstração entre o desenvolvedor e o interpretador/compilador. Essa camada tem por objetivo facilitar o desenvolvimento, porém, a mesma não se faz obrigatória e jamais fará parte do nosso software, ou seja, a IDE nunca estará contida na aplicação que iremos distribuir.&lt;/p&gt;
&lt;p&gt;De agora em diante, indiferente da linguagem, observe que TODAS possuem um ou vários interpretador/compiladores e também, possuem uma ou várias IDEs para o desenvolvimento de aplicações.&lt;/p&gt;
&lt;p&gt;Por fim, veja nas imagens finais as várias IDEs desenvolvidas pela JetBrains. Observe que &lt;strong&gt;todas&lt;/strong&gt; são muito parecidas, porém, cada uma é destinada ao desenvolvimento de uma linguagem. A JetBrains reutiliza um mesmo projeto para o desenvolvimento de várias IDEs, inclusive a JetBrains é a desenvolvedor da conceituada IDE do AndroidStudio!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="ide-intellij-idea"&gt;
&lt;h2&gt;IDE IntelliJ IDEA&lt;/h2&gt;
&lt;img alt="IDE de Desenvolvimento de Aplicações com a Linguagem Python IntelliJ IDEA" src="../images/blog/python-ide-intellij-idea.png" /&gt;
&lt;p&gt;Clique &lt;a class="reference external" href="https://www.jetbrains.com/idea/"&gt;aqui para ir ao site do IntelliJ IDEA&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="ide-pycharm"&gt;
&lt;h2&gt;IDE PyCharm&lt;/h2&gt;
&lt;img alt="IDE de Desenvolvimento de Aplicações com a Linguagem Python PyCharm" src="../images/blog/python-ide-pycharm.png" /&gt;
&lt;p&gt;Clique &lt;a class="reference external" href="https://www.jetbrains.com/pycharm/"&gt;aqui para ir ao site do PyCharm&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="links-externos"&gt;
&lt;h2&gt;LINKS EXTERNOS&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.jetbrains.com/idea/"&gt;IDE IntelliJ IDEA&lt;/a&gt;
&lt;a class="reference external" href="https://www.jetbrains.com/pycharm/"&gt;IDE PyCharm&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="python"></category><category term="cmd"></category><category term="linha de comando"></category><category term="blog"></category></entry><entry><title>Tradução da Documentação do Kivy para o Português</title><link href="http://excript.com/python/doc-kivy-ptbr.html" rel="alternate"></link><published>2017-04-25T07:00:00-03:00</published><updated>2017-04-25T07:00:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2017-04-25:/python/doc-kivy-ptbr.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Está disponível a primeira versão da documentação do projeto Kivy traduzido para o Português.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="lancamento"&gt;
&lt;h2&gt;LANÇAMENTO&lt;/h2&gt;
&lt;p&gt;Hoje é um dia especial!&lt;/p&gt;
&lt;p&gt;Estamos disponibilizando publicamente o PDF contendo a documentação da biblioteca Kivy em Português a quem interessar!&lt;/p&gt;
&lt;p&gt;A tradução da documentação do projeto Kivy para o Português é uma iniciativa da …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Está disponível a primeira versão da documentação do projeto Kivy traduzido para o Português.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="lancamento"&gt;
&lt;h2&gt;LANÇAMENTO&lt;/h2&gt;
&lt;p&gt;Hoje é um dia especial!&lt;/p&gt;
&lt;p&gt;Estamos disponibilizando publicamente o PDF contendo a documentação da biblioteca Kivy em Português a quem interessar!&lt;/p&gt;
&lt;p&gt;A tradução da documentação do projeto Kivy para o Português é uma iniciativa da &lt;a class="reference external" href="http://excript.com/"&gt;eXcript Brasil&lt;/a&gt;, idealizada e gerenciada por Cláudio Rogério Carvalho Filho junto com a comunidade brasileira.&lt;/p&gt;
&lt;p&gt;A &lt;a class="reference external" href="http://excript.com/"&gt;eXcript&lt;/a&gt; também tem o orgulho de disponibilizar o primeiro treinamento de Kivy em Português com mais de 3500 cópias vendidas!&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.udemy.com/python-para-android-ios-windows-linux-mac/learn/v4/?couponCode=PRELANCAMENTOB"&gt;Curso de Desenvolvimento Multiplataforma com Python e Kivy&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="colaboradores"&gt;
&lt;h2&gt;COLABORADORES&lt;/h2&gt;
&lt;p&gt;Em ordem alfabética:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Alexandre Ferreira&lt;/li&gt;
&lt;li&gt;Anderson Guerra&lt;/li&gt;
&lt;li&gt;Antonio Santos&lt;/li&gt;
&lt;li&gt;Caio J. Carvalho&lt;/li&gt;
&lt;li&gt;Cláudio Rogério Carvalho Filho&lt;/li&gt;
&lt;li&gt;Eduardo Melgaço&lt;/li&gt;
&lt;li&gt;Eudemir Vieira&lt;/li&gt;
&lt;li&gt;Everton Ventura&lt;/li&gt;
&lt;li&gt;Fabiano de Almeida&lt;/li&gt;
&lt;li&gt;Fausto Roger&lt;/li&gt;
&lt;li&gt;Felipe Nogueira de Souza&lt;/li&gt;
&lt;li&gt;Felype Bastos&lt;/li&gt;
&lt;li&gt;Flávio Andrei&lt;/li&gt;
&lt;li&gt;Gilberto dos Santos Alves&lt;/li&gt;
&lt;li&gt;Gregory Romano Casanova&lt;/li&gt;
&lt;li&gt;Henrique Nunes&lt;/li&gt;
&lt;li&gt;João Ponte&lt;/li&gt;
&lt;li&gt;Josafá&lt;/li&gt;
&lt;li&gt;Laender Oliveira&lt;/li&gt;
&lt;li&gt;Leandro Quadros Durães Braga&lt;/li&gt;
&lt;li&gt;Leonardo Castro&lt;/li&gt;
&lt;li&gt;Lucas Paim&lt;/li&gt;
&lt;li&gt;Lucas Rodrigues&lt;/li&gt;
&lt;li&gt;Lucas Teske&lt;/li&gt;
&lt;li&gt;Lucas Beneti&lt;/li&gt;
&lt;li&gt;Luciano Santos&lt;/li&gt;
&lt;li&gt;Luiz Guilherme Arruda&lt;/li&gt;
&lt;li&gt;Luke Feroz&lt;/li&gt;
&lt;li&gt;Marcelo Vieira Gonçalves&lt;/li&gt;
&lt;li&gt;Michel Ribeiro&lt;/li&gt;
&lt;li&gt;Paulo Henrique&lt;/li&gt;
&lt;li&gt;Paulo Santos&lt;/li&gt;
&lt;li&gt;Rafael Costa&lt;/li&gt;
&lt;li&gt;Robert Carlos&lt;/li&gt;
&lt;li&gt;Rodrigo Oliveira&lt;/li&gt;
&lt;li&gt;Sergio Junior&lt;/li&gt;
&lt;li&gt;Thadeu Santos&lt;/li&gt;
&lt;li&gt;Victor Sued&lt;/li&gt;
&lt;li&gt;Vinicius Ferreira de Souza&lt;/li&gt;
&lt;li&gt;Washington Guimaraes&lt;/li&gt;
&lt;li&gt;William da Rosa Garcia&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="download"&gt;
&lt;h2&gt;DOWNLOAD&lt;/h2&gt;
&lt;p&gt;Link da &lt;a class="reference external" href="http://excript.com/downloads/kivy-pt_br-excript.pdf"&gt;Documentação Oficial da Biblioteca Kivy em Português&lt;/a&gt; .&lt;/p&gt;
&lt;/div&gt;
</content><category term="python"></category><category term="kivy"></category><category term="documentação"></category><category term="tradução"></category><category term="download"></category><category term="blog"></category></entry><entry><title>Como Aprender a Programar</title><link href="http://excript.com/blog/como-aprender-a-programar.html" rel="alternate"></link><published>2017-01-04T15:00:00-02:00</published><updated>2017-01-04T15:00:00-02:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2017-01-04:/blog/como-aprender-a-programar.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Neste artigo será esclarecido algumas formas de como aprender a programar.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="pre-introducao"&gt;
&lt;h2&gt;PRÉ-INTRODUÇÃO&lt;/h2&gt;
&lt;p&gt;Se estás chegando agora ao mundo do desenvolvimento de software, preste atenção num pequeno detalhe: &lt;em&gt;NÃO ESTUDE 2 LINGUAGENS AO MESMO TEMPO!&lt;/em&gt; Escolha uma e siga adiante. É preciso dizer isso pois, este é o efeito colateral de …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Neste artigo será esclarecido algumas formas de como aprender a programar.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="pre-introducao"&gt;
&lt;h2&gt;PRÉ-INTRODUÇÃO&lt;/h2&gt;
&lt;p&gt;Se estás chegando agora ao mundo do desenvolvimento de software, preste atenção num pequeno detalhe: &lt;em&gt;NÃO ESTUDE 2 LINGUAGENS AO MESMO TEMPO!&lt;/em&gt; Escolha uma e siga adiante. É preciso dizer isso pois, este é o efeito colateral de haver cursos gratuitos de vários temas a um clique de distância! Esse é o &lt;em&gt;maior problema da era digital&lt;/em&gt;, da era da informação.&lt;/p&gt;
&lt;p&gt;Escolha uma linguagem e então, veja todos os vídeos no YouTube, compre todos os livros que puderes, faça curso, faça o que for conveniente e tudo que a sua disposição e dinheiro permitirem, porém, mantenha o foco numa única linguagem e acredite, há uma razão &lt;em&gt;NÃO&lt;/em&gt; óbvia do porque estou falando isso.&lt;/p&gt;
&lt;p&gt;Já respondendo o que queres perguntar: não há melhor linguagem e você terá que tomar a decisão sozinho! Se não conseguires chegar numa conclusão, se realmente ficares perdido, iniciei pelo Python, há curso gratuito no YouTube, há curso pago na Udemy e há livros a venda com preços que variam de ~30 a ~200 reais!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="introducao"&gt;
&lt;h2&gt;INTRODUÇÃO&lt;/h2&gt;
&lt;div class="youtube"&gt;&lt;iframe src="https://www.youtube.com/embed/TnaaMX1YiSo" width="800" height="500" allowfullscreen seamless frameBorder="0"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;p&gt;Este trabalho se propõem a guiar e esclarecer questões pertinentes ao estudo da lógica de programação, da programação e do desenvolvimento de software.&lt;/p&gt;
&lt;p&gt;Encorajo você, recém chegado, a perguntar e pedir esclarecimento das eventuais dúvidas que possam surgir e que não estão contempladas neste guia. &lt;em&gt;PORÉM, leia o artigo inteiro primeiro&lt;/em&gt;, depois, elabore sua pergunta e envie-a pelo sistema de mensagem Disqus que pode ser acessado no final da página.&lt;/p&gt;
&lt;p&gt;Na parte inferior da página há um FAQ, &lt;tt class="docutils literal"&gt;frequently asked questions&lt;/tt&gt; (Questões Frequentemente Perguntadas), leia-o, pois, será neste local que ao longo do tempo irei adicionando as dúvidas recorrentes de outros alunos.&lt;/p&gt;
&lt;p&gt;Não tome este trabalho como conclusivo, pois, ensiso e estudo &lt;em&gt;NÃO SÃO&lt;/em&gt; ciências exatas e para cada aluno há um melhor professor, melhor aula e melhor curso.&lt;/p&gt;
&lt;p&gt;É super importante ressaltar que &amp;quot;Curso de Programação&amp;quot;, atualmente, se tornou um mercado milionário. Descobri isso após muito tempo criando, gravando e publicando aulas no YouTube (gratuitamente). Por isso, a maior parte dos guias introdutórios e que prometem lhe guiar no primeiro momento, possuem motivações comerciais por detrás, cujo objetivo é lhe guiar até uma loja virtual ou então, obter seu e-mail em troca de dicas e sugestões (sugestões de como comprar o curso do autor da postagem).&lt;/p&gt;
&lt;p&gt;Este trabalho possui uma motivação genuína e honesta como &lt;em&gt;TODOS OS TRABALHOS&lt;/em&gt; feitos pela eXcript. Mesmo assim, não acredite totalmente no que falarei, analise você mesmo o que atende as suas expectativas. Não existem milagres e desconheço curso que lhe ensine a fazer algo interessante em menos de 10 horas de aulas com explicações e em menos de 100 horas de prática!&lt;/p&gt;
&lt;p&gt;É incrível, mas grande parte dos alunos que chegam até o meu curso comercial, não leram sequer a ementa proposta, não prestarão atenção no vídeo publicitário e após adquirir meu trabalho, se dirigem ao fórum e perguntão aquilo que deveriam ter analisado para julgarem se o trabalho era o que realmente estavam buscando.&lt;/p&gt;
&lt;p&gt;Por fim, lembre-se que a maior parte dos desafios que &lt;em&gt;TODOS&lt;/em&gt; iniciantes de programação enfrentam (e eu enfrentei também) está relacionado com detalhes &lt;em&gt;BOBÓCAS&lt;/em&gt; e que foram explicados, mas não foram pelo aluno assimiliados, como por exemplo, a utilização do ponto e vírgula.&lt;/p&gt;
&lt;p&gt;Se você fizer um curso através de vídeo aulas, após estuda-las e pratica-las, volte a primeira e assista tudo novamente! Sinceramente, não gosto de assitir aquilo que já vi, por isso, compro um outro curso para ter acesso a uma outra explicação, com livros, &lt;em&gt;SEMPRE&lt;/em&gt; faço isso, nos casos em que exista 2 livros sobre um mesmo tema.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="primeiro-curso"&gt;
&lt;h2&gt;PRIMEIRO CURSO&lt;/h2&gt;
&lt;p&gt;Se realmente desejas aprender, lembre-se que é necessário investir e, principalmente, lembre-se de um detalhe: &lt;em&gt;com a excelência não se economiza; estudo não é despesa; e livro nunca é demais!&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Mas calma ai! Não compre nada inicialmente! Há excelentes trabalhos no YouTube, GRATUITOS... e, falando a verdade, o melhor caminho é através destes materiais! &lt;em&gt;ANTES DE COMPRAR&lt;/em&gt;, assista a materiais com qualidade &lt;em&gt;PROFISSIONAL&lt;/em&gt; gratuitamente, além de ser o caminho mais barato, é o mais rápido, pois basta &lt;a class="reference external" href="https://www.youtube.com/watch?v=j94IGZmwtYI&amp;amp;list=PLesCEcYj003QxPQ4vTXkt22-E11aQvoVj"&gt;clicar neste link que serás encaminhado a primeira de 70 aulas!&lt;/a&gt;&lt;/p&gt;

    &lt;div class="admonitionblock important data-line-21"&gt;
        &lt;table&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                &lt;td class="icon"&gt;
                    &lt;i class="fa icon-important" title="Importante!"&gt;&lt;/i&gt;
                &lt;/td&gt;
                &lt;td class="content"&gt;
                    &lt;div class="paragraph data-line-22"&gt;
                        &lt;p&gt;Desconheço um único curso ou canal gratuito que lhe ensinará tudo que você precisa saber pra construir algo que realmente tenha valor e que os outros realmente paguem pelo serviço!&lt;/p&gt;
                    &lt;/div&gt;
                &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;p&gt;Neste momento, o melhor material disponível gratuitamente e o ÚNICO LOCAL para o estudo da &lt;em&gt;lógica de programação&lt;/em&gt;, &lt;em&gt;programação&lt;/em&gt; e &lt;em&gt;desenvolvimento de software&lt;/em&gt; em Português, e que também oferece suporte gratuito através de uma lista de discussão é o do canal da &lt;a class="reference external" href="https://www.youtube.com/excriptvideo"&gt;eXcript&lt;/a&gt; elabora e gravado por mim, Cláudio.&lt;/p&gt;
&lt;p&gt;Falarei de outros canais e iniciativas em seguida.&lt;/p&gt;

    &lt;div class="admonitionblock note data-line"&gt;
        &lt;table&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="icon"&gt;
                        &lt;i class="fa icon-note" title="Nota!"&gt;&lt;/i&gt;
                    &lt;/td&gt;
                    &lt;td class="content"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt;Julgo o meu trabalho como sendo o melhor pela simples razão de cumprir com a sua proposta, não tratar de outro assunto senão o proposto, e principalmente, por ter sido construído por alguém que aprendeu sozinho e conhece os desafios de estudar só.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;p&gt;O suporte é fornecido através da nossa &lt;a class="reference external" href="https://groups.google.com/forum/#!forum/excript"&gt;lista de discussão&lt;/a&gt;, portanto, receberás suporte não somente de vários outros alunos que ontem perguntaram e hoje respondem.&lt;/p&gt;

    &lt;div class="admonitionblock note data-line"&gt;
        &lt;table&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="icon"&gt;
                        &lt;i class="fa icon-note" title="Nota!"&gt;&lt;/i&gt;
                    &lt;/td&gt;
                    &lt;td class="content"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt;Uma lista de discussão funciona semelhante a um fórum de discussão, porém, você pode optar por receber as perguntar em sua caixa de e-mail, o que é bastante cômodo. Como são poucas as dúvidas, são poucos os e-mails recebidos. Veja mais em Google Groups.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;p&gt;Para conhecer melhor o &lt;a class="reference external" href="https://groups.google.com/"&gt;funcionamento de uma lista de discussão leia sobre o Google Groups&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="melhor-curso-para-quem-nao-sabe-nada"&gt;
&lt;h2&gt;MELHOR CURSO PARA QUEM NÃO SABE NADA&lt;/h2&gt;
&lt;p&gt;Há vários cursos que se propõem a ensinar programação sem que o aluno tenha qualquer conhecimento prévio. O curso de Python que desenvolvi também assume esta característica, porém, é necessário que o aluno saiba pelo menos como fazer o donwload e instalação de programas.&lt;/p&gt;
&lt;p&gt;Mesmo assim, é ensinado em vídeo como fazer o download e como proceder a instalação, e portanto, esse seria o mínimo requirido.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="e-a-logica-de-programacao"&gt;
&lt;h2&gt;E A LÓGICA DE PROGRAMAÇÃO?&lt;/h2&gt;
&lt;p&gt;O &lt;a class="reference external" href="https://www.youtube.com/playlist?list=PLesCEcYj003QxPQ4vTXkt22-E11aQvoVj"&gt;Curso de Python da eXcript&lt;/a&gt; ensina a lógica de programação com o uso da linguagem Python! É ensinado &lt;em&gt;TODO&lt;/em&gt; o fudamento, gradualmente, para que &lt;em&gt;QUAQUER&lt;/em&gt; pessoa consiga entender e, se você fazer no seu computador o que é feito em aula, é garantido que irás aprender!&lt;/p&gt;
&lt;p&gt;A melhor parte do estudo da lógica de programação é que conseguimos facilmente reconhecer se &lt;em&gt;SABEMOS&lt;/em&gt; ou &lt;em&gt;NÃO SABEMOS&lt;/em&gt;. Ou você entendeu, ou você não entendeu. Não há meio termo. Há o aprendizado fragmentado, ou seja, você consegue implementar uma condição mas não sabe verificar determinada informação.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="e-o-portugol"&gt;
&lt;h2&gt;E O PORTUGOL?&lt;/h2&gt;
&lt;p&gt;É comum o ensino da lógica de programação com linguagens que possuem suas estruturas utilizando o idioma Português. É uma opção, uma metodologia de estudo e ensino, porém, NÃO EXISTE um único trabalho ou estudo que demonstre que o entendimento e a assimilação são melhores.&lt;/p&gt;
&lt;p&gt;Quando falo &lt;tt class="docutils literal"&gt;estruturas da linguagem&lt;/tt&gt;, estou me referindo a algumas palavras que são reservadas e que desempenham uma tarefa especifica, por exemplo.&lt;/p&gt;
&lt;p&gt;Quando desejamos verificar uma condição, ou seja, desejamos avaliar uma expressão, a estrutura (palavra chave) da linguagem Python é a seguinte:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;é_verdadeiro&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;sim&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;não&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima utilizamos 2 palavras chaves da linguagem Python, o &lt;code&gt;if&lt;/code&gt; e o &lt;code&gt;else&lt;/code&gt;. A palavra &lt;code&gt;if&lt;/code&gt; significa em Português SE (&amp;quot;SE isso for verdadeiro&amp;quot;, &amp;quot;SE o número for maior que&amp;quot;). A palavra &lt;code&gt;else&lt;/code&gt; significação SENÃO.&lt;/p&gt;
&lt;p&gt;Ou seja, a seguir temos o mesmo código, porém, escrito em &lt;em&gt;Portugol&lt;/em&gt;, isto é, utilizando as estruturas em Português.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;SE&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;é_verdadeiro&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;imprime_na_tela&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;sim&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;SENÃO&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;imprime_na_tela&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;não&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Resumidamente, a questão é a seguinte: há aproximadamente 10 palavrinhas em Inglês que são quase que universalmente utilizadas pelas linguagens de programação que você precisaria &amp;quot;decorar&amp;quot;. Porém, cada palavrinha é apresentada e explicada separadamente, PORTANTO, não há uma &amp;quot;carga inicial&amp;quot;.&lt;/p&gt;
&lt;p&gt;A linguagem Portugol &amp;quot;facilita&amp;quot; ao utilizar os termos em Português, SOMENTE ISSO! E sinceramente, não vejo vantagens, salvo no ensino infantil.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="quem-ensina-programacao-com-python-no-brasil"&gt;
&lt;h2&gt;QUEM ENSINA PROGRAMAÇÃO COM PYTHON NO BRASIL?&lt;/h2&gt;
&lt;p&gt;A USP (Universidade de São Paulo) já utilizou diversas linguagens para o ensino da disciplina &lt;a class="reference external" href="https://www.ime.usp.br/~mac2166/gerais/"&gt;MAC2166 Introdução à Computação e em 2016 a linguagem Python foi adotada oficialmente&lt;/a&gt; .&lt;/p&gt;
&lt;blockquote&gt;
Ao longo dos anos, MAC2166 utilizou diversas linguagens de programação: Fortran, Pascal, C e Python. Em 2016, serão utilizadas a linguagem Python (nas turmas da Grande áreas Civil, Mecânica, e Química) e C (nas turmas da Grande área Elétrica).
&lt;a class="reference external" href="https://www.ime.usp.br/~mac2166/gerais/"&gt;https://www.ime.usp.br/~mac2166/gerais/&lt;/a&gt;&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="melhor-linguagem-de-programacao"&gt;
&lt;h2&gt;MELHOR LINGUAGEM DE PROGRAMAÇÃO&lt;/h2&gt;
&lt;p&gt;Produzi um trabalho em vídeo falando sobre &amp;quot;A melhor linguagem de Programação&amp;quot; que você pode assistir no link a seguir.&lt;/p&gt;
&lt;p&gt;Recomendo assistir o primeiro e o segundo episódio!&lt;/p&gt;
&lt;div class="section" id="parte-i"&gt;
&lt;h3&gt;PARTE I&lt;/h3&gt;
&lt;div class="youtube"&gt;&lt;iframe src="https://www.youtube.com/embed/hzb3dL9luf0" width="800" height="500" allowfullscreen seamless frameBorder="0"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class="section" id="parte-ii"&gt;
&lt;h3&gt;PARTE II&lt;/h3&gt;
&lt;div class="youtube"&gt;&lt;iframe src="https://www.youtube.com/embed/vi8AK-gfO0g" width="800" height="500" allowfullscreen seamless frameBorder="0"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="novo-na-programacao"&gt;
&lt;h2&gt;NOVO NA PROGRAMAÇÃO?&lt;/h2&gt;
&lt;p&gt;De agora em diante, a cada nova aula, iremos desenvolver um novo código que abordara os conceitos que estamos estudando. A minha sugestão é que cries um novo arquivo para cada aula e &lt;strong&gt;sempre&lt;/strong&gt; digite o mesmo código que estamos construindo no vídeo.&lt;/p&gt;
&lt;p&gt;A programação, a construção de códigos, pode ser estudada, obviamente, da maneira que preferires. Porém, ao longo dos anos, após ter estudado várias linguagens, aprendi sutilezas no estudo de novas linguagens que acabaram se tornando regras para quando estudo uma nova linguagem.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="pratique-como-o-instrutor"&gt;
&lt;h2&gt;PRATIQUE COMO O INSTRUTOR&lt;/h2&gt;
&lt;p&gt;A ideia mais simples e funcional é fazer tudo da mesmas forma que é feito no vídeo, livro ou tutorial. Essa é uma regra fundamental que muitos alunos ao estudar programação não adotam.&lt;/p&gt;
&lt;p&gt;Muito provavelmente ao assistir a vídeo aula você irá entender os conceitos, as instruções e as ideias que estão sendo ensinadas. Porém, se não copiares o que está sendo feito, acredite, o seu aprendizado será diferente, e, muito provavelmente o teu rendimento será inferior.&lt;/p&gt;
&lt;p&gt;Por mais simples que possa parecer, por mais bobo que possa ser o código, é super importante fazer o mesmo no seu computador. O simples fato de digitarmos um código, executarmos, obtermos um valor de retorno faz com que o nosso cérebro assimile uma nova idea como verdadeira e funcional. Com o tempo, perceberás que muitas vezes irás digitar um exemplo errado, outras, irás esquecer algum sinal e no momento em que executares o código, será levantado um erro que terás que resolver.&lt;/p&gt;
&lt;p&gt;Acredite! Resolver esses problemas, talvez, seja mais importante do que assistir a próxima aula. Por isso, não avance antes de conseguir obter o mesmo resultado! No mínimo, sempre digite e execute o código proposto para o estudo, em seguida, analise cada espaço, cada vírgula, cada sinalização que foi utilizada pelo autor.&lt;/p&gt;
&lt;p&gt;Obviamente, tudo tem um limite e você deve conhece-lo! Não estou dizendo para ficar 1 semana em cima de um mesmo código, porém, investir algumas horas no entendimento de um pequeno trecho de código é super natural e isso acontece com todos!&lt;/p&gt;
&lt;p&gt;As situações adversas que defrontaremos ao copiarmos os exemplos estudados irá se acumulando e se tornará o que chamamos de bagagem ou então experiência. Quanto mais cruel o erro, quanto mais idiota o problema, muito mais raramente esqueceremos após descobrirmos o problema ou encontrarmos a solução. Por isso a necessidade de copiar os exemplos e sempre conferir se o resultado obtido é o mesmo.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="o-que-e-experiencia"&gt;
&lt;h2&gt;O QUE É EXPERIÊNCIA?&lt;/h2&gt;
&lt;p&gt;Após muito analisar, conclui que experiência é o acumulo de situações adversas que enfrentamos ao utilizar alguma ferramenta.&lt;/p&gt;
&lt;p&gt;Por exemplo, todos sabemos que um mecânico de carro experiente reconhece muito dos problemas somente escutando o barulho ou observando alguma reação. Aprendi que isso é experiência e o mesmo acontece na programação.&lt;/p&gt;
&lt;p&gt;Após utilizarmos por bastante tempo uma linguagem, ou então, após trabalharmos bastante tempo com determinado framework, receberemos centenas de mensagens de erro e, muitas vezes, como essas mensagens estão em Inglês, nem entenderemos o seu verdadeiro significa. Mesmo assim, mesmo se a pessoa não entende a mensagem de erro, com o tempo, após receber essa mensagem centenas de vezes, o mesmo já saberá qual o problema ou então, saberá pelo menos, o que está acontecendo e o que deve ser feito.&lt;/p&gt;
&lt;p&gt;Ocorre que com o passar dos anos criamos intimidades com as tecnologias que utilizamos e, mais ainda, criamos um sentido, uma percepção aguçada, seja ao receber mensagens de retorno, seja pela performance que o código foi executado. Essa percepção não está e jamais estará escrita ou gravada em livros e só pode ser adquirida através da utilização de uma determinada tecnologia.&lt;/p&gt;
&lt;p&gt;E neste ponto é onde reside o que chamamos no início de &amp;quot;dificuldade&amp;quot;! Sempre teremos dificuldades com tudo quem não tenhamos estabelecido uma relação e vivenciado vários momentos. Por isso é que o início é sempre tão complicado o estudo de qualquer tecnologia. Todas as mensagens, todos os problemas e tudo que acontece é novo e, por nunca antes termos presenciado determinada situação, não sabemos como proceder. O detalhe é que isso acontece com todos e, a diferença daqueles que irão aprender em relação aos que desistirão está somente no fato de saber lidar com o desconhecido, ter a paciência consigo e entender o momento que estamos vivendo.&lt;/p&gt;
&lt;p&gt;Após conseguirmos realmente entender os fenômenos decorrentes do estudo de novas tecnologias, após aprendermos que o início sempre é perturbado porque veremos muitas situações que nunca antes vimos, somente após REALMENTE aprendermos que esses fenômenos são naturais e tão logo passarão é que de fato, conseguiremos entrar num novo nível de estudo e aprendizado.&lt;/p&gt;
&lt;p&gt;Acredite, saber reconhecer esses momentos faz total diferença e irá impedir que fiquemos muitas vezes irritados os que tenhamos sentimentos ruins a respeitos de nós mesmos.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="faq"&gt;
&lt;h2&gt;FAQ&lt;/h2&gt;
&lt;p&gt;A seguir, respondemos as algumas das principais dúvidas que são recorrentes aos iniciantes. Utilize a caixa de comentário no final desta página para perguntar!&lt;/p&gt;
&lt;div class="section" id="e-dificil-aprender-a-programar"&gt;
&lt;h3&gt;É DIFÍCIL APRENDER A PROGRAMAR?&lt;/h3&gt;
&lt;p&gt;Aprender uma linguagem de programação é um estudo relativamente fácil. Escrever software e criar soluções possui complexidade infinita, até porque, a programação pode ser empregada em qualquer área do conhecimento humano.&lt;/p&gt;
&lt;p&gt;Costumo dizer que aprender a programar é fácil até porque, se comparada com o desafio que vem em seguida, ou seja, utilizar as estrutras de uma linguagem de programação para desenvolver uma solução computadorizada é o verdadeiro desafio.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="devo-aprender-com-python-se-quero-programar-com-java-c-php"&gt;
&lt;h3&gt;DEVO APRENDER COM PYTHON SE QUERO PROGRAMAR COM JAVA/C#/PHP?&lt;/h3&gt;
&lt;p&gt;Você pode aprender lógica de programação com praticamente QUALQUER linguagem de programação imperativa (Python, C, C++, C#, Java, PHP, JavaScript, Swift e etc) e você encontrará cursos e livros que assumem esse compromisso!&lt;/p&gt;
&lt;p&gt;PORÉM, o Python possui algo que não há como explicar em palavras que faz desta linguagem um caminho &amp;quot;mais agradável&amp;quot; aos iniciantes.&lt;/p&gt;
&lt;p&gt;VOCÊ DEVE saber de um detalhe: após a primeira linguagem as demais linguagens IMPERATIVAS serão moleza! O problema é somente a primeira!&lt;/p&gt;
&lt;p&gt;Portanto, como é MUITO comum utilizarem a linguagem Portugol que, de fato, NÃO SERVE para nada, salvo o estudo, porque não aprender com uma linguagem que VOCÊ IRÁ utilizar de certeza absoluta em sua vida, indiferente de qual linguagem você decidir posteriormente estudar e utilizar profissionalmente.&lt;/p&gt;
&lt;p&gt;Para conhecer mais sobre o Python, &lt;a class="reference external" href="http://excript.com/curso-de-python.html"&gt;veja o artigo de abertura do curso&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="veja-tambem"&gt;
&lt;h2&gt;VEJA TAMBÉM&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/curso-de-python.html"&gt;Curso de Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/blog/curso-de-desenvolvimento-de-aplicacoes-comerciais-com-python-e-kivy.html"&gt;Desenvolvimento de Alicações Comerciais com Python e Kivy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="programação"></category><category term="lógica"></category><category term="lógica de programação"></category><category term="blog"></category></entry><entry><title>Aplicações Comerciais com Python</title><link href="http://excript.com/blog/curso-de-desenvolvimento-de-aplicacoes-comerciais-com-python-e-kivy.html" rel="alternate"></link><published>2016-11-27T21:00:00-02:00</published><updated>2016-11-27T21:00:00-02:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-11-27:/blog/curso-de-desenvolvimento-de-aplicacoes-comerciais-com-python-e-kivy.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Está disponível o primeiro Curso de Desenvolvimento de Aplicações Comerciais com Python e Kivy&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;APLICAÇÕES COMERCIAIS COM PYTHON&lt;/h2&gt;
&lt;p&gt;Galera, é com muito orgulho que venho tornar público o Curso de Desenvolvimento de Aplicações Comerciais com Python e Kivy! Um treinamento que lhe ensinará a construir com Python aplicações que são …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Está disponível o primeiro Curso de Desenvolvimento de Aplicações Comerciais com Python e Kivy&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;APLICAÇÕES COMERCIAIS COM PYTHON&lt;/h2&gt;
&lt;p&gt;Galera, é com muito orgulho que venho tornar público o Curso de Desenvolvimento de Aplicações Comerciais com Python e Kivy! Um treinamento que lhe ensinará a construir com Python aplicações que são executadas, nativamente, em Android e iOS, Windows, Linux e MacOSX.&lt;/p&gt;
&lt;p&gt;Este também é o primeiro curso de Kivy em Português, e, sério, o framework foi abordado em detalhes, como também, são construídos centenas de exemplos. São mais de 10 horas de aula estudando só e somente só a biblioteca Kivy!!&lt;/p&gt;
&lt;p&gt;Este é o resultado de mais de 1 ano de trabalho e também, hoje, já são 6 meses de gravações, um trabalho diário e integral, planejando cada aula, cada exercício de forma a ensinar da maneira mais fácil, com os melhores exemplos, e a melhor explicação!&lt;/p&gt;
&lt;p&gt;Espero que gostem e sério mesmo, quero ver o nome da eXcript dentro das aplicações de vocês!!!&lt;/p&gt;
&lt;p&gt;Para utilizar o bônus de desconto do pré-lançamento, utilize este link: &lt;a class="reference external" href="https://goo.gl/ylr0Qg"&gt;https://goo.gl/ylr0Qg&lt;/a&gt;&lt;/p&gt;
&lt;div class="youtube"&gt;&lt;iframe src="https://www.youtube.com/embed/E0YU3d4Vvxs" width="800" height="500" allowfullscreen seamless frameBorder="0"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;
</content><category term="curso"></category><category term="python"></category><category term="kivy"></category><category term="blog"></category></entry><entry><title>Estruturas de Dados Lista em Python</title><link href="http://excript.com/python/estruturas-de-dados-listas-python.html" rel="alternate"></link><published>2016-11-12T12:14:00-02:00</published><updated>2016-11-12T12:14:00-02:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-11-12:/python/estruturas-de-dados-listas-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nessa aula vamos estudar o conceito de lista analisado sob o conceito de Estrutura de Dados. Analisaremos a definição primitiva de lista, como também, a definição primitiva de itens, ou seja, os elementos contidos numa lista.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="introducao-as-listas"&gt;
&lt;h2&gt;INTRODUÇÃO ÀS LISTAS&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Lista&lt;/strong&gt; é uma sequência finita de elementos.&lt;/p&gt;
&lt;p&gt;A lista uma estrutura …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nessa aula vamos estudar o conceito de lista analisado sob o conceito de Estrutura de Dados. Analisaremos a definição primitiva de lista, como também, a definição primitiva de itens, ou seja, os elementos contidos numa lista.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="introducao-as-listas"&gt;
&lt;h2&gt;INTRODUÇÃO ÀS LISTAS&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Lista&lt;/strong&gt; é uma sequência finita de elementos.&lt;/p&gt;
&lt;p&gt;A lista uma estrutura de dados amplamente utilizada no desenvolvimento de software.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Estrutura de dados constituída por uma seqüência ordenada e finita de itens (os quais podem, inclusive, ser outras listas, ditas sublistas), e que pode ser modificada com a inserção, exclusão e reordenamento dos itens.&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;Dicionário Aurélio.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Aparentemente, todas as listas são iguais, porém, isso não é verdade!&lt;/p&gt;
&lt;p&gt;As listas são classificadas conforme o ordenamento dado aos seus elementos. Então, podemos dizer que exitem infinitos tipos de listas, até porque, existem infinitas maneiras de ordenarmos e organizarmos os itens de uma lista, sejam eles iguais, sejam diferentes.&lt;/p&gt;
&lt;p&gt;O conceito de lista é intuitivo e a forma mais primitiva de organização de conjuntos de elementos. Todo dia temos uma lista de afazeres e no final do dia, uma lista de tarefas realizadas. Temos listas de telefone, de amigos, inimigos, de produtos a serem vendidos, listas do que deve ser comprado, do que pode e não pode ser feito e etc.&lt;/p&gt;
&lt;p&gt;Todo programa é uma lista de instruções que serão executados numa ordem determinado pelo programdor. Por isso, a lista é um dos conceito mais utilizado na computação até porque, a principal tarefa do computador é processar listas.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="principios-das-listas"&gt;
&lt;h2&gt;PRINCÍPIOS DAS LISTAS&lt;/h2&gt;
&lt;p&gt;Toda lista pode conter 0, &lt;code&gt;n&lt;/code&gt; ou infinitos elementos. A lista é uma &lt;tt class="docutils literal"&gt;Estrutura de Dados&lt;/tt&gt; propriamente dita, e os elementos que a compõem, podem ser qualquer um, inclusive outras listas.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="manipulacao-de-listas"&gt;
&lt;h2&gt;MANIPULAÇÃO DE LISTAS&lt;/h2&gt;
&lt;p&gt;A lista contém 4 conceitos fundamentais:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Adição&lt;/li&gt;
&lt;li&gt;Alteração [da disposição dos elementos]&lt;/li&gt;
&lt;li&gt;Exclusão&lt;/li&gt;
&lt;li&gt;Leitura&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Nem toda lista permitirá a adição, alteração ou exclusão de itens, porém, a capacidade de leitura é obrigatória.&lt;/p&gt;
&lt;p&gt;É importante entender que a lista possui um conjunto de propriedades e funções que a definem e, &lt;strong&gt;todo&lt;/strong&gt; elemento contido nesta lista também poderá ter um conjunto de funções.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="tipos-de-lista"&gt;
&lt;h2&gt;TIPOS DE LISTA&lt;/h2&gt;
&lt;p&gt;O conceito mais simples de lista é aquela onde temos uma série de elementos. Os vários tipos de definições de lista dizem respeito a forma como os elementos são organizados, ou então, as ações conjuntas ligadas a inclusão e remoção de elementos.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="veja-tambem"&gt;
&lt;h2&gt;VEJA TAMBÉM&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Aula: &lt;a class="reference external" href="{filename}../curso-de-python/0043_lista-pilha-array-set-python.rst"&gt;Lista, Pilha, Array, Set em Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Aula: &lt;a class="reference external" href="{filename}../curso-de-python/0044_list-class-python.rst"&gt;A classe list do Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Aula: &lt;a class="reference external" href="http://excript.com/python/conceitos-avancados-lista-python.html"&gt;Classe list - Conceitos Avançados do Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Aula: &lt;a class="reference external" href="http://excript.com/python/funcoes-classe-list-python.html"&gt;Funções da Classe list do Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Aula: &lt;a class="reference external" href="http://excript.com/python/iterando-listas-em-python.html"&gt;Iteração de Listas em Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Aula: &lt;a class="reference external" href="http://excript.com/python/fatiando-lista-python.html"&gt;Fatiando Listas em Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Aula: &lt;a class="reference external" href="http://excript.com/python/incluindo-alterando-excluindo-elementos-lista-python.html"&gt;Incluindo, Alterando e Excluindo Elementos no Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Aula: &lt;a class="reference external" href="http://excript.com/python/ordenamento-lista-python.html"&gt;Ordenamento de Listas em Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Aula: &lt;a class="reference external" href="http://excript.com/python/quantidade-de-itens-lista-python.html"&gt;Quantidade de Itens em Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://turing.com.br/pydoc/2.7/tutorial/datastructures.html"&gt;Estruturas de dados&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://pythonclub.com.br/tuplas-mutantes-em-python.html"&gt;Tuplas Mutantes (PythonClub)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://blog.luisfred.com.br/estruturas-de-dados-em-python/"&gt;Estruturas de dados em Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="links-externos"&gt;
&lt;h2&gt;LINKS EXTERNOS&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.python.org/3/tutorial/datastructures.html"&gt;Estrutura de Dados em Python (en)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.python.org/3/tutorial/datastructures.html#more-on-lists"&gt;Listas (en)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://stackoverflow.com/questions/626759/whats-the-difference-between-list-and-tuples"&gt;What's the difference between list and tuples? (en)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://jtauber.com/blog/2006/04/15/python_tuples_are_not_just_constant_lists/"&gt;Python Tuples are Not Just Constant Lists (en)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="python"></category><category term="list"></category><category term="tupla"></category><category term="lista"></category><category term="pilha"></category><category term="fila"></category><category term="blog"></category></entry><entry><title>Iteração de Listas em Python</title><link href="http://excript.com/python/iterando-listas-em-python.html" rel="alternate"></link><published>2016-11-11T14:14:00-02:00</published><updated>2016-11-11T14:14:00-02:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-11-11:/python/iterando-listas-em-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula vamos estudar a iteração de listas, também chamado varredura de listas, ou então, a ação de percorrer os elementos contidos numa estrutura. Estudaremos a iteração com a instrução "for", como também, com a instrução "while".&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="introducao-a-iteracao-de-listas"&gt;
&lt;h2&gt;INTRODUÇÃO À ITERAÇÃO DE LISTAS&lt;/h2&gt;
&lt;p&gt;O estudo da iteração de listas é de …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula vamos estudar a iteração de listas, também chamado varredura de listas, ou então, a ação de percorrer os elementos contidos numa estrutura. Estudaremos a iteração com a instrução "for", como também, com a instrução "while".&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="introducao-a-iteracao-de-listas"&gt;
&lt;h2&gt;INTRODUÇÃO À ITERAÇÃO DE LISTAS&lt;/h2&gt;
&lt;p&gt;O estudo da iteração de listas é de fato, a explicação do por que estudamos anteriormente as Estruturas de Repetição e também, a Estrutura de Dados Lista.&lt;/p&gt;
&lt;p&gt;A &lt;a class="reference external" href="http://excript.com/python/iteracao-python.html"&gt;iteração tem o objetivo de percorrer os elementos contidos numa lista&lt;/a&gt;. Estudamos, que o Python possui 2 instruções definidas para que sejamos capazes de trabalhar com Iteração, que são, a estrutura &lt;a class="reference external" href="http://excript.com/python/while-else-python.html"&gt;while&lt;/a&gt; e a estrutura &lt;a class="reference external" href="http://excript.com/python/for-loop-python.html"&gt;for&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A estrutura de repetição &lt;code&gt;while&lt;/code&gt; pode iterar uma lista incrementando um objeto numérico a cada ciclo e acessando assim, um elemento diferente em cada ciclo.&lt;/p&gt;
&lt;p&gt;Da mesma forma, estudamos, que a estrutura de repetição &lt;code&gt;for&lt;/code&gt; é especializada na iteração de listas. Dessa forma, não é necessário a definição de quase nada, bastando somente informar uma variável que receberá um novo elemento a cada ciclo, e a lista que queremos iterar.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="iteracao-de-listas-com-a-instrucao-while"&gt;
&lt;h2&gt;ITERAÇÃO DE LISTAS COM A INSTRUÇÃO &lt;tt class="docutils literal"&gt;while&lt;/tt&gt;&lt;/h2&gt;
&lt;p&gt;No código a seguir, percorreremos todos os elementos contidos numa lista utilizando o laço de repetição &lt;code&gt;while&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="n"&gt;lista&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;num_elementos_lista&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lista&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;num_elementos_lista&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lista&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Essa é uma forma de iteração de listas não recomendada, até porque, a linguagem Python fornece uma instrução mais eficiente, sintaticamente falando.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="iteracao-de-listas-com-a-instrucao-for"&gt;
&lt;h2&gt;ITERAÇÃO DE LISTAS COM A INSTRUÇÃO &lt;code&gt;for&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;No código a seguir, percorreremos todos os elementos contidos numa lista com a instrução &lt;code&gt;for&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="n"&gt;lista&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;lista&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;O código acima, poderia também ser feito, definindo a lista na própria estrutura &lt;code&gt;for&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;É fácil perceber que na maior parte das vezes iremos manipular listas com a estrutura de repetição &lt;code&gt;for&lt;/code&gt;, até porque a mesma, é projetada para este fim.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="realizando-operacoes-com-elementos-da-lista"&gt;
&lt;h2&gt;REALIZANDO OPERAÇÕES COM ELEMENTOS DA LISTA&lt;/h2&gt;
&lt;p&gt;A principal razão para percorremos todos elementos de uma lista é a capacidade de realizar determinada operação sobre cada elemento. Nosso objetivo agora é demonstrar esse recurso e para isso, construiremos um simples código que itera uma lista numérica e multiplica o valor de cada item por 100. Em seguida é impresso na saída padrão o resultado da operação de multiplicação que efetuamos.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;     &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;10&lt;/span&gt;
&lt;span class="mi"&gt;20&lt;/span&gt;
&lt;span class="mi"&gt;30&lt;/span&gt;
&lt;span class="mi"&gt;40&lt;/span&gt;
&lt;span class="mi"&gt;50&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima, multiplicamos o valor de cada elemento da lista por 10 e em seguida, imprimimos o resultado na saída padrão. Essa é uma simples demonstração de como iterar listas e realizar uma determinada operação sobre seus elementos.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="c1"&gt;#=====================================&lt;/span&gt;
&lt;span class="c1"&gt;#========== www.eXcript.com ==========&lt;/span&gt;
&lt;span class="c1"&gt;#=====================================&lt;/span&gt;

&lt;span class="c1"&gt;#Iterando listas em Python&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# O código abaixo não funciona&lt;/span&gt;
&lt;span class="c1"&gt;# lista_nums = [100,200,300,400]&lt;/span&gt;
&lt;span class="c1"&gt;# for item in lista_nums:&lt;/span&gt;
&lt;span class="c1"&gt;#     item += 1000&lt;/span&gt;
&lt;span class="c1"&gt;# print(lista_nums)&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# lista_nums = [100,200,300,400,500,600,700,800]&lt;/span&gt;
&lt;span class="c1"&gt;# for item in range(len(lista_nums)):&lt;/span&gt;
&lt;span class="c1"&gt;#     lista_nums[item] += 1000&lt;/span&gt;
&lt;span class="c1"&gt;# print(lista_nums)&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;#função de nome enumerate&lt;/span&gt;
&lt;span class="n"&gt;lista_nums&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;400&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;600&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;700&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;800&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;idx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;enumerate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lista_nums&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;lista_nums&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;idx&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lista_nums&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="veja-tambem"&gt;
&lt;h2&gt;VEJA TAMBÉM&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Aula: &lt;a class="reference external" href="http://excript.com/python/iteracao-python.html"&gt;Estruturas de Repetição&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Aula: &lt;a class="reference external" href="http://excript.com/python/while-else-python.html"&gt;Estrutura de Repetição for..in&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Aula: &lt;a class="reference external" href="http://excript.com/python/for-loop-python.html"&gt;Estrutura de Repetição while(True)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="links-externos"&gt;
&lt;h2&gt;LINKS EXTERNOS&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://docs.python.org/3/tutorial/controlflow.html#for-statements"&gt;Estrutura for (Documentação oficial) (en)&lt;/a&gt;
&lt;a class="reference external" href="https://docs.python.org/3/reference/compound_stmts.html#while"&gt;Estrutura while (Documentação oficial) (en)&lt;/a&gt;
&lt;a class="reference external" href="https://www.tutorialspoint.com/python/python_loops.htm"&gt;Python Loops (TurialsPoint) (en)&lt;/a&gt;
&lt;a class="reference external" href="https://www.tutorialspoint.com/python/python_while_loop.htm"&gt;While Loop (TurialsPoint) (en)&lt;/a&gt;
&lt;a class="reference external" href="https://www.tutorialspoint.com/python/python_for_loop.htm"&gt;For Loop (TurialsPoint) (en)&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="python"></category><category term="list"></category><category term="lista"></category><category term="iteração"></category><category term="iteração de listas"></category><category term="blog"></category></entry><entry><title>Introdução às Strings em Python</title><link href="http://excript.com/python/introducao-as-string-python.html" rel="alternate"></link><published>2016-10-14T00:45:00-03:00</published><updated>2016-10-14T00:45:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-10-14:/python/introducao-as-string-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula teremos uma introdução sobre as String, e também, faremos alguns exemplos em Python, para iniciarmos nosso estudo sobre a manipulação de cadeia de caracteres.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="introducao-as-string"&gt;
&lt;h2&gt;INTRODUÇÃO ÀS STRING&lt;/h2&gt;
&lt;p&gt;Uma &lt;tt class="docutils literal"&gt;string&lt;/tt&gt; é qualquer sequência de caracteres. Caractere é a menor unidade de todo o texto. Os caracateres são classificados em …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula teremos uma introdução sobre as String, e também, faremos alguns exemplos em Python, para iniciarmos nosso estudo sobre a manipulação de cadeia de caracteres.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="introducao-as-string"&gt;
&lt;h2&gt;INTRODUÇÃO ÀS STRING&lt;/h2&gt;
&lt;p&gt;Uma &lt;tt class="docutils literal"&gt;string&lt;/tt&gt; é qualquer sequência de caracteres. Caractere é a menor unidade de todo o texto. Os caracateres são classificados em 3 grupos: numérico, letras do alfabeto e caracteres especiais.&lt;/p&gt;
&lt;p&gt;É comum nos referirmos ao conjunto de caracteres numéricos e as letras com o termo &lt;tt class="docutils literal"&gt;alfanumérico&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Na programação, é comum a manipulação de cadeias de caracteres, isso porque, a maior parte da informação que o ser humano trabalha, está no formato de texto. Assim, processamos caracteres a todo instânte e rapidamente descobrimos, a grande necessidade em tratar e processar textos. E também, rapidamente aprendemos que existem centenas de maneiras para tratarmos e reconhecermos trechos de texto. Por exemplo, toda linguagem de programação precisa ser interpretada e, para isso, deve haver o reconhecimento de diversos nomes, diversas partes. Cada parte, ou melhor, cada segmento de texto reconhecido possuíra significado diferente, algumas vezes serão expressões, noutras, apenas sinais.&lt;/p&gt;
&lt;p&gt;Por essas razões, o entendimento e o domínio da manipulação de caracteres e de conjuntos de caracteres é tão essencial.&lt;/p&gt;
&lt;p&gt;Para o Python, &lt;strong&gt;todo texto&lt;/strong&gt; ou &lt;strong&gt;caractere&lt;/strong&gt; é um objeto do tipo &lt;tt class="docutils literal"&gt;str&lt;/tt&gt;. Portanto, se precisarmos utilizar depeterminado texto como sendo um outro tipo de informação, é nossa responsabilidade como programador, transformar, ou melhor, converter do tipo &lt;tt class="docutils literal"&gt;str&lt;/tt&gt; para o novo tipo. Vamos supor que desejamos que determinada String seja reconhecido pela linguagem como sendo um número, então, precisamos fazer a conversão e essa pode ser feita da seguinte forma:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;texto1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;10&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;texto2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;20.2&amp;quot;&lt;/span&gt;

&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;texto1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;valor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;texto2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Já estudamos, que a utilização do sinal de adição &lt;tt class="docutils literal"&gt;+&lt;/tt&gt; quando utilizado com 2 objetos do tipo String, ao invés de realizar a operação aritmética, fará a juntação do primeira com a segunda parte. Então, quando estivermos lidando com números, desejaremos obter, com o sinal de adição, soma entre 2 valores numéricos. Por isso, sempre precisaremos converter de &lt;tt class="docutils literal"&gt;str&lt;/tt&gt; para o tipo que desejamos e para que nossas conversões funcionem, muitas vezes, precisaremos saber, se os caracteres são válidos.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="o-conceito-de-caractere-e-string"&gt;
&lt;h2&gt;O CONCEITO DE CARACTERE E STRING&lt;/h2&gt;
&lt;p&gt;Caractere é a únidade mínima de toda String. Um caractere pode ser numérico, letras do alfabeto ou um caracteres especial.&lt;/p&gt;
&lt;p&gt;É importante observar, que no Python, diferentemente de outras linguagens, nós não temos o tipo Char, ou seja, o tipo caractere. Para o Python, tudo são &lt;tt class="docutils literal"&gt;Strings&lt;/tt&gt;, indiferente se a mesma contiver 1 ou &amp;quot;n&amp;quot; caracteres.&lt;/p&gt;
&lt;p&gt;No trecho de código a seguir, utilizamos a função &lt;code&gt;type()&lt;/code&gt; para saber qual o tipo de alguns objetos, veja os resultados e abra o seu IDLE e faça os testes você também.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nc"&gt;str&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;abc&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nc"&gt;str&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A seguir, implementamos um código simples onde um texto é vinculado a uma referência. Em seguida, a referência e o valor vinculado são impresso na saída padrão. Observe como utilizamos variáveis que contém caracteres:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Lista de Caracteres&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;
&lt;span class="s2"&gt;&amp;quot;Lista de Caracteres&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="terminologias"&gt;
&lt;h2&gt;TERMINOLOGIAS&lt;/h2&gt;
&lt;p&gt;Quando manipulamos cadeias de caracteres, isto é, &lt;tt class="docutils literal"&gt;string&lt;/tt&gt;, utilizamos algumas terminologias especificas que são, de fato, o nome da ação que será realizada. A primeira e mais comum, é o termo &lt;strong&gt;Concatenar&lt;/strong&gt;. O segundo, menos utilizado verbalmente, porém, muito utilizado em nossos códigos é &lt;strong&gt;interpolar&lt;/strong&gt;. Ambos os termos são verbos, e não raramente ouvirás ou lerás expressões em que falamos: &amp;quot;concatenar valores&amp;quot;, &amp;quot;concatenação de variáveis&amp;quot;, &amp;quot;interpolação de dados&amp;quot;, &amp;quot;interpolação de valores&amp;quot; e etc.&lt;/p&gt;
&lt;div class="section" id="concatenar"&gt;
&lt;h3&gt;CONCATENAR&lt;/h3&gt;
&lt;p&gt;Concatenar é a junção de 2 cadeias de caracteres e que dá origem a uma nova &lt;tt class="docutils literal"&gt;string&lt;/tt&gt; que é formada pela junça das 2 partes. A &lt;strong&gt;concatenação&lt;/strong&gt;, pode ser a direita ou então a esquerda de outra &lt;tt class="docutils literal"&gt;string&lt;/tt&gt;. Então por exemplo, a seguir, temos um exemplo em que fazemos alguns tipos de concatenações.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#concatenção de 2 trechos de texto&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;concatenacao&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;123&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;456&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;concatenacao&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;123456&amp;#39;&lt;/span&gt;

&lt;span class="c1"&gt;#declaração da variável `a` que foi associado ao texto `bra`&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;bra&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;#declaração da variável `b` que foi associado ao texto `sil`&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;sil&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;#ao escrevemos no prompt a + b temos que é impresso a CONCATENAÇÃO&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;brasil&amp;#39;&lt;/span&gt;
&lt;span class="c1"&gt;#agora, concatenamos e o resultado associamos a variável `c`&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;brasil&amp;#39;&lt;/span&gt;
&lt;span class="c1"&gt;#agora, podemos dizer que o trecho de texto `bra`&lt;/span&gt;
&lt;span class="c1"&gt;# foi adicionado a esquerda da variável `b`&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;silbra&amp;#39;&lt;/span&gt;

&lt;span class="c1"&gt;#agora, podemos dizer que o trecho de texto `sil`&lt;/span&gt;
&lt;span class="c1"&gt;# foi adicionado a esquerda da variável `a`&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;brasil&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="interpolar"&gt;
&lt;h2&gt;INTERPOLAR&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Interpolar&lt;/strong&gt; é a inserção de um trecho de texto dentro de outro. A &lt;strong&gt;interpolação&lt;/strong&gt;, ocorre de várias formas, e, algumas linguagens e bibliotecas, proporcionam maneiras bastante interessantes e diferentes para interpolarmos valores. O Python fornece um conjunto de ferramentas bastante poderosas para esse fim.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;sexo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;masculino&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;nome&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Cláudio&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;interpolar&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Sexo é igual a &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt; e o nome é igual &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt; &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sexo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nome&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;interpolar&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;Sexo é igual a masculino e o nome é igual Cláudio &amp;#39;&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="c1"&gt;#agora, vamos colocar uma String entre chaves dentro do texto&lt;/span&gt;
&lt;span class="c1"&gt;#em seguida, com a função format(), vamos associar&lt;/span&gt;
&lt;span class="c1"&gt;#os nomes definidos entre chaves a texto passando-os&lt;/span&gt;
&lt;span class="c1"&gt;#como argumentos de função&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;interpolar&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Sexo é igual a &lt;/span&gt;&lt;span class="si"&gt;{SEXO}&lt;/span&gt;&lt;span class="s2"&gt; e o nome é igual &lt;/span&gt;&lt;span class="si"&gt;{NOME}&lt;/span&gt;&lt;span class="s2"&gt; &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SEXO&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;sexo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;NOME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;nome&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;interpolar&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;Sexo é igual a masculino e o nome é igual Cláudio &amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="as-string-sao-listas-imutaveis"&gt;
&lt;h2&gt;As &lt;tt class="docutils literal"&gt;string&lt;/tt&gt; SÃO LISTAS IMUTÁVEIS&lt;/h2&gt;
&lt;p&gt;Para o Python, toda &lt;tt class="docutils literal"&gt;string&lt;/tt&gt; é uma lista imutável, semelhante a uma &lt;a class="reference external" href="http://excript.com/python/tuplas-python.html"&gt;Tupla&lt;/a&gt;, porém, com funcionalidade bastante especificas. A manipulação de &lt;tt class="docutils literal"&gt;string&lt;/tt&gt;, tuplas e &lt;a class="reference external" href="{filename}../curso-de-python/0044_list-class-python.rst"&gt;listas&lt;/a&gt; é bastante semelhante, e, a definição em Python de Tupla e String é quase que identico. Isso porque, toda String após definida NÃO pode ser alterada, ou seja, você não pode alterar um caractere dentro de uma String. Então, ao fazermos alguma alteração numa determinada parte de uma String, o que de fato ocorrerá é a definição de uma nova &lt;tt class="docutils literal"&gt;String&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Há várias razões pela quais as &lt;tt class="docutils literal"&gt;Strings&lt;/tt&gt; não podem ser alteradas, algumas delas são que, internamente, quando uma &lt;tt class="docutils literal"&gt;string&lt;/tt&gt; é definida, uma série de otimizações são feitas, de tal forma, que é mais rápido destruir a instância existente e criar uma nova, do que reaproveitar as otimizações existentes. Por isso, por exemplo, a concatenação, interpolação ou qualquer manipulação de &lt;tt class="docutils literal"&gt;string&lt;/tt&gt;, resulta, invariavelmente, numa nova instância que é criada e que possui as modificações.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="veja-tambem"&gt;
&lt;h2&gt;VEJA TAMBÉM&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Aula: &lt;a class="reference external" href="http://excript.com/python/for-in-range-python.html"&gt;Listas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Aula: &lt;a class="reference external" href="http://excript.com/python/while-else-python.html"&gt;Tuplas&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="links-externos"&gt;
&lt;h2&gt;LINKS EXTERNOS&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.python.org/3/library/string.html"&gt;Documentação Oficial (en)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www3.ifrn.edu.br/~jurandy/fdp/doc/aprenda-python/capitulo_07.html"&gt;Aprenda Computação com Python (pt)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.tutorialspoint.com/python/python_strings.htm"&gt;Tutorial Point (en)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://developers.google.com/edu/python/strings"&gt;Google Education - Python String (en)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://codingair.logdown.com/posts/179395-understand-common-sequence-data-types-in-python-string-tuple-and-list"&gt;Understand Common Sequence Data Types in Python – String, Tuple, and List&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="python"></category><category term="string"></category><category term="char"></category><category term="caractere"></category><category term="alfanumérico"></category><category term="concatenação"></category><category term="interpolação"></category><category term="blog"></category></entry><entry><title>Ordenamento de Listas em Python</title><link href="http://excript.com/python/ordenamento-lista-python.html" rel="alternate"></link><published>2016-08-30T10:26:00-03:00</published><updated>2016-08-30T10:26:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-08-30:/python/ordenamento-lista-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos o ordenamento de lista, a ordem padrão, como inverter a ordem e outras funcionalidades disponibilizadas pela biblioteca padrão do Python.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="introducao"&gt;
&lt;h2&gt;INTRODUÇÃO&lt;/h2&gt;
&lt;p&gt;Ordenar é definir a sequência dos elementos contidos numa lista. Por padrão, todo novo elementos adicionados é incluído no final da lista, logo, seu índice será …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos o ordenamento de lista, a ordem padrão, como inverter a ordem e outras funcionalidades disponibilizadas pela biblioteca padrão do Python.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="introducao"&gt;
&lt;h2&gt;INTRODUÇÃO&lt;/h2&gt;
&lt;p&gt;Ordenar é definir a sequência dos elementos contidos numa lista. Por padrão, todo novo elementos adicionados é incluído no final da lista, logo, seu índice será igual a -1.&lt;/p&gt;
&lt;p&gt;As listas são ordenadas das mais diversas formas, como por exemplo, por ordem alfabética. Todo ordenameto é um algoritmo que define a sequência em que os elementos serão dispostos. O Python disponibiliza por padrão, o ordenamento por ordem alfabética através funções incluídas na biblioteca padrão.&lt;/p&gt;
&lt;p&gt;Nosso objetivo agora é estudar a função de ordenação disponibilizada nativamente pelo Python.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="a-descricao-dos-objetos"&gt;
&lt;h2&gt;A DESCRIÇÃO DOS OBJETOS&lt;/h2&gt;
&lt;p&gt;Em Python, há 2 funções que definem um texto a ser impresso na saída padrão, isto é, se passarmos uma lista com parâmetro da função &lt;code&gt;print()&lt;/code&gt; os elementos serão impressos na saída padrão devido a programação implementada pela classe &lt;code&gt;list&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Podemos implementar a função &lt;tt class="docutils literal"&gt;__str__()&lt;/tt&gt; ou então, &lt;tt class="docutils literal"&gt;__repr__()&lt;/tt&gt; dentro das nossas classes para que as essas retornem qualquer texto que melhor defina o conteúdo do objeto.&lt;/p&gt;
&lt;p&gt;Na ordenação, o funcionamento ocorrerá, por padrão, com o uso dessa descrição. Assim, se a classe no qual o objeto foi criado não possuir a implementação dessas funções, não será possível organizar com as funções padrão das bibliotecas.&lt;/p&gt;
&lt;p&gt;Por padrão, todas as classes nativas trazem essas funções implementadas.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="a-funcao-sort"&gt;
&lt;h2&gt;A FUNÇÃO &lt;tt class="docutils literal"&gt;sort()&lt;/tt&gt;&lt;/h2&gt;
&lt;p&gt;A função &lt;tt class="docutils literal"&gt;sort()&lt;/tt&gt; ordena os elementos alfabeticamente. Como estudado acima, o texto utilizado por padrão, será aquele retornado pelas funções que descrevem o conteúdo dos objetos.&lt;/p&gt;
&lt;p&gt;A seguir, vamos definir uma lista e então, com a função &lt;code&gt;sort()&lt;/code&gt;, iremos ordenar os elementos.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;d&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;c&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;b&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;d&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;c&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;b&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;lista&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;b&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;c&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;d&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Como pode ser visto, inicialmente, a lista foi impressa seguindo a ordem em que definimos os elementos ainda na declaração. Em seguida, invocamos a função &lt;tt class="docutils literal"&gt;sort()&lt;/tt&gt; e então, a lista foi impressa com os elementos ordenados alfabeticamente.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="ordem-inversa"&gt;
&lt;h2&gt;ORDEM INVERSA&lt;/h2&gt;
&lt;p&gt;Para invertermos a sequência, isto é, para que o últimos seja o primeiro e o primeiro o último, passamos como argumento da função &lt;tt class="docutils literal"&gt;sort()&lt;/tt&gt; &lt;tt class="docutils literal"&gt;reverse=True&lt;/tt&gt;. O parâmetro &lt;tt class="docutils literal"&gt;reverse&lt;/tt&gt; como podemos deduzir, informa que queremos a ordem alfabética normal quando igual a &lt;code&gt;True&lt;/code&gt; ou então, a ordem reversa quando igual &lt;code&gt;True&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;d&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;c&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;b&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;d&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;c&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;b&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;lista&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;reverse&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;d&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;c&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Como podemos ver, os itens foram impressos ordenamente na ordem reversa.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="a-funcao-reverse"&gt;
&lt;h2&gt;A FUNÇÃO &lt;code&gt;reverse()&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;A função &lt;code&gt;reverse()&lt;/code&gt; inverte a ordem da lista mas sem ordena-la, ou seja, a ordem em que os elementos estão dispostos é indiferente, o que importa, é fazer com que o último seja o primeiro e vice-e-versa.&lt;/p&gt;
&lt;p&gt;Vamos definir uma lista numérica e em seguida, invocar a função &lt;code&gt;reverse()&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;45&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;234&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;45&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;234&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reverse&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;234&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;45&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima, definimos uma lista e vinculamos a referência &lt;tt class="docutils literal"&gt;x&lt;/tt&gt; à mesma. Feito isso, invocamos a função &lt;code&gt;reverse()&lt;/code&gt; e então, imprimimos novamente os elementos. Desta vez, a impressão ocorreu na ordem inversa a ordem em que os elementos foram adicionados. Isso porque, a função &lt;code&gt;reverse()&lt;/code&gt; havia sido invocada.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="como-a-inversao-ocorre-internamente"&gt;
&lt;h2&gt;COMO A INVERSÃO OCORRE INTERNAMENTE&lt;/h2&gt;
&lt;p&gt;O Python sempre busca a forma de trabalho menos custoza, isto é, a mais performática. Por isso, ao invocarmos a função &lt;code&gt;reverse()&lt;/code&gt;, ou então, ao ordenarmos inversamente os elementos, internamente, somente um propriedade é alterada, sem que nenhum elemento seja movido.&lt;/p&gt;
&lt;p&gt;Isso é possível pelo fato das listas serem objetos iteraveis, definição está que permite-nos entregar os elementos da forma como bem entendermos. Assim, não podemos ver uma lista como sendo um Array em C, até porque, em Python, sempre é feito o mínimo necessário, utilizando desta maneira, a menor quantidade de memória e distribuindo o processamento.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="links-externos"&gt;
&lt;h2&gt;LINKS EXTERNOS&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.python.org/3/tutorial/datastructures.html#more-on-lists"&gt;(en) Documentação Oficial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www3.ifrn.edu.br/~jurandy/fdp/doc/aprenda-python/capitulo_08.html"&gt;(pt) Listas - Aprenda Computação com Python v1.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://pt.stackoverflow.com/questions/130880/list-compreension-vs-ciclo-for"&gt;(pt) Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.devfuria.com.br/python/listas/"&gt;(pt) O BÁSICO DE LISTAS - Devfuria&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.tutorialspoint.com/python/python_lists.htm"&gt;(en) Tutorial Point&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://effbot.org/zone/python-list.htm"&gt;(en) An Introduction to Python Lists&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="python"></category><category term="lista"></category><category term="ordenação"></category><category term="blog"></category></entry><entry><title>Parâmetros default em Python</title><link href="http://excript.com/python/parametro-default-python.html" rel="alternate"></link><published>2016-07-27T08:30:00-03:00</published><updated>2016-07-27T08:30:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-07-27:/python/parametro-default-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula continuaremos o estudo dos parâmetros e iremos aprofundar nosso entendimento com a definição e a capacidade de definirmos parâmetros default em nossas funções.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="parametros-default"&gt;
&lt;h2&gt;PARÂMETROS DEFAULT&lt;/h2&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;Parâmetro default&lt;/tt&gt; é uma parâmetro que tem um valor associado na declaração da função, ou seja, o valor é atribuído ao parâmetro dentro …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula continuaremos o estudo dos parâmetros e iremos aprofundar nosso entendimento com a definição e a capacidade de definirmos parâmetros default em nossas funções.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="parametros-default"&gt;
&lt;h2&gt;PARÂMETROS DEFAULT&lt;/h2&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;Parâmetro default&lt;/tt&gt; é uma parâmetro que tem um valor associado na declaração da função, ou seja, o valor é atribuído ao parâmetro dentro do parêntesis. O &lt;tt class="docutils literal"&gt;parâmetros default&lt;/tt&gt; funciona da mesma forma que a inicialização e declaração de variáveis, isto é, a mesma recebe um valor no momento da sua declaração.&lt;/p&gt;
&lt;p&gt;Por exemplo, vamos implementar uma simples função e definir um único parâmetro default.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# a função está sendo definida e o valor 1000 está sendo associado&lt;/span&gt;
&lt;span class="c1"&gt;# ao parametro de nome param1&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;minha_funcao&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;param1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;param1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Como pode ser visto no código acima, implementamos uma função de nome &lt;code&gt;minha_funcao()&lt;/code&gt; e definimos no cabeçalho da mesma [entre parêntesis] um parâmetro de nome &lt;code&gt;param1&lt;/code&gt; e associamos a este nome o valor inteiro 1000.&lt;/p&gt;

    &lt;div class="admonitionblock tip data-line"&gt;
        &lt;table&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="icon"&gt;
                        &lt;i class="fa icon-tip" title="Dica!"&gt;&lt;/i&gt;
                    &lt;/td&gt;
                    &lt;td class="content"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt;Podemos pensar em parâmetros default como se fossem variáveis que são inicializadas no momento da declaração.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;p&gt;A biblioteca padrão do Python contém centenas de funções que possuem parâmetros com valores associados, uma delas é a função range() já estudada.&lt;/p&gt;
&lt;p&gt;Em aulas anteriores, invocamos, algumas vezes, funções que continham &lt;tt class="docutils literal"&gt;parâmetros default&lt;/tt&gt;,  por exemplo, a função &lt;code&gt;range()&lt;/code&gt;, cuja notação pode ser vista no trecho de código a seguir.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;pass&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A função &lt;code&gt;range()&lt;/code&gt; é, na verdade, uma classe, por isso que o nome da função é &lt;code&gt;__init__()&lt;/code&gt;, isto é, essa função é a função que é invocada quando uma nova instância está sendo criada.&lt;/p&gt;
&lt;p&gt;O primeiro parâmetro é de nome &lt;code&gt;self&lt;/code&gt;, neste momento, temos que saber somente que este parâmetro é comum em todas as funções implementadas dentro de quaisquer classe. Então, não vamos estuda-lo agora, até porque, quando criamos uma instância de &lt;code&gt;range()&lt;/code&gt; não é necessário enviar o argumento de nome &lt;code&gt;self&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;O segundo parâmetro de nome &lt;code&gt;start&lt;/code&gt; é inicializado com o valor &lt;code&gt;None&lt;/code&gt;. Para o Python, &lt;code&gt;None&lt;/code&gt; é igual a zero e assim, se a função &lt;code&gt;range()&lt;/code&gt; for invocada utilizando somente 2 argumentos, ocorrerá que o parâmetro &lt;code&gt;start&lt;/code&gt; será interpretado como sendo zero e então, a lista numérica retornada estará no intervalo fechado, iniciando em zero.&lt;/p&gt;
&lt;p&gt;Os 2 outros parâmetros definidos na função serão estudados na sequência, o nosso objetivo agora, foi somente estudar o parâmetro defaulta da função de inicialização da classe &lt;code&gt;range()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;No trecho de código a seguir, implementamos uma função que define parâmetros default.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;login&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;user&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;senha&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;123&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;user: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;senha: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;senha&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A função &lt;code&gt;login()&lt;/code&gt;, definida no código acima, pode ser invocada sem que seja passado um único argumento, até porque, por padrão, há valores definidos para todos os parâmetros declarados.&lt;/p&gt;
&lt;p&gt;É importante dizer que, se invocarmos uma função sem passarmos os parâmetros que estão definidos, o Python levantará uma exceção, porém, com o uso de &lt;tt class="docutils literal"&gt;parâmetros default&lt;/tt&gt;, a obrigatoriedade torna-se facultativo.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# coding: utf-8&lt;/span&gt;

&lt;span class="c1"&gt;# =================&lt;/span&gt;
&lt;span class="c1"&gt;#  = eXcript.com =&lt;/span&gt;
&lt;span class="c1"&gt;# =================&lt;/span&gt;

&lt;span class="c1"&gt;# PARÂMETROS DEFAULT&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;login&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sistema&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;usuario&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;root&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;senha&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;123&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Usuário: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;usuario&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Senha: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;senha&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;login&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="links-externos"&gt;
&lt;h2&gt;LINKS EXTERNOS&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.python.org/3/reference/compound_stmts.html#function-definitions"&gt;Function Definition&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.python.org/3/reference/datamodel.html#the-standard-type-hierarchy"&gt;Python Data Model - The standard type hierarchy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.python.org/3/reference/expressions.html#calls"&gt;Calls&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="python"></category><category term="função"></category><category term="parâmetro"></category><category term="argumento"></category><category term="parâmetro default"></category><category term="blog"></category></entry><entry><title>Comparação de Strings em Python</title><link href="http://excript.com/python/comparacao-de-string-python.html" rel="alternate"></link><published>2016-07-26T13:01:00-03:00</published><updated>2016-07-26T13:01:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-07-26:/python/comparacao-de-string-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula, aprenderemos, como funciona a comparação de string no Python, e também, veremos o como que é definido, internamente, quando é solicitado a relação entre 2 caracteres.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="introducao"&gt;
&lt;h2&gt;INTRODUÇÃO&lt;/h2&gt;
&lt;p&gt;Para entendermos como o Python estabelece a relação entre 2 caracteres, precisamos entender alguns conceitos sobre o princípio da computação. Então …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula, aprenderemos, como funciona a comparação de string no Python, e também, veremos o como que é definido, internamente, quando é solicitado a relação entre 2 caracteres.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="introducao"&gt;
&lt;h2&gt;INTRODUÇÃO&lt;/h2&gt;
&lt;p&gt;Para entendermos como o Python estabelece a relação entre 2 caracteres, precisamos entender alguns conceitos sobre o princípio da computação. Então, nessa aula, iremos estudar alguns conceitos que não estão relacionados diretamente a linguagem Python, e sim, a computação propriamente dita.&lt;/p&gt;
&lt;p&gt;A seguir, temos um código de &amp;quot;degustação&amp;quot;, onde as expressões serão o resultado da relação entre 2 caracteres.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;A&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;A&amp;quot;&lt;/span&gt;
&lt;span class="kc"&gt;True&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;b&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;b&amp;quot;&lt;/span&gt;
&lt;span class="kc"&gt;True&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;a&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;c&amp;quot;&lt;/span&gt;
&lt;span class="kc"&gt;False&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;C&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;a&amp;quot;&lt;/span&gt;
&lt;span class="kc"&gt;False&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="tabela-ascii"&gt;
&lt;h2&gt;TABELA ASCII&lt;/h2&gt;
&lt;p&gt;A tabela ASCII contém os caracteres vinculados a um número inteiro positivo. Essa tabela decorre do fato de que o computador só manipula números, logo, cada caractere, possui, um número que o identifique.&lt;/p&gt;
&lt;p&gt;O termo &lt;tt class="docutils literal"&gt;ASCII&lt;/tt&gt; é um acrônimo de &lt;a class="reference external" href="https://pt.wikipedia.org/wiki/ASCII"&gt;American Standard Code for Information Interchange&lt;/a&gt; que numa tradução livre, seria, &amp;quot;Código Padrão Americano para o Intercâmbio de Informação&amp;quot;.&lt;/p&gt;
&lt;p&gt;Podemos obter o código ASCII de um caractere ou então, através de um caractere, obter o seu respectivo código. Geralmente, trabalhamos com os códigos ASCII quando estamos definindo funcionalidades para determinadas teclas, como por exemplo, na construção de um jogo.&lt;/p&gt;
&lt;p&gt;A tabela ASCII é a convenção que define o valor decimal e binário de cada caractere. Nesse momento, não aprofundaremos o estudo sobre a tabela ASCII ou então, o padrão UNICODE. Porém, estudaremos detalhadamente numa próxima situação. Agora, o que nós temos que saber, é que cada letra do nosso teclado está associado a um valor numérico.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://docs.python.org/3/howto/unicode.html"&gt;Veja neste link uma explicação da relação do Python com o sistema UNICODE&lt;/a&gt; .&lt;/p&gt;
&lt;p&gt;Por exemplo, a letra &lt;tt class="docutils literal"&gt;A&lt;/tt&gt; maiúscula recebe o código 65, a letra &lt;tt class="docutils literal"&gt;B&lt;/tt&gt; o código 66 e assim por diante. A letra &lt;tt class="docutils literal"&gt;a&lt;/tt&gt; minúscula, recebe o código 97, e a letra &lt;tt class="docutils literal"&gt;b&lt;/tt&gt; minúscula o código 98 e assim por diante.&lt;/p&gt;
&lt;p&gt;Esses valores serão utilizados, por exemplo, quando comparamos 2 &lt;tt class="docutils literal"&gt;String&lt;/tt&gt; distintas. Por exemplo, se digitar a seguinte expressão, qual o valor lógico retornado?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;a&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;X&amp;quot;&lt;/span&gt;
&lt;span class="kc"&gt;True&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Temos que o valor lógico retornado será &lt;tt class="docutils literal"&gt;True&lt;/tt&gt;, até porque, o código ASCII do caractere &lt;tt class="docutils literal"&gt;a&lt;/tt&gt; minúsculo (65) é maior do que o caractere &lt;tt class="docutils literal"&gt;X&lt;/tt&gt; maiúsculo.&lt;/p&gt;
&lt;p&gt;O Python disponibiliza 2 funções que são bastante uteis quando estamos trabalhando com o sistema ASCII. A primeira é a função &lt;a class="reference external" href="https://docs.python.org/3/library/functions.html#ord"&gt;ord()&lt;/a&gt; , que recebe uma letra como parâmetro e retorna o código ASCII da mesma. A segunda função, é a &lt;a class="reference external" href="https://docs.python.org/3/library/functions.html#chr"&gt;chr()&lt;/a&gt; , onde passamos o código ASCII e nos é retornado a respectiva letra.&lt;/p&gt;
&lt;p&gt;A seguir, temos 2 exemplos utilizando as funções builtin do Python &lt;a class="reference external" href="https://docs.python.org/3/library/functions.html#ord"&gt;ord()&lt;/a&gt; e &lt;a class="reference external" href="https://docs.python.org/3/library/functions.html#chr"&gt;chr()&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;ord&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;97&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;chr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;97&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No exemplo acima, inicialmente, confirmamos que o código ASCII da letra &lt;cite&gt;a&lt;/cite&gt; minúscula é 97. Em seguida, passamos o código 97 como argumento da função &lt;cite&gt;chr()&lt;/cite&gt; e, como resposta, tivemos o caractere &lt;cite&gt;a&lt;/cite&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="exemplo-imprimindo-a-tabela-ascii"&gt;
&lt;h2&gt;EXEMPLO - IMPRIMINDO A TABELA ASCII&lt;/h2&gt;
&lt;p&gt;A seguir, temos um exemplo em que é impresso, na saída padrão, o código ASCII e a respectiva letra dos 122 primeiros caracteres.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; - &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;chr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="s1"&gt;&amp;#39;0 - &lt;/span&gt;&lt;span class="se"&gt;\x00&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;1 - &lt;/span&gt;&lt;span class="se"&gt;\x01&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;2 - &lt;/span&gt;&lt;span class="se"&gt;\x02&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;3 - &lt;/span&gt;&lt;span class="se"&gt;\x03&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;4 - &lt;/span&gt;&lt;span class="se"&gt;\x04&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;5 - &lt;/span&gt;&lt;span class="se"&gt;\x05&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;6 - &lt;/span&gt;&lt;span class="se"&gt;\x06&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;7 - &lt;/span&gt;&lt;span class="se"&gt;\x07&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;8 - &lt;/span&gt;&lt;span class="se"&gt;\x08&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;9 - &lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;10 - &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;11 - &lt;/span&gt;&lt;span class="se"&gt;\x0b&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;12 - &lt;/span&gt;&lt;span class="se"&gt;\x0c&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;13 - &lt;/span&gt;&lt;span class="se"&gt;\r&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;14 - &lt;/span&gt;&lt;span class="se"&gt;\x0e&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;15 - &lt;/span&gt;&lt;span class="se"&gt;\x0f&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;16 - &lt;/span&gt;&lt;span class="se"&gt;\x10&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;17 - &lt;/span&gt;&lt;span class="se"&gt;\x11&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;18 - &lt;/span&gt;&lt;span class="se"&gt;\x12&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;19 - &lt;/span&gt;&lt;span class="se"&gt;\x13&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;20 - &lt;/span&gt;&lt;span class="se"&gt;\x14&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;21 - &lt;/span&gt;&lt;span class="se"&gt;\x15&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;22 - &lt;/span&gt;&lt;span class="se"&gt;\x16&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;23 - &lt;/span&gt;&lt;span class="se"&gt;\x17&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;24 - &lt;/span&gt;&lt;span class="se"&gt;\x18&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;25 - &lt;/span&gt;&lt;span class="se"&gt;\x19&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;26 - &lt;/span&gt;&lt;span class="se"&gt;\x1a&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;27 - &lt;/span&gt;&lt;span class="se"&gt;\x1b&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;28 - &lt;/span&gt;&lt;span class="se"&gt;\x1c&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;29 - &lt;/span&gt;&lt;span class="se"&gt;\x1d&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;30 - &lt;/span&gt;&lt;span class="se"&gt;\x1e&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;31 - &lt;/span&gt;&lt;span class="se"&gt;\x1f&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;32 -  &amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;33 - !&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;34 - &amp;quot;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;35 - #&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;36 - $&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;37 - %&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;38 - &amp;amp;&amp;#39;&lt;/span&gt;
&lt;span class="s2"&gt;&amp;quot;39 - &amp;#39;&amp;quot;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;40 - (&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;41 - )&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;42 - *&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;43 - +&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;44 - ,&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;45 - -&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;46 - .&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;47 - /&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;48 - 0&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;49 - 1&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;50 - 2&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;51 - 3&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;52 - 4&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;53 - 5&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;54 - 6&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;55 - 7&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;56 - 8&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;57 - 9&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;58 - :&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;59 - ;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;60 - &amp;lt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;61 - =&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;62 - &amp;gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;63 - ?&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;64 - @&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;65 - A&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;66 - B&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;67 - C&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;68 - D&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;69 - E&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;70 - F&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;71 - G&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;72 - H&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;73 - I&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;74 - J&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;75 - K&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;76 - L&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;77 - M&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;78 - N&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;79 - O&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;80 - P&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;81 - Q&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;82 - R&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;83 - S&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;84 - T&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;85 - U&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;86 - V&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;87 - W&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;88 - X&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;89 - Y&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;90 - Z&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;91 - [&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;92 - &lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;93 - ]&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;94 - ^&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;95 - _&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;96 - `&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;97 - a&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;98 - b&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;99 - c&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;100 - d&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;101 - e&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;102 - f&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;103 - g&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;104 - h&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;105 - i&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;106 - j&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;107 - k&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;108 - l&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;109 - m&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;110 - n&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;111 - o&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;112 - p&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;113 - q&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;114 - r&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;115 - s&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;116 - t&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;117 - u&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;118 - v&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;119 - w&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;120 - x&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;121 - y&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;122 - z&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="caracteres-de-escape"&gt;
&lt;h2&gt;CARACTERES DE ESCAPE&lt;/h2&gt;
&lt;p&gt;Os &lt;tt class="docutils literal"&gt;caracteres de escape&lt;/tt&gt; é uma definição para adicionar as strings, marcações que não possuem um desenho (representação visual) propriamente dito. Ainda que estes caracteres não tenham uma simbologia que os justifiquem, os mesmos possuem representações na forma em que nossos textos serão exibidos ou impressos. Assim, temos que os &lt;tt class="docutils literal"&gt;Caracteres de Escape&lt;/tt&gt; desempenham tarefas bastante importantes na formatação e exibição dos textos. Tomemos por exemplo, uma quebra de linha, ou seja, o pressionamento da tecla Enter.&lt;/p&gt;
&lt;p&gt;A quebra de linha não possui um caractere que a represente visualmente, até porque, a sua representação visual, é o posicionamento do cursor no canto esquerto da linha seguinte. O mesmo acontece com a tabulação, onde não há um desenho que a represente, até porque, o objetivo, é o posicionamento do texto mais a direita do vídeo.&lt;/p&gt;
&lt;p&gt;É interessante notar, que os &lt;tt class="docutils literal"&gt;Caracteres de Escape&lt;/tt&gt;, fazem um trabalho semelhante, ao encontrado em linguagem de marcação moderna, como por exemplo, o HTML, que utiliza para a representação de quebra de linha, a Tag &lt;tt class="docutils literal"&gt;&amp;lt;br&amp;gt;&lt;/tt&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="notacao-de-escape"&gt;
&lt;h2&gt;NOTAÇÃO DE ESCAPE&lt;/h2&gt;
&lt;p&gt;A notação utilizada e o que define os &lt;tt class="docutils literal"&gt;Caracteres de Escape&lt;/tt&gt;, é a barra invertida. Todo &lt;tt class="docutils literal"&gt;Caractere de Escape&lt;/tt&gt; é formado por uma barra invertida e outro caractere que definirá a ação.&lt;/p&gt;
&lt;p&gt;O primeiro caractere, no caso, a barra, define que estamos utilizando a notação de &lt;tt class="docutils literal"&gt;Caracteres de Escape&lt;/tt&gt;, enquanto que o segundo caractere, representa a ação a ser realizada.&lt;/p&gt;
&lt;div class="section" id="exemplos"&gt;
&lt;h3&gt;EXEMPLOS&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;/n - quebra de linha&lt;/li&gt;
&lt;li&gt;/t - tabulação&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="possiveis-erros"&gt;
&lt;h2&gt;POSSÍVEIS ERROS&lt;/h2&gt;
&lt;p&gt;Alguns Caracteres de Escape, talvez, não funcionem no editor que estejas utilizando, e também, não tente utilizar os &lt;tt class="docutils literal"&gt;Caracteres de Escape&lt;/tt&gt; dentro de editores de texto puro, como por exemplo, o &lt;tt class="docutils literal"&gt;Bloco de Notas&lt;/tt&gt; do Windows, até porque, ao invés de obteres um o resultado aqui descrito, terás somente, os digitos em sua representação textual.&lt;/p&gt;
&lt;p&gt;Os &lt;tt class="docutils literal"&gt;Caracteres de Escape&lt;/tt&gt;, como por exemplo, o &lt;tt class="docutils literal"&gt;Carriage Return&lt;/tt&gt;, cuja notação é &lt;tt class="docutils literal"&gt;\r&lt;/tt&gt;, normalmente, não funciona na plataforma Windows e nem nos Prompts de Comando modernos. O mesmo foi amplamente utilizado, na época das impressoras matriciais, até porque, praticamente todo o controle era feito com uso de &lt;tt class="docutils literal"&gt;Caracteres de Escape&lt;/tt&gt;, e o funcionamento da manipulação das impressoras, ocorria de forma semelhante a maneira como manipulamos o prompt atutalmente. A diferença, é que ao invés de enviarmos o texto para o o Prompt, enviávamos para um arquivo virtual, que era na verdade, a saída padrão da impressora.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="a-tabela-de-caracteres-de-escape"&gt;
&lt;h2&gt;A TABELA DE CARACTERES DE ESCAPE&lt;/h2&gt;
&lt;p&gt;A seguir, temos as principais Escape Sequence da linguagem C. Os dois primeiro itens, que nos caso, são a quebra de linha n e a tabulação t são os mais utilizados. Porém, é importante observar que muitas vezes precisaremos, por exemplo, imprimir a barra invertida, e então, precisaremos &amp;quot;escapar&amp;quot; a mesma, isto é, precisaremos utilizar um caractere especial para inserir num texto que a barra deve ser utilizada visualmente, e não como um Caractere de Escape.&lt;/p&gt;
&lt;p&gt;&lt;cite&gt;n&lt;/cite&gt; - Nova página (line feed)
&lt;cite&gt;t&lt;/cite&gt; - Tabulação (tab)&lt;/p&gt;
&lt;p&gt;&lt;cite&gt;'&lt;/cite&gt; - Aspa simples
&lt;cite&gt;&amp;quot;&lt;/cite&gt; - Aspa dupla&lt;/p&gt;
&lt;p&gt;&lt;cite&gt;0&lt;/cite&gt; - Caractere null (fim de uma String)&lt;/p&gt;
&lt;p&gt;&lt;cite&gt;?&lt;/cite&gt; - Interrogação
&lt;cite&gt;\&lt;/cite&gt; - backslash
&lt;cite&gt;a&lt;/cite&gt; - Emissão de som
&lt;cite&gt;b&lt;/cite&gt; - backspace
&lt;cite&gt;f&lt;/cite&gt; - Nova página (form feed)
&lt;cite&gt;r&lt;/cite&gt; - Retorno do cursor (carriage return)
&lt;cite&gt;v&lt;/cite&gt; - Tabulação Vertical&lt;/p&gt;
&lt;p&gt;É comum, por exemplo, precisarmos imprimir um texto e em seguida, posicionar o cursor na linha seguinte. Para isso, basta adicionarmos ao término da &lt;tt class="docutils literal"&gt;string&lt;/tt&gt; um &lt;tt class="docutils literal"&gt;\n&lt;/tt&gt;, que no caso, é a notação que representa uma quebra de linha.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="estudo-de-caso-pratico"&gt;
&lt;h2&gt;ESTUDO DE CASO PRÁTICO&lt;/h2&gt;
&lt;p&gt;Vamos supor que queiramos imprimir um texto onde uma parte estará numa linha e a outra parte, na linha seguinte. No código a seguir, estamos supondo a situação utilizando um código que possui erro.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Fala,&lt;/span&gt;
&lt;span class="n"&gt;galera&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;O código acima, simplesmente quebrou a expressão, o que não é permitido pela Linguagem C.&lt;/p&gt;
&lt;p&gt;A solução para o código do exemplo anterior, é a utilização de um &lt;tt class="docutils literal"&gt;Caractere de Escape&lt;/tt&gt; &lt;tt class="docutils literal"&gt;NewLine&lt;/tt&gt; representado pela notação &lt;tt class="docutils literal"&gt;\n&lt;/tt&gt;. Assim, corrigindo o exemplo anterior, teríamos um código em que a primeira parte seria impresso numa linha, enquanto a segunda, na linha seguinte.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Fala, &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;galera.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Observe no código acima, que o Caractere de Escape n está junto a palavra &lt;tt class="docutils literal"&gt;galera&lt;/tt&gt;, porém o mesmo, será interpretado pela compilador e então, uma quebra de linha será adicionada.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="links"&gt;
&lt;h2&gt;LINKS&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://docs.python.org/3/howto/unicode.html"&gt;Python e o sistema UNICODE&lt;/a&gt;
&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Escape_sequences_in_C"&gt;Escape Sequence em C&lt;/a&gt;
&lt;a class="reference external" href="https://docs.python.org/3/library/functions.html#ascii"&gt;Função Builtin ascii() do Python&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="python"></category><category term="caractere"></category><category term="ascii"></category><category term="unicode"></category><category term="escape sequence"></category></entry><entry><title>Tipos de dados em Python</title><link href="http://excript.com/python/tipos-de-dados-python.html" rel="alternate"></link><published>2016-07-18T16:20:00-03:00</published><updated>2016-07-18T16:20:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-07-18:/python/tipos-de-dados-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nessa aula estudaremos os tipos de dados definidos pela linguagem Python, as diferenças entre diferentes os mesmos, seus funcionamentos e a razão pela o mesmo foi embutido na linguagem.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;!-- Literais são as representações de dados dentro do código fonte. Na linguagem Java, literais representam os dados dos tipos primitivos, dos tipos String e dos tipos nulo, por exemplo. Assim, podemos subdividir os literais em: --&gt;
&lt;div class="section" id="tipos"&gt;
&lt;h2&gt;TIPOS&lt;/h2&gt;
&lt;p&gt;O &lt;strong&gt;tipo&lt;/strong&gt; é uma forma de classificar a informação. As linguagens de programação, normalmente, trazem implementado o que é chamado …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nessa aula estudaremos os tipos de dados definidos pela linguagem Python, as diferenças entre diferentes os mesmos, seus funcionamentos e a razão pela o mesmo foi embutido na linguagem.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;!-- Literais são as representações de dados dentro do código fonte. Na linguagem Java, literais representam os dados dos tipos primitivos, dos tipos String e dos tipos nulo, por exemplo. Assim, podemos subdividir os literais em: --&gt;
&lt;div class="section" id="tipos"&gt;
&lt;h2&gt;TIPOS&lt;/h2&gt;
&lt;p&gt;O &lt;strong&gt;tipo&lt;/strong&gt; é uma forma de classificar a informação. As linguagens de programação, normalmente, trazem implementado o que é chamado de &lt;strong&gt;tipos primitivos&lt;/strong&gt; ou &lt;strong&gt;tipos literais&lt;/strong&gt;, isto é, a informação na sua forma mais simples.&lt;/p&gt;
&lt;p&gt;Toda informação que manipulomos tem, por definição, um tipo. Por exemplo, para trabalharmos com números, utilizaremos o tipo &lt;tt class="docutils literal"&gt;int&lt;/tt&gt;, para trabalhar com texto, temos o tipo &lt;tt class="docutils literal"&gt;str&lt;/tt&gt;, para trabalhar com número contendo casas decimais, utilizamos &lt;tt class="docutils literal"&gt;float&lt;/tt&gt; e assim por diante.&lt;/p&gt;
&lt;div class="section" id="string"&gt;
&lt;h3&gt;String&lt;/h3&gt;
&lt;p&gt;Na programação String representa um conjunto de caracteres disposto numa determinada ordem. A partir de agora, todas as vezes em que falarmos o termo String, estaremos nos referindo a um conjunto de caracteres.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="inteiro"&gt;
&lt;h3&gt;Inteiro&lt;/h3&gt;
&lt;p&gt;Um segundo tipo de informação são os dados compostos por caracteres numéricos (algarismo). Os números são divididos em 2 partes:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;inteiros - chamados de &lt;strong&gt;integer&lt;/strong&gt; ou &lt;strong&gt;int&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;ponto flutuante - chamado de &lt;strong&gt;float&lt;/strong&gt; ou &lt;strong&gt;double&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="exemplos-de-informacao"&gt;
&lt;h3&gt;Exemplos de informação&lt;/h3&gt;
&lt;p&gt;A título de exemplo, vamos citar alguns tipos de informação e em seguida, vamos definir o tipo que precisaríamos utilizar para armazenar um valor correspondente a informação.&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Nome - dado tipo String&lt;/li&gt;
&lt;li&gt;Idade - dado tipo Integer&lt;/li&gt;
&lt;li&gt;Conta bancária - dado composto por números, pontos e traços&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;As informações são classificadas devido ao fato de seguirem regras e estruturas iguais. Ou seja, um número de telefone possui uma regra para todo o território nacional, logo, é possível classificar esse tipo de dado, até porque, há uma regra que o define.&lt;/p&gt;

    &lt;div class="admonitionblock tip data-line"&gt;
        &lt;table&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="icon"&gt;
                        &lt;i class="fa icon-tip" title="Dica!"&gt;&lt;/i&gt;
                    &lt;/td&gt;
                    &lt;td class="content"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt;Atualmente, os números de telefones no estado de São Paulo contém 9 digitos, enquanto os demais estados e capitais utilizam somente 8 digitos. Essa é uma situação que já ocorreu há anos e voltou a acontecer. Por isso, devemos estar certos de que irá acontecer novamente no futuro. Assim, é prudente que nossos softwares sejam capazes de lidar com essa variação, seja para o momento atual, seja para estarem preparados para futuras modificações.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;p&gt;Um outros exemplo que possibilita a classificação é o número das contas bancárias que, geralmente, é composto por números e um digito verificador. O nome das pessoas, normalmente, é constituído somente por letras. A idade das pessoas é representado por números inteiros. Datas são a junção de números com alguns caracteres especiais e assim por diante.&lt;/p&gt;

    &lt;div class="admonitionblock tip data-line"&gt;
        &lt;table&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="icon"&gt;
                        &lt;i class="fa icon-tip" title="Dica!"&gt;&lt;/i&gt;
                    &lt;/td&gt;
                    &lt;td class="content"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt;Digito verificar é aquele número contido no final, geralmente após um traço ou então, após um ponto. A função deste digito é proporcionar um meio para chegar se os digitos anteriores estão corretos, até porque, o digito verificador é obtido através de uma fórmula matemática que utiliza todos os números e no final, gera um digito de confirmação. Por exemplo, o CPF é composto de 9 digitos, mais 2 digitos verificador, por exemplo: ``CPF: 123.456.789-09``.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;p&gt;A última parte do CPF acima, no caso, o número &lt;tt class="docutils literal"&gt;09&lt;/tt&gt; é o digito verificador e o mesmo foi obtido através de uma fórmula que utilizou todos os 9 digitos e resultou no digito verificador &lt;tt class="docutils literal"&gt;09&lt;/tt&gt;.
Exemplos de informações que possuem digito verificador são: o número da conta corrente de alguns bancos, o CPF dentre outras informações.&lt;/p&gt;
&lt;p&gt;Os tipos de dados são uma forma de classificação que facilita o processamento e a manipulação das informações.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="tipos-primitivos"&gt;
&lt;h2&gt;TIPOS PRIMITIVOS&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Tipo Primitivo&lt;/strong&gt; são os tipos de dados mais simples, isto é, a informação em sua forma mais primitiva. Bons exemplos de valores primitivos são os caractere, os número, o valor &lt;strong&gt;True&lt;/strong&gt; e o &lt;strong&gt;False&lt;/strong&gt; e etc. A documentação do Python não trata os tipos de dados elementares (primitivos) com a nomenclatura normalmente encontrada na documentação da maioria das linguagens: &lt;strong&gt;Tipo Primitivo&lt;/strong&gt;. Na documentação oficial, os tipos primitivos são &lt;a class="reference external" href="https://docs.python.org/3.5/library/stdtypes.html"&gt;chamados de tipos built-ins&lt;/a&gt; ou então, &lt;strong&gt;tipos construídos&lt;/strong&gt;. Essa nomenclatura é utilizada para indicar que estamos utilizando informações que foram definidas, por padrão, através de classes dentro da Máquina Virtual do Python.&lt;/p&gt;
&lt;p&gt;Nesse momento, chamaremos de &lt;strong&gt;Tipos Primitivos&lt;/strong&gt; as informações em sua forma mais simples, porém, é importante saber que para o Python, não há tipo primitivos, mas sim, estruturas de dados que estão definidas, na maior parte das vezes, dentro da própria Máquina Virtual do Python.&lt;/p&gt;
&lt;p&gt;É normal que as linguagens de programação tenham um conjunto de tipos chamados de: &lt;strong&gt;tipos primitivos&lt;/strong&gt;. Devemos pensar nessa classificação como sendo os tipos primários de informações, como por exemplo, o tipo numérico. Como sabemos, todo número é constituído por algarismos. Dessa forma, o tipo numérico pode ser qualquer valor que seja composto por 1 ou mais caracteres numéricos.&lt;/p&gt;
&lt;p&gt;Dessa forma, isto é, tendo a certeza de que uma variável declarada como sendo do tipo numérico inteiro sempre terá um valor numérico válido, somos capazes de desenvolver funções especificas que manipulam esse tipo de dado de maneira muito mais eficiente e sem a necessidade de verificação se o tipo da informação contida em determinada variável é válido.&lt;/p&gt;
&lt;p&gt;Da mesma forma, temos o tipo de dado que representa conjuntos de caracteres, que na programação, é comumente chamado de &lt;cite&gt;String&lt;/cite&gt; e o Python o chama de &lt;cite&gt;str&lt;/cite&gt;. As &lt;cite&gt;String&lt;/cite&gt; são capazes de armazenar conjuntos de caracteres que estão dispostos numa determinada ordem. Todas as vezes que estivermos manipulando dados que contenha caracteres - o tipo mais primitivo, isto é, a maneira mais abstrata para representarmos caracteres - estaremos utilizando uma variável definida como sendo do tipo &lt;cite&gt;str&lt;/cite&gt;.&lt;/p&gt;
&lt;p&gt;O fato de o Python não trabalhar com tipo primitivos diretamente, deve-se ao fato de que em Python, &lt;strong&gt;tudo são objetos&lt;/strong&gt;. Dessa forma, o que chamaríamos de primitivo é, em Python, representado como uma e toda informação será, um objeto propriamente dito. A seguir, temos a lista dos principais tipos built-ins da linguagem Python:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;int - para números inteiros&lt;/li&gt;
&lt;li&gt;str - para conjunto de caracteres&lt;/li&gt;
&lt;li&gt;bool - armazena True ou False&lt;/li&gt;
&lt;li&gt;list - para agrupar um conjunto de elementos&lt;/li&gt;
&lt;li&gt;tupla - semelhante ao tipo &lt;strong&gt;list&lt;/strong&gt;, porém, imutável&lt;/li&gt;
&lt;li&gt;dic - para agrupar elementos que serão recuperados por uma &lt;strong&gt;chave&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;O Python fornece um conjunto de tipos básicos bastante amplo e que normalmente, atendem a maioria das necessidades. Cada tipo citado, possui um conjunto de funções e métodos que permitem manipularmos as informações, contidas na variável, de maneira bastante eficiente.&lt;/p&gt;
&lt;p&gt;Sempre que formos criar um novo &lt;strong&gt;tipo de dados&lt;/strong&gt;, acabaremos utilizando os tipos básicos da linguagem, como por exemplo, o tipo &lt;strong&gt;`int`&lt;/strong&gt;, ou então, o tipo &lt;strong&gt;`str`&lt;/strong&gt; e assim por diante.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="diferenca-entre-tipo-e-valor"&gt;
&lt;h2&gt;DIFERENÇA ENTRE TIPO E VALOR&lt;/h2&gt;
&lt;p&gt;O &lt;strong&gt;valor&lt;/strong&gt; é qualquer informação, seja um número, texto, música, vídeo e etc. O &lt;strong&gt;tipo&lt;/strong&gt; por sua vez, é a estrutura da informação e a forma de classificarmos os dados.&lt;/p&gt;
&lt;p&gt;Todo valor numérico deve ser capaz de ser somado a outro valor, ou então, subtraido. Da mesma forma que todo texto, deve ser capaz de ser concatenado a outro, isto é, ser juntado a outro conjunto de caracteres.&lt;/p&gt;
&lt;p&gt;O &lt;strong&gt;tipo&lt;/strong&gt; da informação deve ser pensado como uma forma de classificarmos as diferentes informações e assim, termos a disposição um conjunto de funções para tratarmos e modificarmos os valores.&lt;/p&gt;
&lt;p&gt;É importante saber que somos capazes de criar novos tipos de dados a qualquer momento, e a programação orientada a objetos é, em sua definição mais primitiva, uma maneira de criarmos novos tipos abstratos e definirmos, na estrutura da classe, funções, métodos, verificações que busquem tratar valores que tenham uma mesma estrutura.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="conversao-de-dados-ou-coercao-de-tipos"&gt;
&lt;h2&gt;CONVERSÃO DE DADOS OU COERÇÃO DE TIPOS&lt;/h2&gt;
&lt;p&gt;Se as informações possuem tipos, logo, temos de ser capazes em converter um tipo de informação num outro tipo de dado. Essa ação de conversão é comumente chamada de &lt;strong&gt;Coerção de Tipos&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Linguagem tipada é aquela que permite a classificação das informações pelo uso de tipos de dados, por exemplo, o Python trata um conjunto de caracteres como sendo do tipo &lt;tt class="docutils literal"&gt;String&lt;/tt&gt;, logo, o Python é uma linguagem tipada, no caso, uma linguagem dinamicamente tipada.&lt;/p&gt;
&lt;p&gt;Se existem diferentes tipos de informação, temos de ser capazes de converter, por exemplo, um número para o tipo texto. Ou seja, a conversão de valores é essencial para que possamos trabalhar com informações tipadas, até porque, há diversas situações onde desejaremos manipular um número como sendo um texto.&lt;/p&gt;
&lt;p&gt;Essa conversão é comumente chamada de &lt;strong&gt;Conversão de Dados&lt;/strong&gt; ou então, &lt;strong&gt;Coerção de Tipos&lt;/strong&gt;. É importante observar, que uma informação do tipo texto, pode ser constituida de letras e números, ou seja, o grupo de caracteres alfanuméricos. Então, um número pode ser representado como um texto, mas o contrário, nem sempre será possível.&lt;/p&gt;
&lt;p&gt;Pra convertermos, por exemplo, um texto para o tipo numérico, devemos especificar o tipo a ser convertido e passarmos o valor através de parêntesis, como podemos ver a seguir:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;tipo_a_ser_convertido&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;informação&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A seguir, declararemos uma variável de nome &lt;tt class="docutils literal"&gt;texto&lt;/tt&gt; e atribuimos um valor numérico a mesma. Em seguida, declaramos outra variável, de nome &lt;tt class="docutils literal"&gt;num&lt;/tt&gt; e atribuimos a esta o resultado da Coerção de Tipos. Isto é, dissemos que o valor da variável &lt;tt class="docutils literal"&gt;texto&lt;/tt&gt; deve ser convertido num tipo numérico &lt;tt class="docutils literal"&gt;num = int(texto)&lt;/tt&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="n"&gt;texto&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;10&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;texto&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;texto&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;#o sinal de + concatena duas informações&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;#o sinal de + soma dois números&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1010&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No exemplo acima, podemos observar que a utilização do operador &lt;cite&gt;+&lt;/cite&gt; funciona de maneira diferente conforme o tipo de dado que esteja sendo utilizado. Quando o sinal de adição estiver entre dois valores numéricos, estes serão somados. Quando o sinal adição estiver entre dois valores do tipo &lt;cite&gt;String&lt;/cite&gt;, estes serão concatenados (juntados) e quando o sinal de adição estiver entre um valor do tipo numérico e do tipo &lt;cite&gt;String&lt;/cite&gt;, uma exceção será levantada dizendo que não é possível utilizar o operador de adição entre tipos distintos.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="funcionamento-interno"&gt;
&lt;h2&gt;FUNCIONAMENTO INTERNO&lt;/h2&gt;
&lt;p&gt;Em Python, tudo é tratado como sendo objeto, inclusive, o código que escrevemos, pode ser acessado através de uma ferramenta disponibiliada pelo equipe oficial do Python para ser acessado de forma estruturada. Ou seja, nosso código é transformado [transcrito] em estruturas organizadas hierarquicamente e é possível navegar através dos níveis e obter o código original que originou cada segmento!&lt;/p&gt;
&lt;p&gt;Linguagens como &lt;strong&gt;C++&lt;/strong&gt;, &lt;strong&gt;C#&lt;/strong&gt; ou &lt;strong&gt;Java&lt;/strong&gt; também são fortemente &lt;strong&gt;orientada a objetos&lt;/strong&gt;, mesmo assim, as mesmas mantém o conceito de tipo primitivo de dado que, como acabamos de estudar, não há em Python.&lt;/p&gt;

    &lt;div class="admonitionblock note data-line"&gt;
        &lt;table&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="icon"&gt;
                        &lt;i class="fa icon-note" title="Nota!"&gt;&lt;/i&gt;
                    &lt;/td&gt;
                    &lt;td class="content"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt;Ainda que as linguagens como Java e C# contenham ideia de tipo primitivo e, inclusive, são tratados como tipos literais na sua documentação, a verdade é que, na prática, a máquina virtual gerencia de forma diferente os tipos primitivos se comparado com a ideia encontrada em linguagem como o C++.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;p&gt;Essas característica do Python deve-se ao fato de que o mesmo &lt;strong&gt;realmente&lt;/strong&gt; trata tudo que possamos imaginar como sendo um objeto tangível. Se tivermos 2 variáveis que contenham o número 10 num mesmo bloco de código, o Python, ao invés de reservar 2 locais de memória distintos, um para cada variável, funciona de forma inversa. Ao invés do nome da variável se referir a um local na memória que contém um valor, é o valor, contido na memória, que registra as os nomes de variáveis que estão associados.&lt;/p&gt;
&lt;p&gt;Por isso, dizer que uma variável contém um valor é, por definição da linguagem Python, um erro! Isso porque, os valores não estão armazenados numa posição reservada a cada variável mas sim, são os dados que estão possuem nomes de variáveis associados.&lt;/p&gt;
&lt;p&gt;Portanto, variáveis que contenham um mesmo valor, terão seus nomes associados ao mesmo valor. Há um excelente &lt;a class="reference external" href="http://pythonclub.com.br/tuplas-mutantes-em-python.html"&gt;artigo falando sobre a forma que o Python trata os tipos e as informações publicado pelo Luciano Ramalho&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Por fim, temos 4 tipos para classificação para os tipos de informações.&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;Tipos simples&lt;/tt&gt;  - constituidos por simples blocos, como &lt;tt class="docutils literal"&gt;int()&lt;/tt&gt; e &lt;tt class="docutils literal"&gt;float()&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;Tipos de contêiner&lt;/tt&gt; - objetos capazes de conter outros objetos&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;Tipos de código&lt;/tt&gt; - objetos encapsuladores de elementos dos nosso programas&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;Tipos internos&lt;/tt&gt; - tipos que serão utilizados durante a execução do nosso programa&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;No &lt;a class="reference external" href="http://www.ibm.com/developerworks/br/library/os-python1/"&gt;link a seguir há mais informações sobre os tipos de dados do Python&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="links-externos"&gt;
&lt;h2&gt;LINKS EXTERNOS&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://pythonclub.com.br/tuplas-mutantes-em-python.html"&gt;Tuplas Mutantes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="python"></category><category term="tipos"></category><category term="tipo de dados"></category><category term="int"></category><category term="float"></category><category term="string"></category><category term="date"></category><category term="bool"></category><category term="str"></category><category term="blog"></category></entry><entry><title>Instrução break do Python</title><link href="http://excript.com/python/instrucao-break-python.html" rel="alternate"></link><published>2016-07-17T13:20:00-03:00</published><updated>2016-07-17T13:20:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-07-17:/python/instrucao-break-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nessa aula estudaremos a função "break" do Python que é, uma instrução auxiliadora das Estruturas de Repetição e que nos proporciona, um maior controle durante a iteração.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="a-instrucao-break"&gt;
&lt;h2&gt;A INSTRUÇÃO &lt;code&gt;break&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;A instrução &lt;code&gt;break&lt;/code&gt; finaliza a iteração enquanto o script continua a execução normalmente. O objetivo dessa instrução é fornecer a …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nessa aula estudaremos a função "break" do Python que é, uma instrução auxiliadora das Estruturas de Repetição e que nos proporciona, um maior controle durante a iteração.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="a-instrucao-break"&gt;
&lt;h2&gt;A INSTRUÇÃO &lt;code&gt;break&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;A instrução &lt;code&gt;break&lt;/code&gt; finaliza a iteração enquanto o script continua a execução normalmente. O objetivo dessa instrução é fornecer a capacidade de forçar a interrupção da iteração, ou seja, do laço de repetição inteiro.&lt;/p&gt;
&lt;p&gt;A seguir, temos um código simples que utiliza a instrução &lt;code&gt;break&lt;/code&gt; pra finalizar a execução do laço de repetição &lt;code&gt;while&lt;/code&gt; e isso acontecerá quando a condição definida através do &lt;code&gt;if&lt;/code&gt; retornar verdadeiro.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Interrompendo a execução da repetição.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código anterior, definimos a variável &lt;code&gt;x&lt;/code&gt; e atribuimos 0 ainda na definição. Em seguida, implementamos o laço de repetição &lt;code&gt;while&lt;/code&gt; e definimos que, enquanto o valor de &lt;code&gt;x&lt;/code&gt; for menor do que 10, o bloco de instrução será executado. Em seguida, implementamos com a instrução &lt;code&gt;if&lt;/code&gt; uma condição que avalia se o valor de &lt;code&gt;x&lt;/code&gt; é igual a 5. Se a expressão for igual a &lt;code&gt;True&lt;/code&gt;, será impresso uma mensagem no console e a instrução &lt;code&gt;break&lt;/code&gt; executada, o que implicará, na interrupção da execução do laço de repetição &lt;code&gt;while&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Antes de entrar no laço&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;A condição estabelecida retornou true&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Depois de ter entrado no laço&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="python"></category><category term="break"></category><category term="for loop"></category><category term="while loop"></category></entry><entry><title>O for loop e a função range() do Python</title><link href="http://excript.com/python/for-in-range-python.html" rel="alternate"></link><published>2016-07-17T10:00:00-03:00</published><updated>2016-07-17T10:00:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-07-17:/python/for-in-range-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nessa aula aprofundaremos nosso estudo sobre a relação intima entre a função range() e o laço de repetição for.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="for-x-in-range-10"&gt;
&lt;h2&gt;for x in range(10)&lt;/h2&gt;
&lt;p&gt;Agora, &lt;a class="reference external" href="http://excript.com/python/for-loop-python.html"&gt;vamos fazer um exemplo utilizando a estrutura de repetição for&lt;/a&gt; e a &lt;a class="reference external" href="http://excript.com/python/funcao-range-python.html"&gt;função built-in do Python que retorna sequências numéricas&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A estrutura de repetição &lt;tt class="docutils literal"&gt;for …&lt;/tt&gt;&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nessa aula aprofundaremos nosso estudo sobre a relação intima entre a função range() e o laço de repetição for.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="for-x-in-range-10"&gt;
&lt;h2&gt;for x in range(10)&lt;/h2&gt;
&lt;p&gt;Agora, &lt;a class="reference external" href="http://excript.com/python/for-loop-python.html"&gt;vamos fazer um exemplo utilizando a estrutura de repetição for&lt;/a&gt; e a &lt;a class="reference external" href="http://excript.com/python/funcao-range-python.html"&gt;função built-in do Python que retorna sequências numéricas&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A estrutura de repetição &lt;tt class="docutils literal"&gt;for&lt;/tt&gt; executa um ciclo para cada elemento do objeto que está sendo iterado. Nas vezes em que precisamos que determinada variável seja incrementado ou decrementada a cada ciclo, a forma mais simples, é gerando uma lista com a função &lt;code&gt;range()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;No código a seguir, temos um exemplo onde a variável item recebera um número, iniciando em zero, finalizando em 9 e, a cada ciclo, o número seguinte da sequência é atribuido à variável &lt;code&gt;item&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Se executarmos esse código, teremos algo do tipo:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
0
1
2
3
4
5
6
7
8
9
&lt;/pre&gt;
&lt;p&gt;Imprimimos os números da sequência numérica que foi gerada com a função &lt;code&gt;range()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Poderíamos também, gerar uma lista iniciando em 9 e finalizando em 0. A definição da estrutura &lt;tt class="docutils literal"&gt;for loop&lt;/tt&gt; se mantém, precisando alterar somente, os parâmetro passados pela função &lt;code&gt;range()&lt;/code&gt;, por exemplo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Para gerarmos a mesma lista numérica, porém, com a ordenação invertida, podemos utilizar a função &lt;code&gt;reverse()&lt;/code&gt; que inverte a ordem de objetos iteraveis, ou então, gerar a série numérica invertida.&lt;/p&gt;
&lt;p&gt;Invocamos a função &lt;code&gt;range()&lt;/code&gt; e definimos que o parâmetro &lt;code&gt;start&lt;/code&gt; seja igual a 9, &lt;code&gt;stop&lt;/code&gt; igual a -1, e &lt;code&gt;step&lt;/code&gt; igual -1.&lt;/p&gt;
&lt;p&gt;O argumento &lt;code&gt;start&lt;/code&gt; não há o que comentar. O parâmetro &lt;code&gt;stop&lt;/code&gt; é igual a -1 porque o intervalo é aberto, isto é, o número do extremos não fará parte do grupo, logo, se definimos -1, o último elemento da série será 0. Por fim, definimos o &lt;code&gt;step&lt;/code&gt;, ou seja, o passo, intervalo numérico entre cada elemento igual a -1. Dessa forma, o Python inverte a ordenação do objeto iterável.&lt;/p&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="python"></category><category term="for loop"></category><category term="range"></category></entry><entry><title>A função range() do Python</title><link href="http://excript.com/python/funcao-range-python.html" rel="alternate"></link><published>2016-07-17T00:19:00-03:00</published><updated>2016-07-17T00:19:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-07-17:/python/funcao-range-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos a função "range()" uma ferramenta muito utilizada junto a instrução "for", bem como, em todas as situações em que estamos trabalhando com sequências numéricas.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="a-funcao-range"&gt;
&lt;h2&gt;A função &lt;code&gt;range()&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;A função &lt;code&gt;range()&lt;/code&gt; retorna uma série numérica no intervalo enviado como argumento. A série retornada é um objeto iterável tipo …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos a função "range()" uma ferramenta muito utilizada junto a instrução "for", bem como, em todas as situações em que estamos trabalhando com sequências numéricas.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="a-funcao-range"&gt;
&lt;h2&gt;A função &lt;code&gt;range()&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;A função &lt;code&gt;range()&lt;/code&gt; retorna uma série numérica no intervalo enviado como argumento. A série retornada é um objeto iterável tipo &lt;code&gt;range&lt;/code&gt; e os elementos contidos serão gerados sob demanda.&lt;/p&gt;
&lt;p&gt;É comum o uso da função &lt;code&gt;range()&lt;/code&gt; com a estrutura &lt;tt class="docutils literal"&gt;for loop&lt;/tt&gt;. Desta formta temos que a cada ciclo o próximo elemento da sequência será utilizado de tal forma que é possível partirmos de um ponto e ir incrementando, decrementando &lt;tt class="docutils literal"&gt;x&lt;/tt&gt; unidades.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="definicao-da-funcao-range"&gt;
&lt;h2&gt;DEFINIÇÃO DA FUNÇÃO &lt;code&gt;range()&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;A seguir, temos a &lt;a class="reference external" href="https://docs.python.org/3.6/library/functions.html#func-range"&gt;definição da função  range() encontrada na documentação oficial do Python&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;stop&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;#primeira definição ou definição simplificada&lt;/span&gt;
&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;stop&lt;/span&gt;&lt;span class="p"&gt;[,&lt;/span&gt; &lt;span class="n"&gt;step&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;#segunda definição ou definição completa&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A função &lt;code&gt;range()&lt;/code&gt; exige a definição do último elemento da sequência numérica. Por padrão, o parâmetro &lt;tt class="docutils literal"&gt;start&lt;/tt&gt; será igual a 0 e o &lt;tt class="docutils literal"&gt;step&lt;/tt&gt; igual a 1.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="parametros-da-funcao-range"&gt;
&lt;h2&gt;PARÂMETROS DA FUNÇÃO &lt;code&gt;range()&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;A função &lt;tt class="docutils literal"&gt;range()&lt;/tt&gt; permite-nos especificar o início da sequência, o passo, e o valor final. O único parâmetro obrigatório é o que define quem será o último elemento da sequência.&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;start - início da sequência&lt;/li&gt;
&lt;li&gt;stop - último elemento da sequência&lt;/li&gt;
&lt;li&gt;step - intervalo entre os elementos&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Na definição da função &lt;code&gt;range()&lt;/code&gt; é utilizado a notação de conjuntos numéricos para documentar se o intervalo da sequência é aberto ou fechado. Então, os colchetes junto aos parâmetros indica se o intervalo é aberto ou fechado, isto é, se o número estará contido ou não na sequência numérica.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="intervalo-aberto-e-fechado"&gt;
&lt;h2&gt;INTERVALO ABERTO E FECHADO&lt;/h2&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;intervalo aberto &lt;tt class="docutils literal"&gt;] x [&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first"&gt;Quando os colchetes se opõem ao número, temos um intervalo aberto. Assim, todos os números no intervalo estarão contidos na sequência numérica, menos os extremos.&lt;/p&gt;
&lt;p class="last"&gt;&lt;strong&gt;Intervalo:&lt;/strong&gt; ]a, b[
&lt;strong&gt;Conjunto:&lt;/strong&gt; {x ∈ R | a &amp;lt; x &amp;lt; b}
&lt;strong&gt;Tradução:&lt;/strong&gt; números reais maiores do que &lt;tt class="docutils literal"&gt;a&lt;/tt&gt; e menores do que &lt;tt class="docutils literal"&gt;b&lt;/tt&gt; (quando o intervalo está aberto, entende-se que todos os números do intervalo estão contidos, menos o(s) extremo(s).&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;intervalo fechado &lt;tt class="docutils literal"&gt;[ x ]&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;Quando o colchete estiver de &amp;quot;acordo&amp;quot; (no sentido normal) ao número, tem-se um intervalo fechado. Assim, todos os números contidos neste intervalo estarão contidos inclusive os extremos da sequência.
&lt;strong&gt;Intervalo:&lt;/strong&gt; [a, b]
&lt;strong&gt;Conjunto:&lt;/strong&gt; {x ∈ R | a ≤x ≤ b}
&lt;strong&gt;Tradução:&lt;/strong&gt; números reais maiores ou igual a &lt;tt class="docutils literal"&gt;a&lt;/tt&gt; e menores ou igual a &lt;tt class="docutils literal"&gt;b&lt;/tt&gt; (quando o intervalo está fechado, entende-se que todos os números do intervalo estão contidos, inclusive o(s) extremo(s).&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class="section" id="voltando-ao-python"&gt;
&lt;h2&gt;VOLTANDO AO PYTHON&lt;/h2&gt;
&lt;p&gt;Agora que já relembramos alguns conceitos da matemática, vamos rever a notação da função &lt;code&gt;range()&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;stop&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;stop&lt;/span&gt;&lt;span class="p"&gt;[,&lt;/span&gt; &lt;span class="n"&gt;step&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Com a primeira notação é possível invocar a função definindo somente, o intervalo final, ou seja, definindo somente o parâmetro &lt;cite&gt;stop&lt;/cite&gt;. Assume-se assim, que o início da sequência é igual a 0 e o final, igual ao valor que está sendo enviado como argumento.&lt;/p&gt;
&lt;p&gt;Com a segunda notação, ou então, com a notação completa, temos a capacidade de definir &lt;strong&gt;(1)&lt;/strong&gt; o início da sequência &lt;strong&gt;(2)&lt;/strong&gt; o último elemento e &lt;strong&gt;(3)&lt;/strong&gt; o passo, isto é, o intervalo entre cada elemento.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="exemplo-de-uso-da-primeira-notacao"&gt;
&lt;h2&gt;EXEMPLO DE USO DA PRIMEIRA NOTAÇÃO&lt;/h2&gt;
&lt;p&gt;Vamos desenvolver um simples exemplo demonstrando o uso da primeira notação estudada, assim, vamos invocar a função &lt;code&gt;range()&lt;/code&gt; e passar como argumento o últimos elemento da sequência numérica que desejamos.&lt;/p&gt;
&lt;p&gt;É importante observar que na versão 3x do Python será retornado, pela função &lt;code&gt;range()&lt;/code&gt;, um objeto iterável, e não uma lista contendo os elementos propriamente dito. Por essa razão, iremos forçar a conversão do objeto iterável para o objeto &lt;tt class="docutils literal"&gt;list&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;DEFINIÇÃO: &lt;tt class="docutils literal"&gt;range( stop[ )&lt;/tt&gt;
DEFINIÇÃO MATEMÁTICA: &lt;tt class="docutils literal"&gt;[0,5[&lt;/tt&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A função retornou uma lista contendo 5 elementos, onde o primeiro é o 0 e o último 4.&lt;/p&gt;
&lt;p&gt;O primeiro elemento é igual a 0, até porque, quando não definido, assume-se que &lt;tt class="docutils literal"&gt;start=0&lt;/tt&gt;. O último elemento é o 4, até porque, o parâmetro &lt;tt class="docutils literal"&gt;stop&lt;/tt&gt; possui o intervalo aberto, isto é, o número definido não estará contido na sequência numérica.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="exemplos-de-uso-da-segunda-notacao"&gt;
&lt;h2&gt;EXEMPLOS DE USO DA SEGUNDA NOTAÇÃO&lt;/h2&gt;
&lt;p&gt;Vamos desenvolver um simples exemplo demonstrando o uso da segunda notação estudada.&lt;/p&gt;
&lt;p&gt;DEFINIÇÃO: range( [start], stop[, step] )
DEFINIÇÃO MATEMÁTICA: &lt;tt class="docutils literal"&gt;[0,5[&lt;/tt&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;start&lt;/strong&gt; - valor onde o intervalo deve começar&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;stop&lt;/strong&gt; - valor (menos um) onde o intervalo deve finalizar&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;step&lt;/strong&gt; - passo (intervalo entre os elementos da sequência)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Vamos gerar uma lista que contenha 4 objetos numéricos e que o primeiro seja igual a 2 e o último igual a 5.&lt;/p&gt;
&lt;p&gt;Novamente, iremos converter o objeto iterável retornado pela função &lt;code&gt;range()&lt;/code&gt; para o tipo &lt;code&gt;list&lt;/code&gt;, para que o mesmo, tenha seus elementos impressos na saída padrão.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima, definimos o parâmetro &lt;code&gt;start=2&lt;/code&gt; e &lt;code&gt;stop=6&lt;/code&gt; logo, o primeiro elemento foi o 2, enquanto o último elemento, igual a 5.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="passo-ou-intervalo-entre-os-elementos"&gt;
&lt;h2&gt;PASSO OU INTERVALO ENTRE OS ELEMENTOS&lt;/h2&gt;
&lt;p&gt;O &lt;code&gt;step&lt;/code&gt; é o intervalo entre cada elemento numérico. Se por exemplo, gerarmos uma sequência numérica entre 0 e 10 e definirmos, será assumido por padrão, que o &lt;code&gt;step&lt;/code&gt; é igual a 1 e por essa razão, o elemento seguinte estará a 1 unidade do elemento anterior, e a lista será igual a: &lt;tt class="docutils literal"&gt;[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Agora, se nós gerarmos uma lista entre 0 e 10, porém, definirmos o passo como sendo igual a 2, a seguinte lista será retornada: &lt;tt class="docutils literal"&gt;[0, 2, 4, 6, 8]&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Em ambos os casos os estamos trabalhando com uma sequência numérica num mesmo intervalo, porém, no primeiro exemplo o intervalo entre os elementos é igual a 1 unidade, enquanto que no segundo exemplo, o espaço entre os elementos é de 2 unidades.&lt;/p&gt;
&lt;p&gt;No código a seguir, vamos gerar uma lista no intervalo 2 à 10 e o &lt;code&gt;step&lt;/code&gt; será igual a 2 unidades.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;27&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima, geramos 2 sequência numéricas, a primeira no intervalo de 2 à 10 e com o &lt;tt class="docutils literal"&gt;step&lt;/tt&gt; igual a 2. Logo foram impresso 4 elementos no intervalo de 2 à 10.&lt;/p&gt;
&lt;p&gt;Em seguida, novamente com a função &lt;code&gt;range()&lt;/code&gt; definimos uma segunda sequência numérica no intervalo de 0 à 30 e o &lt;tt class="docutils literal"&gt;step&lt;/tt&gt; igual a 3. Logo, foi impresso uma lista, contendo 10 elementos, onde o primeiro é o 0 e o último o 27. Também é possível observar, que a sequência gerada é a tabuada de 3, faltando somente o último valor e para isso, bastava somente definir o intervalo final como sendo igual a 31.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="exemplos-da-documentacao-oficial-do-python"&gt;
&lt;h2&gt;EXEMPLOS DA DOCUMENTAÇÃO OFICIAL DO PYTHON&lt;/h2&gt;
&lt;p&gt;Os exemplos a seguir, foram extraídos da documentação oficial do Python e demonstram situação interessantes com o uso da função &lt;code&gt;range()&lt;/code&gt;. Vale a pena o estudo de cada situação detalhadamente.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="c1"&gt;#gerando uma sequência de 0 à 9&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;#gerando uma sequência de 1 à 11&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;#gerando uma sequência de 0 à 30 com step=5&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;#gerando uma sequência os 5 primeiros números da tabuada de 3&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;#gerando uma sequência numérica negativa&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;#gerando uma sequência numérica vazia&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;[]&lt;/span&gt;

&lt;span class="c1"&gt;#gerando uma sequência numérica vazia,&lt;/span&gt;
&lt;span class="c1"&gt;#onde o interval inicial é maior do que o final&lt;/span&gt;
&lt;span class="c1"&gt;#por essa razão, há lista é nula&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;[]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="links-externos"&gt;
&lt;h2&gt;LINKS EXTERNOS&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Documentação oficial: &lt;a class="reference external" href="https://docs.python.org/3.6/library/functions.html#func-range"&gt;https://docs.python.org/3.6/library/functions.html#func-range&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="python"></category><category term="lista"></category><category term="for loop"></category><category term="iteração"></category><category term="looping"></category><category term="range"></category></entry><entry><title>A instrução for em Python</title><link href="http://excript.com/python/for-loop-python.html" rel="alternate"></link><published>2016-07-02T18:25:00-03:00</published><updated>2016-07-02T18:25:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-07-02:/python/for-loop-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nessa aula estudaremos a estrutura de repetição "for", utilizada para percorrer listas e sequências facilmente do primeiro ao último elemento.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="introducao-a-instrucao-for-in"&gt;
&lt;h2&gt;INTRODUÇÃO À INSTRUÇÃO &lt;code&gt;for..in&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;A instrução &lt;code&gt;for&lt;/code&gt; se caracteriza por obrigar o programador a definir, explicitamente em seu cabeçalho, a quantidade de vezes [ciclos] que será executado. A quantidade …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nessa aula estudaremos a estrutura de repetição "for", utilizada para percorrer listas e sequências facilmente do primeiro ao último elemento.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="introducao-a-instrucao-for-in"&gt;
&lt;h2&gt;INTRODUÇÃO À INSTRUÇÃO &lt;code&gt;for..in&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;A instrução &lt;code&gt;for&lt;/code&gt; se caracteriza por obrigar o programador a definir, explicitamente em seu cabeçalho, a quantidade de vezes [ciclos] que será executado. A quantidade de ciclos é determinado pela quantidade de elementos contido na lista declarada junto com a instrução &lt;code&gt;for&lt;/code&gt;. Dessa forma, será executado um ciclo para cada elemento &lt;strong&gt;isoladamente&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;O &lt;tt class="docutils literal"&gt;Laço de Repetição&lt;/tt&gt; &lt;code&gt;for&lt;/code&gt; do Python se assemelha ao &lt;code&gt;for each&lt;/code&gt; encontrado linguagens como o Java, PHP, C# e etc. Inclusive, a característica encontrada em todas as linguagens é a mesma que temos aqui em Python: uma estrutura simples e compacta para percorrer todos elementos das coleções ou estruturas que contenham listas de objetos.&lt;/p&gt;
&lt;p&gt;A sintaxe do Python não possui a estrutura de repetição &lt;code&gt;for&lt;/code&gt; tradicional, onde define-se uma variável, condição e incremento no cabeçalho da estrutura. A ideia, é o trabalho e manipulação de estrutura iteraveis, isto é, a definição de iteradores, ou melhor: objetos iteráveis - &lt;code&gt;iterators&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Se você não conhece a estrutura &amp;quot;normal&amp;quot; da instrução &lt;tt class="docutils literal"&gt;for&lt;/tt&gt; implementada pela maioria das linguagens, não há problema, até porque, tal conhecimento de nada serve quando estamos programando em Python!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="a-definicao-da-instrucao-for"&gt;
&lt;h2&gt;A DEFINIÇÃO DA INSTRUÇÃO &lt;code&gt;for&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;A estrutura &lt;tt class="docutils literal"&gt;for&lt;/tt&gt; exige, inicialmente, a definição de uma variável e, em seguida, a lista que será iterada. A seguir, temos o esquema para o uso da instrução &lt;tt class="docutils literal"&gt;for&lt;/tt&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;variável&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;objeto&lt;/span&gt; &lt;span class="n"&gt;iterável&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;bloco&lt;/span&gt; &lt;span class="n"&gt;de&lt;/span&gt; &lt;span class="n"&gt;instrução&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A variável a ser declarada na primeira parte da estrutura, receberá, a cada ciclo, um elemento contido na lista que está sendo iterada. Ao término, todos elementos terão sido percorridos e, a cada ciclo, o elemento seguinte contido no objeto iterável terá sido passado pela variável definida inicialmente.&lt;/p&gt;
&lt;p&gt;A seguir, faremos um exemplo real e percorreremos uma lista numérica.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Nós podemos ler o laço de repetição definido acima &lt;code&gt;for item in [3,4,5,6,7]:&lt;/code&gt; da seguinte maneira. Para cada elemento contido na lista &lt;code&gt;[3,4,5,6,7]&lt;/code&gt; execute o bloco de código a seguir e a cada execução, atribua à variável &lt;tt class="docutils literal"&gt;item&lt;/tt&gt; &lt;code&gt;for item in&lt;/code&gt; um item da lista.&lt;/p&gt;
&lt;p&gt;Ou entao, podemos ler como estamos estudando... Acima, definimos a variável &lt;code&gt;item&lt;/code&gt; e uma lista com 5 elementos &lt;code&gt;[3,4,5,6,7]&lt;/code&gt;. A cada ciclo, o elemento seguinte é atribuido à variável &lt;code&gt;item&lt;/code&gt; e ao término, teremos executado um ciclo individual para cada elemento contido na lista.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="a-instrucao-else"&gt;
&lt;h2&gt;A INSTRUÇÃO &lt;code&gt;else&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;A instrução &lt;code&gt;else&lt;/code&gt; pode ser utilizado com a instrução &lt;code&gt;for&lt;/code&gt; da mesma forma em que estudamos com a instrução &lt;code&gt;while&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Em vista de que á estrutura &lt;code&gt;for&lt;/code&gt; junto com a instrução &lt;code&gt;else&lt;/code&gt; possui funcionamento igual ao laço de repetição &lt;code&gt;while&lt;/code&gt;, não há necessidade de explicarmos novamento. Veja a aula sobre a estrutura &lt;code&gt;while&lt;/code&gt; para maiores informações.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="c1"&gt;#utilizando a instrução ELSE&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;# break&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;else&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Acima, temos que a estrutura &lt;code&gt;for&lt;/code&gt; executou todos os ciclos definidos e no final, executou o bloco da instrução &lt;code&gt;else&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="c1"&gt;#Implementação sem o uso da instrução ELSE&lt;/span&gt;
&lt;span class="n"&gt;break_executado&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;break_executado&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;break_executado&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;else&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Acima, temos que a estrutura &lt;code&gt;for&lt;/code&gt; o primeiro ciclo e neste a instrução &lt;code&gt;break&lt;/code&gt; foi invocada, portanto, o laço foi finalizado e o bloco &lt;code&gt;else&lt;/code&gt; não foi executado.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="exemplo-1-imprimindo-todas-as-letras-de-uma-string"&gt;
&lt;h2&gt;EXEMPLO 1: IMPRIMINDO TODAS AS LETRAS DE UMA STRING&lt;/h2&gt;
&lt;p&gt;Uma String é um conjunto de caracteres e assim, podemos iterar qualquer texto, por exemplo.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;letras&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;eXcript&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
   &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ciclo: &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;letras&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="exemplo-2-imprimindo-todos-os-itens-de-uma-lista"&gt;
&lt;h2&gt;EXEMPLO 2: IMPRIMINDO TODOS OS ITENS DE UMA LISTA&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="n"&gt;linguagens&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Python&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="s1"&gt;&amp;#39;Lua&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Cobol&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Pascal&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;C++&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;lingua&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;linguagens&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
   &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Linguagem contida na variável &amp;quot;lingua&amp;quot; neste ciclo: &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lingua&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;eXcript&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;python&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="python"></category><category term="for"></category><category term="iteradores"></category><category term="iterator"></category><category term="blog"></category></entry><entry><title>Retornando Valores pelas Funções em Python</title><link href="http://excript.com/python/retornar-valor-python.html" rel="alternate"></link><published>2016-07-02T17:07:00-03:00</published><updated>2016-07-02T17:07:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-07-02:/python/retornar-valor-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos o retorno de valores pelas funções. Estudaremos a instrução return e utiliza-la para retornar dados.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="a-instrucao-return"&gt;
&lt;h2&gt;A INSTRUÇÃO &lt;code&gt;return&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;O objetivo de toda função é o processamento de alguma informação e o retorno do dado processado. Desta forma, temos que toda função pode, por definição, retornar valores.&lt;/p&gt;
&lt;p&gt;Como …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos o retorno de valores pelas funções. Estudaremos a instrução return e utiliza-la para retornar dados.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="a-instrucao-return"&gt;
&lt;h2&gt;A INSTRUÇÃO &lt;code&gt;return&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;O objetivo de toda função é o processamento de alguma informação e o retorno do dado processado. Desta forma, temos que toda função pode, por definição, retornar valores.&lt;/p&gt;
&lt;p&gt;Como estudado, uma função é um bloco de código que possui um nome, pode ser invocado, pode receber argumentos e pode retornar valores. Para retornarmos valores por funções, temos que utilizar uma notação especifica para este fim que é, a instrução &lt;code&gt;return&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;A palavra-chave &lt;code&gt;return&lt;/code&gt; é utilizada para declarar a informação a ser retornada pela função. A mesma funciona também para finalizar a execução do bloco de instrução da função, retornado assim, o valor que estiver a sua frente. Então, a instrução &lt;code&gt;return&lt;/code&gt; é utilizada tanto para o retorno de valores pelas funções, como também, para finalizar a execução da função.&lt;/p&gt;
&lt;p&gt;É importante entender que o uso da palavra-chave &lt;code&gt;return&lt;/code&gt; não está só e somente só relacionado com o retorno de valores, a mesma é frequentemente utilizada para finalizar a execução das instruções contidas no bloco de instrução da função, funcionado de maneira semelhante a palavra-chave &lt;code&gt;break&lt;/code&gt; e &lt;code&gt;continue&lt;/code&gt; que, são utilizadas para finalizar a execução do laço de repetição ou de um único ciclo.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="consequencia-logica"&gt;
&lt;h2&gt;CONSEQUÊNCIA LÓGICA&lt;/h2&gt;
&lt;p&gt;O conceito por detrás da instrução &lt;code&gt;return&lt;/code&gt; que explica a finalização da função é que, cada função, tem um objetivo definido, logo, se já temos a informação a ser retornada, é porque já atingimos o objetivo e assim, a execução deve ser finalizada.&lt;/p&gt;
&lt;p&gt;Quando a instrução &lt;code&gt;return&lt;/code&gt; é utilizada sem a definição de um valor a ser retornado, por padrão, o valor que será retornado é &lt;code&gt;None&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;O uso da instrução &lt;code&gt;return&lt;/code&gt; para a finalização da função não é obrigatório. O Python, após executar a última instrução do bloco de instrução da função, finalizara a execução, e o cursor voltará para a linha em que a função foi invocada. Assim, a execução pode ocorrer com o uso da instrução &lt;code&gt;return&lt;/code&gt; ou mesmo, pela execução de todo o bloco.&lt;/p&gt;
&lt;p&gt;Vamos definir uma função que retorna um valor.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;soma&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;

&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;soma&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;soma&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;teste&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;soma&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="links-externos"&gt;
&lt;h2&gt;LINKS EXTERNOS&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.python.org/3/reference/compound_stmts.html#function-definitions"&gt;Function Definition&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.python.org/3/reference/datamodel.html#the-standard-type-hierarchy"&gt;Python Data Model - The standard type hierarchy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.python.org/3/reference/expressions.html#calls"&gt;Calls&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="python"></category><category term="função"></category><category term="retorno"></category><category term="return"></category><category term="blog"></category></entry><entry><title>Laços de Repetição do Python</title><link href="http://excript.com/python/lacos-de-repeticao-em-python.html" rel="alternate"></link><published>2016-06-27T20:15:00-03:00</published><updated>2016-06-27T20:15:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-06-27:/python/lacos-de-repeticao-em-python.html</id><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Laços de Repetição, ou estruturas condicionais, são as formas que o Python proporciona para executarmos um bloco de instrução por uma quantidade de vezes.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="repeticao"&gt;
&lt;h2&gt;REPETIÇÃO&lt;/h2&gt;
&lt;p&gt;Está aula é uma continuação da anterior, logo, &lt;a class="reference external" href="http://excript.com/python/iteracao-python.html"&gt;o texto auxiliar foi unificado. Clique aqui para ir à aula anterior&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="python"></category><category term="laço de repetição"></category><category term="looping"></category></entry><entry><title>Estrutura de repetição while em Python</title><link href="http://excript.com/python/while-else-python.html" rel="alternate"></link><published>2016-06-27T18:15:00-03:00</published><updated>2018-01-12T02:10:00-02:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-06-27:/python/while-else-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos a instrução "while" que é, a estrutura de repetição mais simples do Python, onde definimos uma expressão e um mesmo bloco será executado enquanto a expressão definida for verdadeira&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="estrutura-while"&gt;
&lt;h2&gt;ESTRUTURA &lt;code&gt;while&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;O &lt;strong&gt;Laço de Repetição&lt;/strong&gt; &lt;code&gt;while&lt;/code&gt; repete um bloco de instrução enquanto a condição definida em seu …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos a instrução "while" que é, a estrutura de repetição mais simples do Python, onde definimos uma expressão e um mesmo bloco será executado enquanto a expressão definida for verdadeira&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="estrutura-while"&gt;
&lt;h2&gt;ESTRUTURA &lt;code&gt;while&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;O &lt;strong&gt;Laço de Repetição&lt;/strong&gt; &lt;code&gt;while&lt;/code&gt; repete um bloco de instrução enquanto a condição definida em seu cabeçalho for verdadeiro.&lt;/p&gt;
&lt;p&gt;A estrutura &lt;code&gt;while&lt;/code&gt; talvez seja a mais simples para entendermos nesse momento, porém, não raramente encontramos alunos que dizem não entender o funcionamento dessa estrutura. Se você entendeu o funcionamento da estrutura &lt;code&gt;if&lt;/code&gt;, pense na estrutura &lt;code&gt;while&lt;/code&gt; como sendo a estrutra &lt;code&gt;if&lt;/code&gt; mas que ao invés de executar o seu bloco de instrução uma única vez, executará enquanto a expressão definida for igual a &lt;code&gt;True&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;O que diferencia o &lt;cite&gt;if&lt;/cite&gt; do &lt;cite&gt;while&lt;/cite&gt; é só e somente só a quantidade de vezes que o seu bloco de instrução será executado!&lt;/p&gt;
&lt;p&gt;No exemplo a seguir definimos uma variável de nome &lt;code&gt;conta&lt;/code&gt; e inicializamos a mesma com zero. Em seguida, definimos uma condição onde definimos que o bloco de código da estrutura &lt;code&gt;if&lt;/code&gt; será executado SE o valor contido em &lt;code&gt;conta&lt;/code&gt; for menor do que 10. Portanto, se a expressão definida no cabeçalho da estrutura &lt;cite&gt;if&lt;/cite&gt; for verdadeiro, o seu bloco de instrução será executado.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="n"&gt;conta&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;conta&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c1"&gt;#bloco de instrução da estrutura if&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;O código a seguir é basicamente uma cópia do código acima, no entanto, ao invés de utilizarmos a estrutura &lt;cite&gt;if&lt;/cite&gt; utilizamos agora a estrutura &lt;cite&gt;while&lt;/cite&gt;. Observe que a pergunta que devemos fazer é a mesma, ou seja, SE a expressão definida no cabeçalho da instrução &lt;code&gt;while(conda&amp;lt;=10)&lt;/code&gt; for verdadeiro, o seu bloco de instrução deve ser executado. Após a execução, ao INVÉS do cursor de execussão sair do bloco de instrução o mesmo voltará para o cabeçalho da instrução &lt;code&gt;while(conda&amp;lt;=10)&lt;/code&gt; e novamente avaliará a expressão, caso o valor avaliado seja verdadeiro, o bloco de instrução da estrutura será executado novamente e essa lógica irá ocorrer ATÉ QUE O VALOR avaliado na expressão contida no cabeçalho da estrutura &lt;cite&gt;while&lt;/cite&gt; seja igual a falso.&lt;/p&gt;
&lt;p&gt;Portanto, o funcionamento da estrutura &lt;cite&gt;if&lt;/cite&gt; e &lt;cite&gt;while&lt;/cite&gt; se diferencia só e somente só pela quantidade de vezes em que a expressão será avaliada e caso o valor seja verdadeiro, o bloco de instrução será executado.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;conta&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c1"&gt;#bloco de instrução da estrutura while&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;É super importante entender que a expressão &lt;strong&gt;deverá&lt;/strong&gt;, obrigatoriamente, deixar de ser verdadeira para que a repetição seja interrompida. Do contrário, a aplicação irá &lt;strong&gt;congelar&lt;/strong&gt;, isto é, a aplicação irá travar.&lt;/p&gt;
&lt;p&gt;A seguir temos um exemplo utilizando os comandos em Português:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;cond&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;
&lt;span class="n"&gt;enquanto&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cond&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Bloco de instrução da estrutura while()&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;O bloco de instruçõe da estrutura &lt;code&gt;enquanto&lt;/code&gt; acima será executado até que a variável que chamamos de &lt;code&gt;cond&lt;/code&gt; tenha seu valor igual a &lt;code&gt;True&lt;/code&gt;, situação que jamais ocorrerá, pois, nada está sendo feito para que o valor contido seja alterado.&lt;/p&gt;
&lt;p&gt;O exemplo a seguir é um pouco mais elaborado e agora estamos utilizando a instrução &lt;code&gt;while&lt;/code&gt; e em seu cabeçalho definimos uma expressão que sempre será avaliada e enquanto seu valor for igual a &lt;code&gt;True&lt;/code&gt; o bloco de código da estrutura será executado.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="n"&gt;conta&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;conta&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;conta&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;conta&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima, temos uma variável de nome &lt;code&gt;conta&lt;/code&gt; inicializada com o valor 0. Em seguida, utilizamos a instrução &lt;code&gt;while&lt;/code&gt; para definir uma &lt;tt class="docutils literal"&gt;Estrutura de Repetição&lt;/tt&gt; e, a cada ciclo, o bloco na seguida, que contém 2 instruções, será executado. Neste bloco, somamos uma unidade à variável &lt;code&gt;conta&lt;/code&gt; e imprimimos o valor da mesma, a cada ciclo, na saida padrão com a função &lt;code&gt;print()&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="estrutura-else"&gt;
&lt;h2&gt;ESTRUTURA &lt;code&gt;else&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;A linguagem Python define a instrução &lt;code&gt;else&lt;/code&gt; como uma estrutura dependente da instrução &lt;code&gt;while&lt;/code&gt; cujo funcionamento novamente é análogo ao estudado na instrução &lt;code&gt;if&lt;/code&gt;. Desta forma, em Python, há 4 estruturas em que a instrução &lt;code&gt;else&lt;/code&gt; pode ser utilizado para definirmos o bloco de instrução a ser executando quando a condição verificada &lt;strong&gt;deixar de ser verdadeiro&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;No caso, temos a instrução &lt;code&gt;if&lt;/code&gt;, a instrução &lt;code&gt;while&lt;/code&gt; a instrução &lt;code&gt;for&lt;/code&gt; que será estudado na sequência e a estrutura de tratamento de exceção &lt;code&gt;try except&lt;/code&gt; que estudaremos futuramente.&lt;/p&gt;
&lt;p&gt;Vamos analisar agora uma situação que inicialmente será verdadeiro e após executar uma quantidade de vezes o bloco de código a expressão quando avaliada será igual a &lt;code&gt;False&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="n"&gt;condicao&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;condicao&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="c1"&gt;#&amp;lt;1&amp;gt;&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;BLOCO while() e condicao==True&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;#&amp;lt;2&amp;gt;&lt;/span&gt;
    &lt;span class="n"&gt;condicao&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="c1"&gt;#&amp;lt;2&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;BLOCO ELSE e condicao==False&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A execução do código acima envia o seguinte resultado pra saida padrão:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;BLOCO&lt;/span&gt; &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="n"&gt;condicao&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;
&lt;span class="n"&gt;BLOCO&lt;/span&gt; &lt;span class="n"&gt;ELSE&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="n"&gt;condicao&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="kc"&gt;False&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;O que podemos concluir é que:
- &lt;tt class="docutils literal"&gt;#&amp;lt;1&amp;gt;&lt;/tt&gt;: O bloco verdadeiro da estrutura &lt;code&gt;while&lt;/code&gt; foi executado, pois, a lógica é repetir até deixar de ser verdadeiro
- &lt;tt class="docutils literal"&gt;#&amp;lt;2&amp;gt;&lt;/tt&gt;: a função print() é executada
- &lt;tt class="docutils literal"&gt;#&amp;lt;3&amp;gt;&lt;/tt&gt;: e então, a variável &lt;tt class="docutils literal"&gt;condicao&lt;/tt&gt; é definida como &lt;code&gt;False&lt;/code&gt;
- &lt;tt class="docutils literal"&gt;#&amp;lt;1&amp;gt;&lt;/tt&gt;: o cursor de execução volta para o cabeçalho da estrutura &lt;code&gt;while&lt;/code&gt;, analisa a condição definida e, como o resultado é igual a &lt;code&gt;False&lt;/code&gt; o bloco de instrução &lt;code&gt;else&lt;/code&gt; será executado, POIS, igualmente ocorre com a instrução &lt;code&gt;if&lt;/code&gt;, o bloco &lt;code&gt;else&lt;/code&gt; é executado nas vezes em que a condição NÃO for verdadeira.&lt;/p&gt;
&lt;p&gt;Agora, se por alguma razão a instrução &lt;code&gt;break&lt;/code&gt; for invocada, o bloco &lt;code&gt;else&lt;/code&gt; não será executado, pois, a lógica estabelecida é que o bloco &lt;code&gt;else&lt;/code&gt; só será executado nass vezes em que a condição for &lt;code&gt;False&lt;/code&gt; e no caso, isso não aconteceu.&lt;/p&gt;
&lt;p&gt;A seguir, temos o mesmo exemplo, porém agora, a instrução &lt;code&gt;break&lt;/code&gt; será invocada.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;condicao&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;condicao&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;BLOCO while() e condicao==True&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;condicao&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;
    &lt;span class="k"&gt;break&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;BLOCO ELSE e condicao==False&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A execução do código acima envia o seguinte resultado pra saida padrão:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;BLOCO&lt;/span&gt; &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="n"&gt;condicao&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ou seja, o bloco &lt;code&gt;True&lt;/code&gt; da instrução &lt;code&gt;while&lt;/code&gt; foi executado, porém, como a instrução &lt;code&gt;break&lt;/code&gt; interrompeu a execução de todo o ciclo, o bloco &lt;code&gt;else&lt;/code&gt;, isto é, o bloco que é executado nas vezes em que a condição não é verdadeira não foi executado.&lt;/p&gt;
&lt;p&gt;Assim, o bloco &lt;code&gt;else&lt;/code&gt; pode ser executado uma única vez, nos casos em que a expressão definida no cabeçalho da instrução &lt;code&gt;while&lt;/code&gt;, deixar de ser verdadeira.&lt;/p&gt;
&lt;p&gt;Àqueles que entenderam a &lt;a class="reference external" href="http://excript.com/python/tomada-decisao-python.html"&gt;Tomada de Decisão&lt;/a&gt;, isto é, a instrução &lt;a class="reference external" href="http://excript.com/python/tomada-decisao-python.html"&gt;if&lt;/a&gt;, deverão ter facilidade em manipular Laços de Repetição &lt;code&gt;while&lt;/code&gt;, como também, conseguirão facilmente implementar a instrução &lt;a class="reference external" href="http://excript.com/python/tomada-decisao-python.html"&gt;while&lt;/a&gt; . Isso porque, como já dito, a instrução &lt;code&gt;while&lt;/code&gt; funciona da mesma forma que a instrução &lt;code&gt;if&lt;/code&gt;, e o que diferencia as mesmas é só e somente só a quantidade de vezes que o &lt;tt class="docutils literal"&gt;Bloco de Instrução&lt;/tt&gt; será executado.&lt;/p&gt;
&lt;p&gt;A seguir, temos um exemplo semelhante ao que fizemos anteriormente, porém agora, numa situação que acontece na vida real.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="n"&gt;conta&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;conta&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;conta&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Valor da variável conta é: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;conta&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima, o &lt;tt class="docutils literal"&gt;Bloco de Instrução&lt;/tt&gt; para quando a expressão for verdadeira será executado até que o valor da variável &lt;code&gt;conta&lt;/code&gt; seja igual a 11. Nesse momento, quando a expressão passar a ser falsa falsa, o &lt;tt class="docutils literal"&gt;Bloco da Instrução&lt;/tt&gt; &lt;code&gt;else&lt;/code&gt; será executado e o &lt;tt class="docutils literal"&gt;Laço de Repetição&lt;/tt&gt; terá chego ao fim.&lt;/p&gt;
&lt;p&gt;É importante observar que a instrução &lt;code&gt;else&lt;/code&gt; funciona da mesma maneira àquela estudada na &lt;a class="reference external" href="http://excript.com/python/tomada-decisao-python.html"&gt;Tomada de Decisão&lt;/a&gt; .&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="interrupcao-com-break"&gt;
&lt;h2&gt;INTERRUPÇÃO COM &lt;code&gt;break&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;A instrução &lt;code&gt;break&lt;/code&gt; finaliza abruptamente a execução das estruturas de repetição e assim, quando essa instrução for executada, o cursor de execução irá interromper a execução das instruções definidas pela &lt;tt class="docutils literal"&gt;Estrutura de Repetição&lt;/tt&gt; e irá saltar para a linha seguinte após o &lt;tt class="docutils literal"&gt;Laço de Repetição&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Em outras palavras, temos que quando a instrução &lt;code&gt;break&lt;/code&gt; for utilizada, o cursor de execução não irá passar por dentro do bloco definido pela instrução &lt;code&gt;else&lt;/code&gt;, até porque, a instrução &lt;code&gt;break&lt;/code&gt; encerra, &lt;strong&gt;imediatamente&lt;/strong&gt; a execução da &lt;tt class="docutils literal"&gt;Estrutura de Repetição&lt;/tt&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;while&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;else&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;fim&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="python"></category><category term="while"></category><category term="while loop"></category><category term="else"></category><category term="blog"></category></entry><entry><title>Iteração em Python</title><link href="http://excript.com/python/iteracao-python.html" rel="alternate"></link><published>2016-06-27T11:08:00-03:00</published><updated>2016-06-27T11:08:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-06-27:/python/iteracao-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Vamos estudar nessa aula a Iteração, Estrutura de Repetição, looping, Laço de Repetição, Laços Condicionais ou como você preferir chama-los!&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="introducao-a-iteracao"&gt;
&lt;h2&gt;INTRODUÇÃO À ITERAÇÃO&lt;/h2&gt;
&lt;p&gt;Iterar é a ação de repetir algo. Na programação, iteração significa a repetição de um conjunto de instruções por uma quantidade finita de vezes ou então, enquanto …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Vamos estudar nessa aula a Iteração, Estrutura de Repetição, looping, Laço de Repetição, Laços Condicionais ou como você preferir chama-los!&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="introducao-a-iteracao"&gt;
&lt;h2&gt;INTRODUÇÃO À ITERAÇÃO&lt;/h2&gt;
&lt;p&gt;Iterar é a ação de repetir algo. Na programação, iteração significa a repetição de um conjunto de instruções por uma quantidade finita de vezes ou então, enquanto uma condição seja aceita.&lt;/p&gt;
&lt;p&gt;Há várias formas para falarmos sobre a iteração, por exemplo: &lt;strong&gt;Iteração&lt;/strong&gt;, &lt;strong&gt;Estrutura de Repetição&lt;/strong&gt;, &lt;strong&gt;looping&lt;/strong&gt;, &lt;strong&gt;Laço de Repetição&lt;/strong&gt;, &lt;strong&gt;Laços Condicionais&lt;/strong&gt;, &lt;strong&gt;repetição&lt;/strong&gt; e etc. Todos as nomenclaturas acima são utilizadas para nos referir às estruturas das linguagens que tem o propósito de repetir um mesmo bloco de código, por uma quantidade finita de vezes, ou enquanto uma condição for verdadeira.&lt;/p&gt;
&lt;p&gt;Toda linguagem de programação possui no mínimo uma forma de iteração.&lt;/p&gt;
&lt;p&gt;É comum que os iniciantes não enxerguem onde esse tipo de estrutura é utilizada e isso é normal! Então, vamos utilizar um exemplo para tentar demonstrar o seu uso e importância.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="caso-de-uso"&gt;
&lt;h2&gt;CASO DE USO&lt;/h2&gt;
&lt;p&gt;Vamos supor que tenhamos uma lista de nomes, como por exemplo, a lista a seguir:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
fulano
ciclano
beltrano
&lt;/pre&gt;
&lt;p&gt;Agora, vamos supor que queiramos utilizar esses nomes, porém, precisamos que os mesmos estejam em letras maiúsculas. Assim, vamos criar um código que deve ser executado transformando o nome de caracteres minusculos para maiúsculos. Observe que esse código é o mesmo, indiferente do nome, ou então, indiferente seja o item contido na lista acima.&lt;/p&gt;
&lt;p&gt;DESSA FORMA TEMOS que precisamos que um mesmo bloco de código seja executado para cada elemento contido na lista de nomes acima! Ou seja, vamos criar um único código e executa-lo a quantidade de vezes que precisarmos, ou então, a quantidade de itens existentes na lista.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="exemplo-utilizando-python"&gt;
&lt;h2&gt;EXEMPLO UTILIZANDO PYTHON&lt;/h2&gt;
&lt;p&gt;No código a seguir, temos um exemplo utilizando a estrutura de repetição &lt;tt class="docutils literal"&gt;while&lt;/tt&gt;, que numa tradução livre, significa, &lt;tt class="docutils literal"&gt;enquanto&lt;/tt&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;O código acima, inicialmente declara uma variável de nome &lt;code&gt;num&lt;/code&gt; e inicializa-a com o valor literal &lt;code&gt;0&lt;/code&gt; . Em seguida, com a instrução &lt;code&gt;while&lt;/code&gt; é definido uma Estrutura de Repetição e essa será repetida enquanto a condição definida entre parêntesis, no cabeçalho da estrutura &lt;code&gt;while&lt;/code&gt; for verdadeiro.&lt;/p&gt;
&lt;p&gt;É importante observar, que a condição definida no cabeçalho da estrutura &lt;code&gt;while&lt;/code&gt; só deixará de ser verdadeira, porque o valor da variável &lt;code&gt;num&lt;/code&gt; é incrementado toda vez que o bloco de instrução é executado, do contrário, teríamos um laço de repetição infinito e que faria o nosso programar travar, congelar - entrar em looping!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="a-repeticao-de-forma-primitiva"&gt;
&lt;h2&gt;A REPETIÇÃO DE FORMA PRIMITIVA&lt;/h2&gt;
&lt;p&gt;A forma mais primitiva que as linguagens de programação dispunham para a repetição de um mesmo bloco se dava com o uso das instruções &lt;code&gt;goto&lt;/code&gt;, que numa tradução livre significa algo como &lt;tt class="docutils literal"&gt;vá para&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Algumas linguagens obrigava-nos a definir o número da linha para qual desejamos saltar, outras, permitiam a definição de &lt;code&gt;label&lt;/code&gt;, isto é, nomes, para então, com a instrução &lt;code&gt;goto&lt;/code&gt;, pularmos para a linha de um respectivo &lt;code&gt;label&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Desta forma, se desejassemos repetir um mesmo bloco, tínhamos que &lt;strong&gt;pular&lt;/strong&gt; para o início do &lt;code&gt;label&lt;/code&gt; e assim, repetir as instrução enquanto fosse necessário, por exemplo.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt; &lt;span class="n"&gt;REPETIÇÃO&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;linha1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;linha2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;linha3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;SE&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;goto&lt;/span&gt; &lt;span class="n"&gt;REPETICAO&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;SENÃO&lt;/span&gt;
        &lt;span class="n"&gt;instrucao&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima, um pouco escrito em Português e outra parte em Inglês, temos como as 3 últimas linhas de código, uma estrutura de seleção, onde uma condição é verificada e, caso a expressão seja verdadeira, o cursos de execução do programa saltará para linha onde o &lt;code&gt;label&lt;/code&gt; está declarado. Do contrário, o bloco &lt;code&gt;SENÃO&lt;/code&gt; é executado e a execução seguirá normalmente.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="a-recursividade-como-laco-de-repeticao"&gt;
&lt;h2&gt;A RECURSIVIDADE COMO LAÇO DE REPETIÇÃO&lt;/h2&gt;
&lt;p&gt;Recursividade significa a invocação de uma função por ela mesma, ou seja, é toda função que invoca a si mesma. Essa é uma prática perigosa de trabalho e que pode facilmente travar nossos programas, ou então, estourar a pilha de execução, isto é, podemos obter o famoso erro &lt;tt class="docutils literal"&gt;stack overflow error&lt;/tt&gt; que, nada mais é do que o limite máximo de vezes que uma função pode chamar a si mesma.&lt;/p&gt;
&lt;p&gt;A seguir, temos um exemplo em Português, onde trabalhamos com o conceito de recursividade.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;func&lt;/span&gt; &lt;span class="n"&gt;minhaFunção&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="n"&gt;linha&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="n"&gt;linha&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
    &lt;span class="n"&gt;linha&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;

    &lt;span class="n"&gt;val&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;

    &lt;span class="n"&gt;SE&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;minhaFunção&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;SENÃO&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;minhaFunção&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima, definimos uma função de nome &lt;code&gt;minhaFunção()&lt;/code&gt; e estamos invocando-a na última linha do código, ou seja, estamos invocando a função após a sua definição.&lt;/p&gt;
&lt;p&gt;A partir do momento que invocamos a função &lt;code&gt;minhaFunção()&lt;/code&gt;, estamos também, enviando como argumento um valor literal inteiro igual a &lt;code&gt;0&lt;/code&gt; . Esse valor é recebido como parâmetro pelo argumento &lt;code&gt;val&lt;/code&gt;. Agora, estando dentro da função, algumas linhas são executadas, e então, a variável &lt;code&gt;val&lt;/code&gt; recebe o valor dela mesma, acrescido de 1 unidade.&lt;/p&gt;
&lt;p&gt;Feito isso, uma condição é verificada e, caso o valor da variável &lt;code&gt;val&lt;/code&gt; seja menor do que o valor inteiro literal &lt;code&gt;10&lt;/code&gt;, o bloco de instrução verdadeiro será executado, e este, contém uma única instrução que invoca a função novamente passando como parâmetro o valor contido na variável &lt;code&gt;val&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Do contrário, isto é, caso o valor da variável &lt;code&gt;val&lt;/code&gt; seja igual ou maior do que &lt;code&gt;10&lt;/code&gt;, então, é executado a instrução &lt;code&gt;exit()&lt;/code&gt; e o bloco de instrução é finalizado.&lt;/p&gt;
&lt;p&gt;Neste exemplo, podemos ver como um mesmo bloco é executado por diversas vezes e somente quando a condição definida dentro do próprio bloco deixar de ser verdadeira, é que a execução será interrompida. Do contrário, o ciclo continuara sua execução, de maneira indefinida.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bloco-de-instrucao"&gt;
&lt;h2&gt;BLOCO DE INSTRUÇÃO&lt;/h2&gt;
&lt;p&gt;O Bloco de Instrução é o conjunto de instrução que SEMPRE está na sequência das estruturas e sempre estarão na indentação, um nível hierarquico a frente da definição da estrutura.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="ciclo-ou-laco"&gt;
&lt;h2&gt;CICLO OU LAÇO&lt;/h2&gt;
&lt;p&gt;O &lt;strong&gt;ciclo&lt;/strong&gt; é o nome chamado a uma única &lt;strong&gt;repetição&lt;/strong&gt; do &lt;tt class="docutils literal"&gt;bloco de instrução&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Do dicionários Aurélio, temos que ciclo significa: &amp;quot;Série de fenômenos que se sucedem numa ordem determinada&amp;quot;&lt;/p&gt;
&lt;p&gt;Então, temos que o bloco de instrução executado por definição, sempre será o mesmo. Assim, devemos pensar no conceito de ciclo para as linguagens de programação, como a execução de um mesmo bloco de código. Talvez, o bloco tenha condições que determinem, conforme a expressão definida, blocos de instruções diferentes, porém, no geral, esse bloco sempre estará contido dentro do bloco de instrução da estrutura de repetição.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="estruturas-de-repeticao"&gt;
&lt;h2&gt;ESTRUTURAS DE REPETIÇÃO&lt;/h2&gt;
&lt;p&gt;As linguagens de programação atuais fornecem meios para a repetição de um &lt;strong&gt;bloco de instrução&lt;/strong&gt; de forma mais simples e menos verbosas do que suas antecessoras. Essa estruturas são, tecnicamente chamadas de &lt;strong&gt;Iteradores&lt;/strong&gt;, isto é, repetidores.&lt;/p&gt;
&lt;p&gt;Normalmente, as linguagens disponibilizam um iterador que repetira uma quantia finita de vezes, e outro que repetirá, enquanto uma condição seja verdadeira, ou seja, um repetidor condicional.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="iteradores-em-python"&gt;
&lt;h2&gt;ITERADORES EM PYTHON&lt;/h2&gt;
&lt;p&gt;O Python disponibiliza 2 iteradores, o primeiro e mais simples é o iterador condicional, que repetira um determinado bloco de código enquanto a condição definida no cabeçalho da estrutura for verdadeiro, de nome &lt;code&gt;while&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;O segundo iterador, é o iterador finito, isto é, que repetira por uma quantidade de vezes conhecido previamente que é chamado de &lt;code&gt;for..in&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="c1"&gt;#=====================================&lt;/span&gt;
&lt;span class="c1"&gt;#========== www.eXcript.com ==========&lt;/span&gt;
&lt;span class="c1"&gt;#=====================================&lt;/span&gt;

&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="veja-tambem"&gt;
&lt;h2&gt;VEJA TAMBÉM&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Aula: &lt;a class="reference external" href="http://excript.com/python/for-in-range-python.html"&gt;Estrutura de Repetição for..in&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Aula: &lt;a class="reference external" href="http://excript.com/python/while-else-python.html"&gt;Estrutura de Repetição while(True)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Aula: &lt;a class="reference external" href="http://excript.com/python/instrucao-break-python.html"&gt;Instrução break&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Aula: &lt;a class="reference external" href="{filename}../curso-de-python/0041_instrucao-continue-python.rst"&gt;Instrução continue&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="links-externos"&gt;
&lt;h2&gt;LINKS EXTERNOS&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://docs.python.org/3/tutorial/controlflow.html#for-statements"&gt;Estrutura for (Documentação oficial) (en)&lt;/a&gt;
&lt;a class="reference external" href="https://docs.python.org/3/reference/compound_stmts.html#while"&gt;Estrutura while (Documentação oficial) (en)&lt;/a&gt;
&lt;a class="reference external" href="https://www.tutorialspoint.com/python/python_loops.htm"&gt;Python Loops (TurialsPoint) (en)&lt;/a&gt;
&lt;a class="reference external" href="https://www.tutorialspoint.com/python/python_while_loop.htm"&gt;While Loop (TurialsPoint) (en)&lt;/a&gt;
&lt;a class="reference external" href="https://www.tutorialspoint.com/python/python_for_loop.htm"&gt;For Loop (TurialsPoint) (en)&lt;/a&gt;
&lt;a class="reference external" href="https://www.tutorialspoint.com/python/python_nested_loops.htm"&gt;Nested Loops (TurialsPoint) (en)&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="python"></category><category term="iteração"></category><category term="estrutura de repetição"></category><category term="looping"></category><category term="laço de repetição"></category><category term="laços condicionais"></category><category term="blog"></category></entry><entry><title>Argumento de Função Nomeado vs Posicional em Python</title><link href="http://excript.com/python/argumentos-nomeados-posicionais-python.html" rel="alternate"></link><published>2016-06-15T08:30:00-03:00</published><updated>2016-06-15T08:30:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-06-15:/python/argumentos-nomeados-posicionais-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos o conceito de Parâmetros Nomeados e Parâmetros Posicionais. Estudaremos a diferença entre os conceitos e suas características, bem como quando utilizar cada uma das definição.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="argumentos-nomeados-keyword-arguments"&gt;
&lt;h2&gt;ARGUMENTOS NOMEADOS (KEYWORD ARGUMENTS)&lt;/h2&gt;
&lt;p&gt;Em Python é possível invocarmos funções passando os argumentos de forma posicional ou então, através da associação chave-valor …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos o conceito de Parâmetros Nomeados e Parâmetros Posicionais. Estudaremos a diferença entre os conceitos e suas características, bem como quando utilizar cada uma das definição.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="argumentos-nomeados-keyword-arguments"&gt;
&lt;h2&gt;ARGUMENTOS NOMEADOS (KEYWORD ARGUMENTS)&lt;/h2&gt;
&lt;p&gt;Em Python é possível invocarmos funções passando os argumentos de forma posicional ou então, através da associação chave-valor.&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;Argumento posicional&lt;/tt&gt; é o nome utilizado para a passagem de valores onde cada valor estara na ordem conforme implementado na função.&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;Argumento nomeado&lt;/tt&gt; é a passagem de valores fazendo associação com o nome do parâmetro e o valor que está sendo enviado.&lt;/p&gt;

    &lt;div class="admonitionblock tip data-line"&gt;
        &lt;table&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="icon"&gt;
                        &lt;i class="fa icon-tip" title="Dica!"&gt;&lt;/i&gt;
                    &lt;/td&gt;
                    &lt;td class="content"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt;Lembre-se que argumento e parâmetro são nomes diferentes para conceitos iguais. O termo argumento é utilizado quando determinada função está sendo invocada, logo, dizemos que a função tem definido x argumentos. Parâmetro é o nome utilizado quando estamos manipulando a função propriamente dita, logo, dizemos que a função declarou x parâmetros.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;p&gt;Considere o trecho de código a seguir:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;minha_func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# invocando a função minha_func() passando valores de forma posicional&lt;/span&gt;
&lt;span class="n"&gt;minha_func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# invocando a função minha_func() passando valores de forma chave-valor&lt;/span&gt;
&lt;span class="n"&gt;minha_func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# invocando a função minha_func() passando valores de forma chave-valor&lt;/span&gt;
&lt;span class="c1"&gt;# porém, fora de ordem&lt;/span&gt;
&lt;span class="n"&gt;minha_func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima, declaramos uma função de nome &lt;code&gt;minha_func(a, b, c)&lt;/code&gt; e definimos 3 parâmetros de nomes, &lt;code&gt;(a, b, c)&lt;/code&gt;. Em seguida, invocamos a função &lt;code&gt;minha_func()&lt;/code&gt; 2 vezes. Na primeira, passamos 3 valores na ordem em que estes foram definidos, ou seja, &lt;code&gt;1, 2, 3&lt;/code&gt; serão, automaticamente definidos, para os parâmetros &lt;tt class="docutils literal"&gt;a&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;b&lt;/tt&gt; e &lt;tt class="docutils literal"&gt;c&lt;/tt&gt; respectivamente. Em seguida, invocamos a função novamente, porém, definimos os parâmetro de maneira nomeada, isto é, a cada parâmetro associamos determinado valor.&lt;/p&gt;
&lt;p&gt;Argumento nomeado é um recurso que permite a passagem de valores pela associação chave-valor e assim, os mesmos não precisaram estar dispostos numa ordem pre-estabelecida, até porque, o Python receberá um dicionário que contém o nome e o valor de cada parâmetro.&lt;/p&gt;
&lt;p&gt;Se analisarmos a forma que passamos valores e as estruturas estudadas, é possível perceber que a passagem de parâmetros posicionais, &lt;cite&gt;nada mais é do que o envio de uma tupla &amp;lt;{filename}../curso-de-python/0052_tuplas-python.rst&amp;gt;&lt;/cite&gt;, enquanto que &lt;cite&gt;a passagem de valores nomeados, é o envio de um dicionário &amp;lt;{filename}../curso-de-python/0061_introducao-aos-dicionarios-python.rst&amp;gt;&lt;/cite&gt;.&lt;/p&gt;
&lt;p&gt;A única regra em relação a passagem de valores através de parâmetros nomeados e parâmetros posicionais, é que devemos escolher uma das formas de envio, isto é, ou utilizamos parâmetros posicionais ou então, parâmetros nomeados.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="excecao-a-regra"&gt;
&lt;h2&gt;EXCEÇÃO À REGRA&lt;/h2&gt;
&lt;p&gt;É possível invocar uma função passando os primeiros argumentos de forma posicional e o restante, de forma nomeada. Porém, a regra para trabalhar dessa maneira é: argumentos posicionais, em seguida, argumentos nomeados. Tomemos como exemplo o código a seguir:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;minha_func2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;minha_func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima, definimos uma função semelhante a estudada no primeiro exemplo, porém, que contém mais um argumento de nome &lt;tt class="docutils literal"&gt;d&lt;/tt&gt;. Em seguida, invocamos a função e, para os 2 primeiros argumentos, enviamos valores de maneira posicional. Já, para os 2 argumentos finais, de nomes &lt;tt class="docutils literal"&gt;c&lt;/tt&gt; e &lt;tt class="docutils literal"&gt;d&lt;/tt&gt;, passamos valores associando o nome do parâmetro com o respectivo valor.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# coding: utf-8&lt;/span&gt;

&lt;span class="c1"&gt;# =================&lt;/span&gt;
&lt;span class="c1"&gt;#  = eXcript.com =&lt;/span&gt;
&lt;span class="c1"&gt;# =================&lt;/span&gt;

&lt;span class="c1"&gt;# ARGUMENTOS POSICIONAIS E ARGUMENTOS NOMEADOS&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;dados_pessoais&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nome&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sobrenome&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;idade&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sexo&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Nome: &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;Sobrenome: &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;Idade: &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;Sexo: &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
            &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nome&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sobrenome&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;idade&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sexo&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="n"&gt;dados_pessoais&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Cláudio&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sobrenome&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Rogério&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;idade&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sexo&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# dados_pessoais(idade=30,&lt;/span&gt;
&lt;span class="c1"&gt;#                 sexo=True,&lt;/span&gt;
&lt;span class="c1"&gt;#                 sobrenome=&amp;quot;Carvalho&amp;quot;,&lt;/span&gt;
&lt;span class="c1"&gt;#                 nome=&amp;quot;Cláudio&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;#                 )&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="links-externos"&gt;
&lt;h2&gt;LINKS EXTERNOS&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.python.org/3/reference/compound_stmts.html#function-definitions"&gt;Function Definition&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.python.org/3/reference/datamodel.html#the-standard-type-hierarchy"&gt;Python Data Model - The standard type hierarchy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.python.org/3/reference/expressions.html#calls"&gt;Calls&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="python"></category><category term="função"></category><category term="parâmetro"></category><category term="argumento"></category><category term="argumento posicional"></category><category term="argumento nomeado"></category><category term="blog"></category></entry><entry><title>Parâmetros de Função em Python</title><link href="http://excript.com/python/parametro-de-funcao-python.html" rel="alternate"></link><published>2016-06-15T05:00:00-03:00</published><updated>2016-06-15T05:00:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-06-15:/python/parametro-de-funcao-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula vamos estudar os parâmetros das funções e a sintaxe que a linguagem Python disponibiliza para manusearmos esses atributos. Aprenderemos o conceito e a diferença entre função e argumento e aprenderemos como utiliza-los corretamente.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="parametros"&gt;
&lt;h2&gt;PARÂMETROS&lt;/h2&gt;
&lt;p&gt;Estudamos que funções processam informações e também, podem receber e retornar valores. Toda função …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula vamos estudar os parâmetros das funções e a sintaxe que a linguagem Python disponibiliza para manusearmos esses atributos. Aprenderemos o conceito e a diferença entre função e argumento e aprenderemos como utiliza-los corretamente.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="parametros"&gt;
&lt;h2&gt;PARÂMETROS&lt;/h2&gt;
&lt;p&gt;Estudamos que funções processam informações e também, podem receber e retornar valores. Toda função contém um bloco de instrução e neste haverá um conjunto de instruções manipulando informações. É comum que as funções processem as informações que são enviadas quando as mesmas foram invocadas, ou seja, o conjunto de instrução geralmente processará os parâmetros enviado através dos nomes definidos no cabeçalho da função e chamados de &lt;code&gt;parâmetros&lt;/code&gt; ou &lt;code&gt;argumentos&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Parâmetro&lt;/code&gt; é uma variável declarada no cabeçalho da função e tem uso exclusivo dentro do bloco de instrução da mesma. A definição dos parâmetros que uma função deve receber obriga o envio dos valores todas as vezes em que a mesma for invocada, do contrário, a função não é invocada.&lt;/p&gt;
&lt;p&gt;É normal chamarmos o envio de informações por parâmetros como sendo o envio de mensagens, até porque, os parâmetros permitem o envio de dados para dentro das funções.&lt;/p&gt;

    &lt;div class="admonitionblock tip data-line"&gt;
        &lt;table&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="icon"&gt;
                        &lt;i class="fa icon-tip" title="Dica!"&gt;&lt;/i&gt;
                    &lt;/td&gt;
                    &lt;td class="content"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt;O escopo dos parâmetros é restrito ao bloco de instrução da função, e assim, quando a função finalizar a execução, os parâmetros serão desalocados.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;p&gt;Funções que precisam receber vários valores podem definir vários parâmetros. Após definirmos um parâmetro, devemos utilizar uma vírgula para definirmos o próximo. Assim, o que diferencia um parâmetro de outro é o operador vírgula.&lt;/p&gt;
&lt;p&gt;O Python trata os parâmetros de funções como uma tupla ou dicionário, inclusive, podemos definir os valores que uma função receberá e no final deixar uma vírgula sobrando, da mesma forma em que podemos fazer quando estamos definindo os valores numa tupla.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="parametros-vs-argumentos"&gt;
&lt;h2&gt;PARÂMETROS vs ARGUMENTOS&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Parâmetro&lt;/code&gt; e &lt;code&gt;argumento&lt;/code&gt; são conceitos iguais mas utilizados em situações diferentes. Para entendermos a nomenclatura temos de pensar na definição da função e no código que irá invocar a mesma.&lt;/p&gt;
&lt;p&gt;Na implementação da função, definimos no cabeçalho, os parâmetros que devem ser enviados quando a função for invocada. Quando estamos invocando a função, temos que definir para cada parâmetro um valor, ou seja, temos que definir os argumentos que a função irá levar consigo.&lt;/p&gt;
&lt;p&gt;Então, é correto dizer que uma função define os parâmetros que devem ser enviados quando for invocada, e também, é correto dizer que quando vamos invocar uma função, temos que passar os argumentos por esta definido.&lt;/p&gt;
&lt;p&gt;Assim, temos que parâmetro é a variável que foi definida no cabeçalho da função e que será utilizada no bloco de instrução da mesma, enquanto que argumento, é o  valor que será passado ao invocarmos a funções.&lt;/p&gt;

    &lt;div class="admonitionblock tip data-line"&gt;
        &lt;table&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="icon"&gt;
                        &lt;i class="fa icon-tip" title="Dica!"&gt;&lt;/i&gt;
                    &lt;/td&gt;
                    &lt;td class="content"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt;Parâmetro é o nome utilizado quando estamos dentro do código da função propriamente dita e, argumento, é o nome dado aos valores referentes a cada parâmetro.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;p&gt;Uma função deve receber os valores na ordem em que os parâmetros estão definidos, do contrário, ocorrerá os mais diversos problemas ou então, o Script nem será executado.&lt;/p&gt;
&lt;p&gt;A seguir, escreveremos um simples trecho de código em que uma função será definida.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;soma&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;A soma dos parâmetros é: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima, foi definido uma função e nesta há 2 parâmetros declarados. Assim, para invocarmos a  função &lt;cite&gt;soma()&lt;/cite&gt;, temos que enviar junto 2 valores, como pode ser visto no código a seguir.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;soma&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Acima, estamos invocando a função de nome soma e passando 2 valores como parâmetro. O primeiro, é o valor do parâmetro de nome &lt;code&gt;a&lt;/code&gt;, enquanto o segundo, é o parâmetro de nome &lt;cite&gt;b&lt;/cite&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# coding: utf-8&lt;/span&gt;

&lt;span class="c1"&gt;# =================&lt;/span&gt;
&lt;span class="c1"&gt;#  = eXcript.com =&lt;/span&gt;
&lt;span class="c1"&gt;# =================&lt;/span&gt;

&lt;span class="c1"&gt;# PARÂMETROS&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;soma&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;total&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;O total da soma de x + y é: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;total&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;soma&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="links-externos"&gt;
&lt;h2&gt;LINKS EXTERNOS&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.python.org/3/reference/compound_stmts.html#function-definitions"&gt;Function Definition&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.python.org/3/reference/datamodel.html#the-standard-type-hierarchy"&gt;Python Data Model - The standard type hierarchy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.python.org/3/reference/expressions.html#calls"&gt;Calls&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.python.org/3/glossary.html#term-argument"&gt;Argument&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="python"></category><category term="função"></category><category term="parâmetro"></category><category term="argumento"></category><category term="blog"></category></entry><entry><title>Introdução às Funções em Python</title><link href="http://excript.com/python/introducao-funcoes-python.html" rel="alternate"></link><published>2016-06-15T04:45:00-03:00</published><updated>2016-06-15T04:45:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-06-15:/python/introducao-funcoes-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula iniciaremos o estudo das funções, a principal estrutura para separarmos e modularizarmos nossas aplicações. E também, são as funções que originam do Paradigma de Programação Funcional.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="introducao"&gt;
&lt;h2&gt;INTRODUÇÃO&lt;/h2&gt;
&lt;p&gt;Funções são blocos de instrução que podem ser invocados de qualquer parte do nosso código. Toda função, por definição, possui um …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula iniciaremos o estudo das funções, a principal estrutura para separarmos e modularizarmos nossas aplicações. E também, são as funções que originam do Paradigma de Programação Funcional.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="introducao"&gt;
&lt;h2&gt;INTRODUÇÃO&lt;/h2&gt;
&lt;p&gt;Funções são blocos de instrução que podem ser invocados de qualquer parte do nosso código. Toda função, por definição, possui um nome, pode receber parâmetros e pode retornar valores. Nem toda função receberá parâmetros, da mesma forma, que nem toda função retornará valores. Tudo dependerá da situação, ainda assim, a estrutura sempre seguirá um padrão e por isso, é facilmente reconhecido.&lt;/p&gt;

    &lt;div class="admonitionblock tip data-line"&gt;
        &lt;table&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="icon"&gt;
                        &lt;i class="fa icon-tip" title="Dica!"&gt;&lt;/i&gt;
                    &lt;/td&gt;
                    &lt;td class="content"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt;Em Python, funções são objetos de primeira classe.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;p&gt;A ideia mais primitiva das funções é o agrupamento de instruções, proporcionando um meio simples de execução sequencial e que pode ser invocado de qualquer parte a qualquer momento. Dessa forma, toda função irá possuir um bloco de instrução e quando invocada, o cursor de execução do programa se posicionará na primeira linha desse bloco e a execução ocorrerá de cima para baixo, uma instrução após outra.&lt;/p&gt;
&lt;p&gt;As função podem definir em seu cabeçalho um conjunto de valores que devem ser enviados quando a função for invocada. Desta foram, a função só será invocada se os valores forem também definidos. Após a execução das instruções definidas no bloco de instrução da função, a mesma poderá retornar um valor e, dessa forma, temos um ciclo onde os dados são enviados, processados e retornados. Por isso é que raramente devemos utilizar variáveis globais, até porque, todos valores podem ser enviados e retornados pelas funções de maneira explicita.&lt;/p&gt;
&lt;p&gt;Como todos os parâmetros estão por definição associados a função e possuem seu escopo restrito a esta, acabamos por ter uma situação em que é fácil depurar e encontrar problemas, até porque, é de certeza absoluta que o valor de um parâmetro foi alterado no escopo da função - situação que não ocorre quando os valores são manipulados por variáveis globais, até porque, estas podem ter seus valores alterados em qualquer lugar por qualquer função.&lt;/p&gt;
&lt;p&gt;Num primeiro momento, temos que entender que uma função é um bloco de instrução independente, até porque, possui escopo restrito, e após a execução das instrução definidas em seu bloco de instrução, a mesma é finalizada, as variáveis desalocadas e o cursor de execução do programa volta ao ponto onde a função foi invocada.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="funcao-vs-metodo"&gt;
&lt;h2&gt;FUNÇÃO vs MÉTODO&lt;/h2&gt;
&lt;p&gt;O conceito de função e método se diferenciam só e somente só pelo retorno de valores.&lt;/p&gt;
&lt;p&gt;Toda &lt;strong&gt;função&lt;/strong&gt; é um bloco de instrução que, possui um nome único que a identifica em seu escopo, pode receber parâmetros e &lt;strong&gt;SEMPRE&lt;/strong&gt; retorna um valor.&lt;/p&gt;
&lt;p&gt;Um &lt;strong&gt;método&lt;/strong&gt; é um bloco de instrução, possui um nome único que o identifica em seu escopo, pode receber parâmetros e &lt;strong&gt;NUNCA&lt;/strong&gt; retorna valores.&lt;/p&gt;
&lt;p&gt;Na prática utilizamos diversas vezes ambos conceitos, até porque, é normal precisarmos agrupar um conjunto de instruções para que sejam executadas sequencialmente e após a execução da última instrução, o cursor volta e o programa continua de onde parou.&lt;/p&gt;
&lt;p&gt;Outras vezes, implementaremos blocos de instruções que processarão uma informação e retornaram informações processadas, logo, estamos utilizando o conceito de funções.&lt;/p&gt;
&lt;p&gt;No nosso caso, temos que o Python não faz distinção explicita entre ambos conceitos. Então, o importante é somente conhecer os conceitos, até porque, na prática a implementação se tornará transparente.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;INTRODUÇÃO ÁS FUNÇÕES EM PYTHON&lt;/h2&gt;
&lt;p&gt;Em Python, funções são objetos que podem ser invocados. Os &lt;tt class="docutils literal"&gt;Callable objects&lt;/tt&gt;, ou entao, objetos invocáveis, se diferenciam dos demais objetos por implementarem a função &lt;tt class="docutils literal"&gt;__call__()&lt;/tt&gt;. Por definição, todo objeto pra ser invocado precisa implementar a função &lt;tt class="docutils literal"&gt;__call__()&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Dessa forma, funções são objetos do tipo &lt;tt class="docutils literal"&gt;types.FunctionType&lt;/tt&gt; ou então, &lt;tt class="docutils literal"&gt;types.LambdaType&lt;/tt&gt;. Por isso a importância em entender as funções como sendo objetos executáveis.&lt;/p&gt;
&lt;p&gt;Uma referência seguida por um par de parêntesis é a notação que distingue o uso de variáveis e de objetos invocáveis. Essa notação implica na execução da função __call__(). A função &lt;tt class="docutils literal"&gt;__call__&lt;/tt&gt; também receberá os argumentos definidos entre parêntesis. Por fim, a função &lt;tt class="docutils literal"&gt;__call__&lt;/tt&gt; tem definido a capacidade de retornar valores.&lt;/p&gt;
&lt;p&gt;Dessa definição, concluimos que objetos capazes de serem invocados poderão receber parâmetros, como também, poderão retornar valores.&lt;/p&gt;
&lt;p&gt;Quando falamos de objetos que podem ser invocados é normal pensarmos em funções, porém, classes também são objetos invocaveis, até porque, a notação utilizada é a mesma e inclusive, é possível utilizar classes como sendo funções.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="objetos-invocaveis"&gt;
&lt;h2&gt;OBJETOS INVOCÁVEIS&lt;/h2&gt;
&lt;p&gt;A seguir temos os tipos de objetos que podem ser invocáveis, isto é, objetos que funcionam como funções. Sintaticamente falando, objetos invocáveis fazem uso do &lt;cite&gt;call operator ()&lt;/cite&gt; (operador de invocação).&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;User-defined functions&lt;/li&gt;
&lt;li&gt;Instance methods&lt;/li&gt;
&lt;li&gt;Generator functions&lt;/li&gt;
&lt;li&gt;Coroutine functions&lt;/li&gt;
&lt;li&gt;Asynchronous generator functions&lt;/li&gt;
&lt;li&gt;Built-in functions&lt;/li&gt;
&lt;li&gt;Built-in methods&lt;/li&gt;
&lt;li&gt;Classes&lt;/li&gt;
&lt;li&gt;Class Instances&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;A&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;pass&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num2&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;pass&lt;/span&gt;

&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;#invocando a classe A&lt;/span&gt;
&lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;#invocando a função func&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="definicao"&gt;
&lt;h2&gt;DEFINIÇÃO&lt;/h2&gt;
&lt;p&gt;Para declararmos uma função utilizamos a palavra reservada &lt;tt class="docutils literal"&gt;def&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;A nomenclatura das funções segue as mesmas regras de nomenclatura das variáveis.&lt;/p&gt;
&lt;p&gt;Em Python, não utilizamos o tipo de nomenclatura CamelCase, isto é, definir a primeira letra de cada palavra como sendo maiúscula. O padrão é separar as palavras com o uso de um &lt;tt class="docutils literal"&gt;underline&lt;/tt&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;minha_func&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Fala galera!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="invocando-funcoes"&gt;
&lt;h2&gt;INVOCANDO FUNÇÕES&lt;/h2&gt;
&lt;p&gt;O interpretador do Python tentará invocar uma função todas as vezes em que houver uma referência seguida por um par de parêntesis. Ao invocarmos uma função, é necessário enviar um valor válido para cada parâmetro contido na definição. Caso não haja parâmetros, basta somente abrirmos e fecharmos parêntesis.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;minha_func&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# coding: utf-8&lt;/span&gt;

&lt;span class="c1"&gt;# =================&lt;/span&gt;
&lt;span class="c1"&gt;#  = eXcript.com =&lt;/span&gt;
&lt;span class="c1"&gt;# =================&lt;/span&gt;

&lt;span class="c1"&gt;# INTRODUÇÃO ÀS FUNÇÕES&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;minha_func&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Fala galera!!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="links-externos"&gt;
&lt;h2&gt;LINKS EXTERNOS&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.python.org/3/reference/compound_stmts.html#function-definitions"&gt;Function Definition&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.python.org/3/reference/datamodel.html#the-standard-type-hierarchy"&gt;Python Data Model - The standard type hierarchy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.python.org/3/reference/expressions.html#calls"&gt;Calls&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="python"></category><category term="função"></category><category term="procedimento"></category><category term="método"></category><category term="blog"></category></entry><entry><title>Atribuição Condicional em Python</title><link href="http://excript.com/python/atribuicao-condicional-python.html" rel="alternate"></link><published>2016-06-13T23:15:00-03:00</published><updated>2016-06-13T23:15:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-06-13:/python/atribuicao-condicional-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula vamos estudar a atribuição condicional, uma maneira menos verbosa para definirmos 1 dentre 2 valores possíveis dependendo da avaliação de uma expressão.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="atribuicao-condicional"&gt;
&lt;h2&gt;ATRIBUIÇÃO CONDICIONAL&lt;/h2&gt;
&lt;p&gt;A atribuição condicional é a atribuição de um valor mediante o resultado de uma expressão. Em suma, a atribuição condicional funciona da mesma maneira …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula vamos estudar a atribuição condicional, uma maneira menos verbosa para definirmos 1 dentre 2 valores possíveis dependendo da avaliação de uma expressão.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="atribuicao-condicional"&gt;
&lt;h2&gt;ATRIBUIÇÃO CONDICIONAL&lt;/h2&gt;
&lt;p&gt;A atribuição condicional é a atribuição de um valor mediante o resultado de uma expressão. Em suma, a atribuição condicional funciona da mesma maneira que o uso da estrutura condicional &lt;tt class="docutils literal"&gt;if&lt;/tt&gt;-&lt;tt class="docutils literal"&gt;else&lt;/tt&gt;, onde o primeiro valor definido será atribuido, caso a condição seja verdadeira, do contrário, o segundo valor é que será atribuido.&lt;/p&gt;
&lt;p&gt;A seguir, temos um exemplo onde atribuimos um valor para a variável &lt;tt class="docutils literal"&gt;valor&lt;/tt&gt; mediante o uso da &lt;a class="reference external" href="http://excript.com/python/tomada-decisao-python.html"&gt;estrutura de seleção if&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="n"&gt;valor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;valor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Valor atribuido caso a condição seja verdadeira&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;valor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Valor atribuido caso a condição seja falso&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Nas situações em que o valor for verdadeiro, o primeiro bloco de instrução é executado, do contrário o segundo bloco será.&lt;/p&gt;
&lt;p&gt;Essa estrutura &lt;a class="reference external" href="http://excript.com/python/if-else-python.html"&gt;não lhe deve causar confusão, até porque, já estudamos a mesma e aprendemos que o bloco que será executado, dependerá, do valor contido na condição que está no cabeçalho da estrutura condicional if&lt;/a&gt; .&lt;/p&gt;
&lt;p&gt;A atribuição condicional, funciona da mesma maneira que o código que acabamos de ver, porém, ao invés de ter um bloco de instrução explicitamente definido, somente o valor deve ser exposto, como podemos ver no código abaixo.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;valor&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;O esquema acima diz que a variável de nome &lt;tt class="docutils literal"&gt;&amp;lt;valor&amp;gt;&lt;/tt&gt; deve receber o valor contido em &lt;tt class="docutils literal"&gt;&amp;lt; x &amp;gt;&lt;/tt&gt; caso a expressão &lt;tt class="docutils literal"&gt;if(True)&lt;/tt&gt; for verdadeira. Do contrário, temos o código &lt;tt class="docutils literal"&gt;else &amp;lt; y &amp;gt;&lt;/tt&gt; é quem definirá o valor a ser atribuido à variável &lt;tt class="docutils literal"&gt;&amp;lt;valor&amp;gt;&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;A seguir, temos o esquema marcado como comentário e na linha seguinte, um exemplo real de uma atribuição condicional.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#&amp;lt;valor&amp;gt; = &amp;lt; x &amp;gt; if(True) else &amp;lt; y &amp;gt;&lt;/span&gt;
   &lt;span class="n"&gt;x&lt;/span&gt;     &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt;   &lt;span class="mi"&gt;20&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;O estudo da atribuição condicional não deve causar espanto a todos que entenderam o correto funcionamento da estrutura condicional &lt;tt class="docutils literal"&gt;if&lt;/tt&gt;, até porque, o funcionamento é basicamente o mesmo, e a diferença está, na forma &lt;tt class="docutils literal"&gt;inline&lt;/tt&gt; como a estrutura agora estudada é utilizada.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="c1"&gt;#=====================================&lt;/span&gt;
&lt;span class="c1"&gt;#========== www.eXcript.com ==========&lt;/span&gt;
&lt;span class="c1"&gt;#=====================================&lt;/span&gt;

&lt;span class="n"&gt;num1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Digite um número: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num1&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;par&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ímpar&amp;quot;&lt;/span&gt;

&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;par&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;num1&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ímpar&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;O número digitado é &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="python"></category><category term="atribuição"></category><category term="if"></category><category term="tomada de decisão"></category><category term="blog"></category></entry><entry><title>Operadores de Atribuição Compostos do Python</title><link href="http://excript.com/python/operadores-de-atribuicao-compostos-python.html" rel="alternate"></link><published>2016-06-01T02:00:00-03:00</published><updated>2016-06-01T02:00:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-06-01:/python/operadores-de-atribuicao-compostos-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos os Operadores de Atribuição Compostos da linguagem Python que, além de adicionarem o valor a direita do operador de atribuição, realizar uma determinada operação antes da atribuição propriamente dita&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="operadores-compostos"&gt;
&lt;h2&gt;OPERADORES COMPOSTOS&lt;/h2&gt;
&lt;p&gt;Os &lt;strong&gt;Operadores de Atribuição Compostos&lt;/strong&gt; realizam uma operação e em seguida, atribuem o resultado da operação …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos os Operadores de Atribuição Compostos da linguagem Python que, além de adicionarem o valor a direita do operador de atribuição, realizar uma determinada operação antes da atribuição propriamente dita&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="operadores-compostos"&gt;
&lt;h2&gt;OPERADORES COMPOSTOS&lt;/h2&gt;
&lt;p&gt;Os &lt;strong&gt;Operadores de Atribuição Compostos&lt;/strong&gt; realizam uma operação e em seguida, atribuem o resultado da operação para a variável que está a esquerda do operador de atribuição.&lt;/p&gt;
&lt;p&gt;Estudamos a &lt;a class="reference external" href="http://excript.com/python/operador-de-atribuicao-python.html"&gt;atribuição simples&lt;/a&gt; em aulas passadas e aprendemos as 2 partes que constituem a estrutura de atribuição da linguagem, bem como o seu funcionamento de maneira geral.&lt;/p&gt;
&lt;p&gt;Nesta aula continuaremos o estudo da atribuição, porém, estudaremos os operadores de atribuição compostos, isto é, os operadores que além de atribuirem o valor a sua direita à variável a sua esquerda, realizam antes alguma operação.&lt;/p&gt;
&lt;p&gt;É comum precisarmos realizar alguma operação, geralmente matemática, e atribuir o resultado a alguma variável. Podemos resolver esse problema realizando a operação sobre determinado valor e em seguida, atribuir o resultado a alguma variável. No entanto, essa é uma situação tão corriqueira que, criou-se operadores que, primeiro, realizam uma operação e em seguida, atribuem o resultado à variável a esquerda.&lt;/p&gt;
&lt;p&gt;Atualmente há 5 operadores compostos disponibilizados pela linguagem Python. Os 4 primeiros para as operações matemáticas fundamentais, soma, subtração, multiplicação e divisão. O quinto e último é para a &lt;a class="reference external" href="_`MódulodaDivisãoemPython`"&gt;operação módulo, isto é, o operador que retorna o resto de uma divisão&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;OPERADORES COMPOSTOS&lt;/h2&gt;
&lt;p&gt;A seguir, temos a lista com os 5 operadores compostos do Python:&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="41%" /&gt;
&lt;col width="59%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;OPERADOR&lt;/td&gt;
&lt;td&gt;NOME&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;+=&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;mais igual&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-=&lt;/span&gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;menos igual&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;*=&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;vezes igual&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;/=&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;dividido igual&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;%=&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;módulo igual&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Como podemos ver na tabela acima, os operadores compostos são formados pela junção do operador de atribuição com o &lt;a class="reference external" href="http://excript.com/python/operador-aritmetico-em-python.html"&gt;operadores aritméticos&lt;/a&gt;, onde o operador matemático precede o operador de atribuição.&lt;/p&gt;
&lt;p&gt;Uma maneira de facilitar o entendimento e memorização dos operadores compostos, é saber lê-los corretamente, por exemplo: o operador que soma e atribui é chamado de &lt;tt class="docutils literal"&gt;Mais Igual&lt;/tt&gt;, isto é, o valor a esquerda do sinal de atribuição será somado com o valor a direita e o resultado dessa operação, será atribuido à variável a esquerda do sinal de atribuição.&lt;/p&gt;
&lt;p&gt;A seguir, um trecho de código em que é feito uma operação com cada um dos 5 operadores de atribuição compostos. A direita de cada operação há o respectivo resultado.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;maisIgual&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;menosIgual&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;vezesIgual&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;divididoIgual&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;moduloIgual&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;

&lt;span class="n"&gt;maisIgual&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="c1"&gt;#resultado 10&lt;/span&gt;
&lt;span class="n"&gt;menosIgual&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="c1"&gt;#resultado 8&lt;/span&gt;
&lt;span class="n"&gt;vezesIgual&lt;/span&gt; &lt;span class="o"&gt;*=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="c1"&gt;#resultado 9&lt;/span&gt;
&lt;span class="n"&gt;divididoIgual&lt;/span&gt; &lt;span class="o"&gt;/=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="c1"&gt;#resultado 9&lt;/span&gt;
&lt;span class="n"&gt;moduloIgual&lt;/span&gt; &lt;span class="o"&gt;%=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="c1"&gt;#resultado 3&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;O mais importante a saber dessa aula, talvez seja, como ler cada operador e sempre lembrar, que antes de qualquer valor ser atribuído, é necessário resolver a operação a direita do sinal de atribuição.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="c1"&gt;#=====================================&lt;/span&gt;
&lt;span class="c1"&gt;#========== www.eXcript.com ==========&lt;/span&gt;
&lt;span class="c1"&gt;#=====================================&lt;/span&gt;

&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="veja-tambem"&gt;
&lt;h2&gt;VEJA TAMBÉM&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/operador-aritmetico-em-python.html"&gt;Aula 16: Operadores Aritméticos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="{filename}../curso-de-python/0019_operador-relacional-python.rst"&gt;Aula 19: Operadores Relacionais&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/operador-relacional-composto-python.html"&gt;Aula 23: Operadores Relacionais Compostos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/operadores-relacionais-na-pratica-python.html"&gt;Aula 24: Operadores Relacionais na Prática&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/operadores-logicos-python.html"&gt;Aula 25: Operadores Lógicos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/operador-de-atribuicao-python.html"&gt;Aula 30: Operadores de Atribuição&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/atribuicao-multipla-python.html"&gt;Aula 31: Operador de Atribuição Múltipla&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/operadores-de-atribuicao-compostos-python.html"&gt;Aula 32: Operador de Atribuição Compostos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="python"></category><category term="operadores"></category><category term="operadores de atribuição"></category><category term="operadores de atribuição compostos"></category><category term="blog"></category></entry><entry><title>Atribuição Múltipla em Python</title><link href="http://excript.com/python/atribuicao-multipla-python.html" rel="alternate"></link><published>2016-06-01T01:30:00-03:00</published><updated>2016-06-01T01:30:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-06-01:/python/atribuicao-multipla-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos a atribuição múltipla, uma ferramenta da linguagem Python para atribuirmos vários valores a várias variáveis numa única expressão.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="introducao"&gt;
&lt;h2&gt;INTRODUÇÃO&lt;/h2&gt;
&lt;img alt="Atribuição múltipla" src="../images/curso-de-python/atribuicao-multipla.png" /&gt;
&lt;p&gt;A atribuição de valores é uma tarefa corriqueira e essencial no desenvolvimento de software. Algumas linguagens como o Python, definem notações diferente para atribuição, permitindo assim, por exemplo …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos a atribuição múltipla, uma ferramenta da linguagem Python para atribuirmos vários valores a várias variáveis numa única expressão.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="introducao"&gt;
&lt;h2&gt;INTRODUÇÃO&lt;/h2&gt;
&lt;img alt="Atribuição múltipla" src="../images/curso-de-python/atribuicao-multipla.png" /&gt;
&lt;p&gt;A atribuição de valores é uma tarefa corriqueira e essencial no desenvolvimento de software. Algumas linguagens como o Python, definem notações diferente para atribuição, permitindo assim, por exemplo, inicializar várias variáveis ou então, atribuir valores diferentes para diferentes variáveis numa mesma expressão.&lt;/p&gt;
&lt;p&gt;Nosso objetivo nessa aula é o estudo da atribuição múltipla, isto é, a atribuição de vários valores a várias variáveis numa mesma expressão. Dessa forma, teremos em ambos lados do operador de atribuição um conjunto de variáveis e de valores.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="atribuicao-multipla"&gt;
&lt;h2&gt;ATRIBUIÇÃO MULTIPLA&lt;/h2&gt;
&lt;p&gt;A atribuição múltipla é a capacidade de atribuir um conjunto de valores a um conjunto de variáveis. Ambos conjuntos precisam, obrigatoriamente, possuir a mesma quantidade de elementos, isto é, a quantidade de variáveis a esquerda deve ter a mesma quantidade de valores a direita, como pode ser visto no código a seguir.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima, estamos declarando e atribuindo valores a 2 variáveis. A primeira variável de nome &lt;tt class="docutils literal"&gt;a&lt;/tt&gt;, está sendo atribuido o valor 1, e a segundo variável de nome &lt;tt class="docutils literal"&gt;b&lt;/tt&gt;, esta sendo atribuido o valor 2.&lt;/p&gt;
&lt;p&gt;A ordem em que as variáveis estão dispostas a esquerda, receberá, na mesma ordem, os respectivos valores a direita.&lt;/p&gt;
&lt;p&gt;Assim, sendo a variável &lt;tt class="docutils literal"&gt;a&lt;/tt&gt; a primeira, e a variável &lt;tt class="docutils literal"&gt;b&lt;/tt&gt; a segunda, estas receberam, respectivamente, o primeiro valor, e o segundo valor, respectivamente, definido no lado direito do operador de atribuição.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="funcionamento-da-atribuicao-multipla"&gt;
&lt;h2&gt;FUNCIONAMENTO DA ATRIBUIÇÃO MÚLTIPLA&lt;/h2&gt;
&lt;p&gt;A atribuição múltipla é a atribuição de uma tupla a outra, onde os valores da tupla a direita do sinal de atribuição, serão atribuídos, para as respectivas variáveis, na dupla do lado esquerdo do sinal de atribuição.&lt;/p&gt;
&lt;p&gt;Não estudamos ainda as tuplas, porém, pense nas mesmas como sendo estruturas de valores em que cada valor é separado dos demais pelo uso de vírgulas. &lt;a class="reference external" href="_`TuplasemPython`"&gt;Segue o link onde estudaremos as estruturas de Tuplas do Python&lt;/a&gt;.&lt;/p&gt;

    &lt;div class="admonitionblock note data-line"&gt;
        &lt;table&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="icon"&gt;
                        &lt;i class="fa icon-note" title="Nota!"&gt;&lt;/i&gt;
                    &lt;/td&gt;
                    &lt;td class="content"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt;A atribuição múltipla é um recurso da linguagem Python que acaba sendo, uma consequência da definição da linguagem. Isso porque, a notação para definição de tuplas se dá pelo uso de vírgula, assim, todas as vezes em que tivermos um conjunto de objetos dispostos em ordem e separados por vírgulas, está disposição, será reconhecida pela linguagem, como sendo uma tupla e a funcionalidade da atribuição múltipla, acaba sendo, uma consequência da definição de tupla e não um recurso da linguagem&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;p&gt;No código abaixo, declaramos 3 variáveis e estamos inicializando-as com os números 1, 2 e 3 respectivamente. Como podemos observar, a notação de tupla está sendo utilizada em ambos os lados da atribuição! Assim, podemos dizer que, estamos atribuindo, uma tupla a outra, onde a primeira tupla é composta pelos elementos &lt;tt class="docutils literal"&gt;a, b, c&lt;/tt&gt; e a segunda tupla, pelos elementos, &lt;tt class="docutils literal"&gt;1, 2, 3&lt;/tt&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Da mesma forma, temos que a notação a seguir, que torna explicito o uso de tupla, é totalmente válida e funcional.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima, declaramos 2 variáveis, respectivamente, &lt;tt class="docutils literal"&gt;x&lt;/tt&gt; e &lt;tt class="docutils literal"&gt;y&lt;/tt&gt; e delimitamo-as por parêntesis, o que diz ao Python que estamos trabalhando com Tuplas. Ainda assim, ambas variáveis, &lt;tt class="docutils literal"&gt;a&lt;/tt&gt; e &lt;tt class="docutils literal"&gt;b&lt;/tt&gt; foram declaradas no escopo local e inicializadas com os valores 1 e 2 respectivamente.&lt;/p&gt;
&lt;p&gt;Essa é uma notação ambigua e funcional e que torna toda a linguagem muito mais coesa. Como veremos, há outras situações onde o Python possui ambiguidades funcionais e que são, muito úteis.&lt;/p&gt;

    &lt;div class="admonitionblock important data-line-21"&gt;
        &lt;table&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                &lt;td class="icon"&gt;
                    &lt;i class="fa icon-important" title="Importante!"&gt;&lt;/i&gt;
                &lt;/td&gt;
                &lt;td class="content"&gt;
                    &lt;div class="paragraph data-line-22"&gt;
                        &lt;p&gt;Essa é uma das raras ocasiões em que a linguagem possui ambiguidades, até porque, uma das características do Python é não repetir a si mesmo. Novamente, o que possibilita 2 definições para uso da atribuição múltipla decorre da notação utilizada para a definição de tuplas!&lt;/p&gt;
                    &lt;/div&gt;
                &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="veja-tambem"&gt;
&lt;h2&gt;VEJA TAMBÉM&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/operador-aritmetico-em-python.html"&gt;Aula 16: Operadores Aritméticos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="{filename}../curso-de-python/0019_operador-relacional-python.rst"&gt;Aula 19: Operadores Relacionais&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/operador-relacional-composto-python.html"&gt;Aula 23: Operadores Relacionais Compostos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/operadores-relacionais-na-pratica-python.html"&gt;Aula 24: Operadores Relacionais na Prática&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/operadores-logicos-python.html"&gt;Aula 25: Operadores Lógicos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/operador-de-atribuicao-python.html"&gt;Aula 30: Operadores de Atribuição&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/atribuicao-multipla-python.html"&gt;Aula 31: Operador de Atribuição Múltipla&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/operadores-de-atribuicao-compostos-python.html"&gt;Aula 32: Operador de Atribuição Compostos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="python"></category><category term="atribuição"></category><category term="atribuição múltipla"></category><category term="blog"></category></entry><entry><title>Estrutura de Atribuição Simples do Python</title><link href="http://excript.com/python/operador-de-atribuicao-python.html" rel="alternate"></link><published>2016-06-01T01:00:00-03:00</published><updated>2016-06-01T01:00:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-06-01:/python/operador-de-atribuicao-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos o Operador de Atribuição do Python bem como a relação entre a parte esquerda e direita que formam a estrutura de atribuição do Python.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="a-atribuicao-de-valores"&gt;
&lt;h2&gt;A ATRIBUIÇÃO DE VALORES&lt;/h2&gt;
&lt;img alt="Atribuição Simples em Python" src="../images/curso-de-python/op-atribuicao-simples1.png" /&gt;
&lt;p&gt;A &lt;tt class="docutils literal"&gt;Atribuição de Valores&lt;/tt&gt; é a passagem de informação a determinada variável. Toda variável, por sua definição, pode receber …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos o Operador de Atribuição do Python bem como a relação entre a parte esquerda e direita que formam a estrutura de atribuição do Python.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="a-atribuicao-de-valores"&gt;
&lt;h2&gt;A ATRIBUIÇÃO DE VALORES&lt;/h2&gt;
&lt;img alt="Atribuição Simples em Python" src="../images/curso-de-python/op-atribuicao-simples1.png" /&gt;
&lt;p&gt;A &lt;tt class="docutils literal"&gt;Atribuição de Valores&lt;/tt&gt; é a passagem de informação a determinada variável. Toda variável, por sua definição, pode receber valores ou então, pode ter seu valor alterado, como estudado anteriormente nas aulas &lt;a class="reference external" href="http://excript.com/python/variavel-em-python.html"&gt;Variáveis em Python&lt;/a&gt; e &lt;a class="reference external" href="http://excript.com/python/caracteristicas-das-variaveis-python.html"&gt;Características das Variáveis em Python&lt;/a&gt; . Nesse primeiro momento, estudaremos a atribuição simples, isto é, a forma comum de atribuição.&lt;/p&gt;
&lt;p&gt;A linguagem Python tem definido que o sinal que conhecemos pelo nome de igual ( &lt;strong&gt;=&lt;/strong&gt; ) será o operador de atribuição. Desta forma, iremos construir expressões compostas de 2 partes, ou melhor que estarão em um dos dois lados do operador de atribuição: do lado esquerdo e do lado direito.&lt;/p&gt;
&lt;p&gt;A parte ao lado esquerdo do operador de atribuição &lt;strong&gt;sempre&lt;/strong&gt; receberá o valor definido no lado direito do operador. Assim, é uma norma da linguagem que o lado esquerdo possua uma referência que possa ter seu valor alterado, enquanto que do lado direito, haja algum valor a ser atribuido à referência ao lado esquerdo.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;variável&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;operador&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;valor&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;variável&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;      &lt;span class="o"&gt;=&lt;/span&gt;     &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;valor&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="n"&gt;numero&lt;/span&gt;          &lt;span class="o"&gt;=&lt;/span&gt;     &lt;span class="mi"&gt;10&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No trecho de código acima podemos ver como ocorre a passagem de valores e o uso do operador de atribuição na prática.&lt;/p&gt;
&lt;p&gt;A notação para atribuição de valores define que a variável que receberá o valor estará do lado esquerdo do sinal de atribuição &lt;tt class="docutils literal"&gt;=&lt;/tt&gt;, enquanto o valor a ser atribuido, estara do lado direito. Assim, &lt;strong&gt;é correto afirmar&lt;/strong&gt; que a atribuição de valores sempre seguira o sentido da direita para a esquerda.&lt;/p&gt;
&lt;p&gt;No código a seguir, temos mais um exemplo onde declaramos variáveis e já atribuimos um valor às mesmas.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
&lt;span class="n"&gt;txt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;texto&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima, declaramos 2 variáveis, a primeira de nome &lt;tt class="docutils literal"&gt;num&lt;/tt&gt; e a segunda de nome &lt;tt class="docutils literal"&gt;txt&lt;/tt&gt;. Ambas foram declaradas e receberam um valor inicial. O valor inicialmente atribuido irá definir o &lt;tt class="docutils literal"&gt;tipo&lt;/tt&gt; da variável, de modo a impedir que a mesma receba valores de outro tipo durante toda a execução do Script.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="atribuicao-simples-a-varias-variaveis"&gt;
&lt;h2&gt;ATRIBUIÇÃO SIMPLES A VÁRIAS VARIÁVEIS&lt;/h2&gt;
&lt;img alt="Atribuição Simples a várias variáveis em Python" src="../images/curso-de-python/op-atribuicao-simples2.png" /&gt;
&lt;p&gt;A notação de atribuição simples do Python nos permite atribuir a várias variáveis um mesmo valor numa mesma expressão. Para isso, devemos separar as variáveis que receberam o mesmo valor com vírgulas.&lt;/p&gt;
&lt;p&gt;No geral, as regras da atribuição estudas funcionam da mesma forma.&lt;/p&gt;
&lt;p&gt;No código abaixo, estamos realizando outra atribuição simples, porém, utilizando um notação diferente.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima, declaramos 3 variáveis. A primeira, chamamos de &lt;tt class="docutils literal"&gt;a&lt;/tt&gt; e atribuimos o valor 1. A segunda e a terceira, chamamos de &lt;tt class="docutils literal"&gt;b&lt;/tt&gt; e &lt;tt class="docutils literal"&gt;c&lt;/tt&gt;, separando-as por vírgula e iniciando-as com o valor igual a 2.&lt;/p&gt;
&lt;p&gt;Podemos iniciar mais de uma variável numa mesma atribuição, ou então, em outras palavras, podemos atribuir valores a várias variáveis ao mesmo tempo e a notação utilizada nessas 2 situações foi a mesma, salvo o uso da vírgula na separação da primeira e da segunda variável que receberão um novo valor.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="veja-tambem"&gt;
&lt;h2&gt;VEJA TAMBÉM&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/operador-aritmetico-em-python.html"&gt;Aula 16: Operadores Aritméticos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="{filename}../curso-de-python/0019_operador-relacional-python.rst"&gt;Aula 19: Operadores Relacionais&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/operador-relacional-composto-python.html"&gt;Aula 23: Operadores Relacionais Compostos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/operadores-relacionais-na-pratica-python.html"&gt;Aula 24: Operadores Relacionais na Prática&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/operadores-logicos-python.html"&gt;Aula 25: Operadores Lógicos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/operador-de-atribuicao-python.html"&gt;Aula 30: Operadores de Atribuição&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/atribuicao-multipla-python.html"&gt;Aula 31: Operador de Atribuição Múltipla&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/operadores-de-atribuicao-compostos-python.html"&gt;Aula 32: Operador de Atribuição Compostos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="python"></category><category term="operador"></category><category term="operador de atribuição"></category><category term="atribuicao simples"></category><category term="blog"></category></entry><entry><title>Introdução aos Dicionários do Python</title><link href="http://excript.com/python/introducao-aos-dicionarios-python.html" rel="alternate"></link><published>2016-06-01T00:00:00-03:00</published><updated>2016-06-01T00:00:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-06-01:/python/introducao-aos-dicionarios-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nessa aula estudaremos os dicionários, uma estrutura simples de ser usada que nos proporciona uma forma de programar rápida e simples, produzindo um código legível e fácil de ser entendido.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="introducao"&gt;
&lt;h2&gt;INTRODUÇÃO&lt;/h2&gt;
&lt;p&gt;Já estudamos as listas, como também, aprendemos diversas formas para manipula-las. Agora, nós daremos início ao estudo dos dicionários …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nessa aula estudaremos os dicionários, uma estrutura simples de ser usada que nos proporciona uma forma de programar rápida e simples, produzindo um código legível e fácil de ser entendido.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="introducao"&gt;
&lt;h2&gt;INTRODUÇÃO&lt;/h2&gt;
&lt;p&gt;Já estudamos as listas, como também, aprendemos diversas formas para manipula-las. Agora, nós daremos início ao estudo dos dicionários, uma das estruturas mais utilizadas internamente pelas bibliotecas do Python. Ou seja, muito das implementações que utilizamos, foram construídas, fazendo uso de dicionários. E também, raras são as vezes que desenvolvermos um programa em sem a utilizarmos um dicionário, até porque, o mesmo representa da melhor maneira a estrutura chave-valor.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="o-que-e-um-dicionario"&gt;
&lt;h2&gt;O QUE É UM DICIONÁRIO?&lt;/h2&gt;
&lt;p&gt;Um dicionário é uma lista especializada onde cada valor está diretamente relacionado a uma chave.&lt;/p&gt;
&lt;p&gt;Até agora, nós estávamos utilizando estruturas como listas e tuplas. Nestas, nós temos que cada elemento é associado a um número inteiro não negativo, então, podemos dizer que a estrutura lista do Python é, em sua definição mais primitiva, um dicionário. Onde a chave é o número inteiro, e o valor, o objeto que estamos associando a este número.&lt;/p&gt;
&lt;p&gt;A grande diferença dos &lt;strong&gt;dicionário&lt;/strong&gt; para as listas, é que com os dicionários, é nossa responsabilidade a construção e o gerenciamento do índice e também, nós podemos utilizar como índice qualquer objeto não mutável.&lt;/p&gt;
&lt;p&gt;Ou seja, nós podemos definir que cada item terá uma cadeia de caracteres vinculado, logo, para acessar este item, deve-se informar qual a sequência de caracteres desejado. Também podemos associar um número como índice ou então, nós podemos definir que alguns elementos terão vinculados um número e outros uma string ou mesmo, uma tupla.&lt;/p&gt;
&lt;p&gt;Nós temos uma estrutura chave-valor, e cada chave sempre estará relacionada a um valor qualquer. Logo, podemos dizer que um dicionário pode funcionar como uma lista, mas uma lista não consegue trabalhar como um dicionário.&lt;/p&gt;
&lt;p&gt;A estrutura de dicionário é uma estrutura abstrata, assim, podemos estende-la e implementarmos uma lista simples, uma tupla ou então, a estrutura de chave-valor que desejarmos.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;aaa&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;bbb&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ccc&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;bbb&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;aaa&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ccc&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No exemplo acima, associamos um conjunto de caractere a um determinado objeto numérico. Agora, para recuperarmos dos objetos numéricos, basta informarmos a respectiva cadeia de caracteres, por exemplo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;aaa&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;bbb&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;O que temos é que a chave está vinculado a um valor único dentro da estrutura do dicionário. Caso uma chave não contida no dicionário seja passada, será retornado um erro, por exemplo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ddd&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Nós adicionamos uma série de itens numa determinada ordem, porém, se nós iterarmos o nosso dicionário e imprimirmos os seus elementos, não necessáriamente os itens serão impressos numa ordem pre-estabelecida. Talvez, quando estivermos trabalhando com um pequeno dicionário a recuperação de elementos ocorra num determinada ordem, porém, não se pode confiar que os elementos do dicionário estarão ordenados.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="chaves-invalidas"&gt;
&lt;h2&gt;CHAVES INVÁLIDAS&lt;/h2&gt;
&lt;p&gt;Em um dicionário, nós podemos definir como chave de um elemento, qualquer estrutura imutável, como exemplo, uma tupla ou então, uma string. Porém, se nós tentarmos atribuir como chave uma lista, não será possível e isso acontece, porque internamente, um dicionário utiliza um valor que é obtido através de uma chave. Logo, se nós tivermos uma estrutura mutável, o valor que o dicionário utilizou como índice terá sido mudado e então, o armazenamento chave-valor não mais funcionará.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="conjuntos-de-elementos-como-chave"&gt;
&lt;h2&gt;CONJUNTOS DE ELEMENTOS COMO CHAVE&lt;/h2&gt;
&lt;p&gt;Em Python, o trabalho e manejo de listas é uma tarefa relativamente simples. Um dicionário, por exemplo, pode ter um elemento que possui uma chave mapeada através de um conjunto de objetos. Assim, nós conseguimos, por exemplo, montar arranjos, onde um grupo de elementos está mapeado a um objetos ou mesmo, um conjunto de objetos.
Assim, temos que a chave de cada elemento deve ser um objeto imutável, porém, o valor pode ser qualquer objeto, indiferente do seu funcionamento.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;dic&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;b&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;c&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;d&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;e&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;f&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;g&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;h&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;i&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;dic&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;d&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;e&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;f&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Acima, nós temos um exemplo onde um número está associado a um conjunto de caracteres. Devido ao fato de que uma tupla é um objeto imutável, ou seja, após cria-la não mais é possível adicionar, alterar ou remover elementos, logo, nós podemos associar um objetos a um conjunto de elementos.&lt;/p&gt;
&lt;p&gt;É importante observar, que uma tupla pode conter os mesmos elementos e ainda assim ser diferente. Isso porque, a disposição dos elementos numa lista ou numa tupla a faz diferente de outra, mesmo que ambas contenham os mesmos elemento. Por exemplo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;premios&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;44&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;07&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;08&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Carro&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;55&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;02&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;48&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;33&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;41&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Casa&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="veja-tambem"&gt;
&lt;h2&gt;VEJA TAMBÉM&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/tuplas-python.html"&gt;Aula: Tuplas&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="links-externos"&gt;
&lt;h2&gt;LINKS EXTERNOS&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.python.org/3/library/stdtypes.html?highlight=dict#dict"&gt;Documentação Oficial dos Dicionários (en)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://codingair.logdown.com/posts/179395-understand-common-sequence-data-types-in-python-string-tuple-and-list"&gt;Understand Common Sequence Data Types in Python – String, Tuple, and List (en)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="python"></category><category term="dicionário"></category></entry><entry><title>Blocos de Instrução em Python</title><link href="http://excript.com/python/bloco-de-instrucao-python.html" rel="alternate"></link><published>2016-05-21T03:00:00-03:00</published><updated>2016-05-21T03:00:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-05-21:/python/bloco-de-instrucao-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Os blocos de instrução fazem parte de qualquer código Python como também, organizando o escopo de variáveis de funções.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="bloco-de-instrucao"&gt;
&lt;h2&gt;BLOCO DE INSTRUÇÃO&lt;/h2&gt;
&lt;p&gt;Bloco de instrução é o conjunto das instrução que estejam num mesmo nível de indentação, mesmo nível hierárquico.&lt;/p&gt;
&lt;img alt="A imagem demonstra um trecho de código Python em que todas as instruções estão no mesmo bloco de instrução, o bloco de instrução global, o bloco de instrução a nível de aqruivo." src="../images/curso-de-python/bloco-de-instrucao1.png" /&gt;
&lt;p&gt;A imagem acima mostra um trecho de código em que …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Os blocos de instrução fazem parte de qualquer código Python como também, organizando o escopo de variáveis de funções.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="bloco-de-instrucao"&gt;
&lt;h2&gt;BLOCO DE INSTRUÇÃO&lt;/h2&gt;
&lt;p&gt;Bloco de instrução é o conjunto das instrução que estejam num mesmo nível de indentação, mesmo nível hierárquico.&lt;/p&gt;
&lt;img alt="A imagem demonstra um trecho de código Python em que todas as instruções estão no mesmo bloco de instrução, o bloco de instrução global, o bloco de instrução a nível de aqruivo." src="../images/curso-de-python/bloco-de-instrucao1.png" /&gt;
&lt;p&gt;A imagem acima mostra um trecho de código em que todas as instrução de um arquivo estão contidas no bloco global. Na imagem a seguir, temos um código semalhante a imagem anterior, porém, foi adicionado uma instrução if e dentro desta, foram adicionadas várias linhas e todas estas estão num segundo bloco de instrução, o bloco de instrução da instrução if e só serão executados caso a avaliação da instrução if seja verdadeira.&lt;/p&gt;
&lt;img alt="A imagem demonstra um trecho de código Python onde há 2 blocos de instrução. O primeiro bloco está no nível global, no nível de arquivo. O segundo bloco, delineado com um retângulo vermelho, exibe outro bloco que só será executado caso a instrução if seja verdadeira." src="../images/curso-de-python/bloco-de-instrucao2.png" /&gt;
&lt;p&gt;Programas em Python podem conter centenas de linhas. É comum em toda aplicação que, códigos que desempenham determinada ação possuam a mesma quantidade de espaços, isto é, tenham a mesma indentação.&lt;/p&gt;
&lt;p&gt;A linguagem Python oferece algumas notações para delimitarmos, ou melhor, definirmos, o que chamamos de blocos de instrução ou somente: &lt;strong&gt;blocos&lt;/strong&gt;. Um conjunto de linhas marcadas com comentários também formam blocos, porém, blocos de de comentário. Como estudamos, nossa aplicação quando executada, ignora qualquer linhas marcada como sendo comentários. Do contrário, todo conjunto de linhas que estejam indentadas estarão formando um bloco - um bloco de instrução e que será executado linha-a-linha.&lt;/p&gt;
&lt;p&gt;A principal características dos blocos, é que estes serão executados por inteiro, salvo nas vezes em que usarmos uma instrução para a interromper o fluxo normal.&lt;/p&gt;
&lt;p&gt;O Python diferencia um bloco de instrução de outro através da indentação, isto é, do espaçamento a contar da margem esquerda do vídeo. Por isso temos que a linguagem Python, nos obriga a trabalharmos de maneira organizada - organizando os blocos em níveis hierarquicos diferentes, o que melhora a legibilidade e diminui a quantidade de linhas e caracteres utilizados.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="definindo-blocos"&gt;
&lt;h2&gt;DEFININDO BLOCOS&lt;/h2&gt;
&lt;p&gt;Vamos fazer um exemplo utilizando 2 blocos de instrução. O primeiro bloco estará rente a margem esquerda do vídeo, enquanto o segundo, estará 4 espaçamentos da margem.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Nível 0. Este código está rente a margem do vídeo.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;var&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Estamos no bloco 1, isto é, a 4 espaçamentos da margem.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Essa é a segunda linha do bloco &amp;#39;if&amp;#39;. &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Agora, voltamos para o bloco principal do programa.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No exemplo acima, utilizamos 2 blocos de instrução. O primeiro bloco, que podemos dizer, o bloco de instrução principal, é a indentação rente a margem esquerda, ou melhor, corresponde as linhas que não possuem indentação.&lt;/p&gt;
&lt;p&gt;O segundo bloco de instrução, é o bloco que está a 4 espaços da margem esquerda e este só será executado nas situações em que a instrução &lt;tt class="docutils literal"&gt;if&lt;/tt&gt; for verdadeira.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="nomes"&gt;
&lt;h2&gt;NOMES&lt;/h2&gt;
&lt;p&gt;É comum chamarmos de &lt;tt class="docutils literal"&gt;nome&lt;/tt&gt; toda e qualquer declaração de variável, seja ela uma instrução, classe, variável, constante e etc.&lt;/p&gt;
&lt;p&gt;Todo nome pertencerá, por definição, ao escopo onde foi declarado, podendo ser acessada somente, em níveis superiores, mas nunca em níveis inferiores da hierarquia formada com a indentação. Até porque, quando o cursor de execução volta ao nível inferior, todos os nomes declarados nas hierarquias acima, serão desalocados da memória e por conseguinte, não poderão ser acessados e todos valores ali definidos serão removidos da memória.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="hierarquia"&gt;
&lt;h2&gt;HIERARQUIA&lt;/h2&gt;
&lt;p&gt;Os blocos de instrução constroem hierarquias e estas, podem ser reconhecidas visualmente, até porque, níveis hierarquicos diferentes, estarão a distâncias diferentes da margem esquerda do editor.&lt;/p&gt;
&lt;p&gt;Todo bloco é único e será executado plenamente após o cursor iniciar sua execução. Nomes declarados dentro de blocos, serão desalocados da memória quando estes tiverem sua execução finalizada e, todo bloco contido dentro de outro, terá visibilidade restrita a todos os nomes ali definidos.&lt;/p&gt;
&lt;p&gt;A seguir, temos um código que exemplifica o uso de vários blocos de instrução.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="c1"&gt;#bloco 1&lt;/span&gt;
&lt;span class="c1"&gt;#bloco 1&lt;/span&gt;
&lt;span class="c1"&gt;#bloco 1&lt;/span&gt;
    &lt;span class="c1"&gt;#bloco 2&lt;/span&gt;
    &lt;span class="c1"&gt;#bloco 2&lt;/span&gt;
    &lt;span class="c1"&gt;#bloco 2&lt;/span&gt;
        &lt;span class="c1"&gt;#bloco 3&lt;/span&gt;
        &lt;span class="c1"&gt;#bloco 3&lt;/span&gt;
        &lt;span class="c1"&gt;#bloco 3&lt;/span&gt;
        &lt;span class="c1"&gt;#bloco 3&lt;/span&gt;
    &lt;span class="c1"&gt;#bloco 4&lt;/span&gt;
    &lt;span class="c1"&gt;#bloco 4&lt;/span&gt;
    &lt;span class="c1"&gt;#bloco 4&lt;/span&gt;
    &lt;span class="c1"&gt;#bloco 4&lt;/span&gt;
&lt;span class="c1"&gt;#bloco 1&lt;/span&gt;
&lt;span class="c1"&gt;#bloco 1&lt;/span&gt;
&lt;span class="c1"&gt;#bloco 1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima, utilizamos 3 níveis hierarquicos, porém, utilizamos 4 blocos diferentes, mesmo que hierarquicamente, temos somente 3 níveis.&lt;/p&gt;
&lt;p&gt;O &lt;strong&gt;bloco 2&lt;/strong&gt; e o &lt;strong&gt;bloco 4&lt;/strong&gt; estão, hierarquicamente, no mesmo nível. Porém, após a execução do &lt;strong&gt;bloco 2&lt;/strong&gt;, todos os &lt;strong&gt;nomes&lt;/strong&gt; utilizados dentro deste serão desalocados da memória e assim, quando o &lt;strong&gt;bloco 4&lt;/strong&gt; for executado, não será possível enxergar nomes utilizados no &lt;strong&gt;bloco 2&lt;/strong&gt;!&lt;/p&gt;
&lt;p&gt;Todas as vezes que o cursor de execução do programa retorna um nível da hierarquia, ou seja, volta para o bloco de instrução que contém as instruções que estava sendo executadas, o bloco que estava sendo executado é desalocado, junto a todos os nome ali declarados.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Imprime um texto&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Imprime um texto&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Imprime um texto&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Imprime um texto&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Não irá imprimir&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Não irá imprimir&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Não irá imprimir&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Não irá imprimir&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Não irá imprimir&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="veja-tambem"&gt;
&lt;h2&gt;VEJA TAMBÉM&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/blocos-de-instrucoes-python.html"&gt;Aula 27: Continuação sobre os Blocos de instrução&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/blocos-de-instrucao-python-na-pratica.html"&gt;Aula 28: Blocos de instrução na Prática&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="links-externos"&gt;
&lt;h2&gt;LINKS EXTERNOS&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.python.org/3/tutorial/introduction.html#an-informal-introduction-to-python"&gt;Documentação oficial (en)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.python.org/dev/peps/pep-0008/#comments"&gt;PEP 8 -- Style Guide for Python Code (en)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="python"></category><category term="blocos"></category><category term="instrução"></category><category term="blocos de instrução"></category><category term="blog"></category></entry><entry><title>Blocos de Instrução Python na Prática</title><link href="http://excript.com/python/blocos-de-instrucao-python-na-pratica.html" rel="alternate"></link><published>2016-05-21T02:00:00-03:00</published><updated>2016-05-21T02:00:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-05-21:/python/blocos-de-instrucao-python-na-pratica.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula vamos desenvolver um exemplo utilizando Blocos de Instrução e trabalhando com o Escopo de Nomes para que possamos melhor entender ambos conceitos.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="bloco-de-instrucao"&gt;
&lt;h2&gt;BLOCO DE INSTRUÇÃO&lt;/h2&gt;
&lt;p&gt;Está aula é uma continuação da &lt;a class="reference external" href="http://excript.com/python/bloco-de-instrucao-python.html"&gt;aula anterior&lt;/a&gt;, portanto, não há teoria disponível.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;p&gt;No bloco de código a seguir …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula vamos desenvolver um exemplo utilizando Blocos de Instrução e trabalhando com o Escopo de Nomes para que possamos melhor entender ambos conceitos.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="bloco-de-instrucao"&gt;
&lt;h2&gt;BLOCO DE INSTRUÇÃO&lt;/h2&gt;
&lt;p&gt;Está aula é uma continuação da &lt;a class="reference external" href="http://excript.com/python/bloco-de-instrucao-python.html"&gt;aula anterior&lt;/a&gt;, portanto, não há teoria disponível.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;p&gt;No bloco de código a seguir, fazemos um simples programa que utiliza vários blocos de instrução, junto com a tomada de decisão.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="c1"&gt;#=====================================&lt;/span&gt;
&lt;span class="c1"&gt;#========== www.eXcript.com ==========&lt;/span&gt;
&lt;span class="c1"&gt;#=====================================&lt;/span&gt;

&lt;span class="n"&gt;num1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Digite um número: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num1&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;O valor é maior do que 10!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num1&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;=&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;O valor é maior do que 10, mas menor do que 15&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num1&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;=&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;O valor é maior do que 10, mas menor do que 50!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;O valor é maior do que 50!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;O número é menor do que 10 mas maior do que 5!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num1&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;O númer é igual a 7.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;O valor é menor do que 5.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="veja-tambem"&gt;
&lt;h2&gt;VEJA TAMBÉM&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/bloco-de-instrucao-python.html"&gt;Aula 26: Blocos de Instrução em Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/blocos-de-instrucoes-python.html"&gt;Aula 27: Continuação sobre os Blocos de instrução&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="links-externos"&gt;
&lt;h2&gt;LINKS EXTERNOS&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.python.org/3/tutorial/introduction.html#an-informal-introduction-to-python"&gt;Documentação oficial (en)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.python.org/dev/peps/pep-0008/#comments"&gt;PEP 8 -- Style Guide for Python Code (en)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="python"></category><category term="blog"></category></entry><entry><title>Blocos de Instrução em Python (Parte II)</title><link href="http://excript.com/python/blocos-de-instrucoes-python.html" rel="alternate"></link><published>2016-05-21T01:00:00-03:00</published><updated>2016-05-21T01:00:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-05-21:/python/blocos-de-instrucoes-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula vamos fazer um exemplo utilizando Blocos de Instrução e Escopo de Nomes&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="blocos"&gt;
&lt;h2&gt;BLOCOS&lt;/h2&gt;
&lt;p&gt;Esta aula &lt;a class="reference external" href="http://excript.com/python/bloco-de-instrucao-python.html"&gt;é a continuação da aula anterior&lt;/a&gt; e não possui um texto especifico.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="veja-tambem"&gt;
&lt;h2&gt;VEJA TAMBÉM&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/bloco-de-instrucao-python.html"&gt;Aula 26: Blocos de Instrução em Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/blocos-de-instrucao-python-na-pratica.html"&gt;Aula 28: Blocos de instrução na Prática&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="links-externos"&gt;
&lt;h2&gt;LINKS EXTERNOS&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.python.org/3/tutorial/introduction.html#an-informal-introduction-to-python"&gt;Documentação oficial (en …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula vamos fazer um exemplo utilizando Blocos de Instrução e Escopo de Nomes&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="blocos"&gt;
&lt;h2&gt;BLOCOS&lt;/h2&gt;
&lt;p&gt;Esta aula &lt;a class="reference external" href="http://excript.com/python/bloco-de-instrucao-python.html"&gt;é a continuação da aula anterior&lt;/a&gt; e não possui um texto especifico.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="veja-tambem"&gt;
&lt;h2&gt;VEJA TAMBÉM&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/bloco-de-instrucao-python.html"&gt;Aula 26: Blocos de Instrução em Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/blocos-de-instrucao-python-na-pratica.html"&gt;Aula 28: Blocos de instrução na Prática&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="links-externos"&gt;
&lt;h2&gt;LINKS EXTERNOS&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.python.org/3/tutorial/introduction.html#an-informal-introduction-to-python"&gt;Documentação oficial (en)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.python.org/dev/peps/pep-0008/#comments"&gt;PEP 8 -- Style Guide for Python Code (en)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="python"></category><category term="blog"></category></entry><entry><title>Operadores Relacionais na Prática em Python</title><link href="http://excript.com/python/operadores-relacionais-na-pratica-python.html" rel="alternate"></link><published>2016-05-17T03:30:00-03:00</published><updated>2016-05-17T03:30:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-05-17:/python/operadores-relacionais-na-pratica-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Esta aula é a continuação prática do Operadores Relacionais da Linguagem Python.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;!-- TODO: falar sobre os sinais utilizados dentro das expressões, como %d, %f, %i --&gt;
&lt;div class="section" id="praticando-o-estudo-dos-operadores-relacionais"&gt;
&lt;h2&gt;PRATICANDO O ESTUDO DOS OPERADORES RELACIONAIS&lt;/h2&gt;
&lt;p&gt;Esta aula é continuação do estudo sobre os operadores relacionais iniciado em aulas passadas. Agora, vamos realizar alguns exemplos e estuda-los para ue possamos ver a aplicabilidade desses operadores e como os …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Esta aula é a continuação prática do Operadores Relacionais da Linguagem Python.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;!-- TODO: falar sobre os sinais utilizados dentro das expressões, como %d, %f, %i --&gt;
&lt;div class="section" id="praticando-o-estudo-dos-operadores-relacionais"&gt;
&lt;h2&gt;PRATICANDO O ESTUDO DOS OPERADORES RELACIONAIS&lt;/h2&gt;
&lt;p&gt;Esta aula é continuação do estudo sobre os operadores relacionais iniciado em aulas passadas. Agora, vamos realizar alguns exemplos e estuda-los para ue possamos ver a aplicabilidade desses operadores e como os mesmo funcionam.&lt;/p&gt;
&lt;p&gt;Abaixo há o exemplo feito para a continuação do nosso estudo.&lt;/p&gt;
&lt;p&gt;Esta aula é a última sobre os Operadores Relacionais. Caso necessário, &lt;a class="reference external" href="{filename}../curso-de-python/0019_operador-relacional-python.rst"&gt;estude novamente a nossa aula sobre os Operadores Relacionais de maneira ampla e geral&lt;/a&gt; .&lt;/p&gt;
&lt;p&gt;Caso necessário, reveja também a &lt;a class="reference external" href="http://excript.com/python/operador-relacional-composto-python.html"&gt;nossa aula sobre os Operadores Relacionais Compostos&lt;/a&gt; .&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="n"&gt;numero1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Digite um número: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;numero1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numero1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;numero2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Digite um segundo número: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;numero2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numero2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numero1&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="n"&gt;numero2&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="c1"&gt;#operador de igualdade&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;O número &lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s2"&gt; é igual a &lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s2"&gt;. &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numero1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;numero2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numero1&lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="n"&gt;numero2&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="c1"&gt;#operador de diferença&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;O número &lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s2"&gt; é diferente de &lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s2"&gt; &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numero1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;numero2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numero1&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;numero2&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="c1"&gt;#operador menor que&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;O número &lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s2"&gt; é menor que o &lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s2"&gt; &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numero1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;numero2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numero1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;numero2&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="c1"&gt;#operdor de maior que&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;O número &lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s2"&gt; é maior que o &lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s2"&gt; &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numero1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;numero2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numero1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;=&lt;/span&gt;&lt;span class="n"&gt;numero2&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="c1"&gt;#maior ou igual que&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;O número &lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s2"&gt; é maior ou igual que &lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s2"&gt; &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numero1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;numero2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numero1&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;=&lt;/span&gt;&lt;span class="n"&gt;numero2&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="c1"&gt;#menor ou igual que&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;O número &lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s2"&gt; é menor ou igual que &lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s2"&gt; &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numero1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;numero2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="veja-tambem"&gt;
&lt;h2&gt;VEJA TAMBÉM&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/operador-aritmetico-em-python.html"&gt;Aula 16: Operadores Aritméticos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="{filename}../curso-de-python/0019_operador-relacional-python.rst"&gt;Aula 19: Operadores Relacionais&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/operador-relacional-composto-python.html"&gt;Aula 23: Operadores Relacionais Compostos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/operadores-relacionais-na-pratica-python.html"&gt;Aula 24: Operadores Relacionais na Prática&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/operadores-logicos-python.html"&gt;Aula 25: Operadores Lógicos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/operador-de-atribuicao-python.html"&gt;Aula 30: Operadores de Atribuição&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/atribuicao-multipla-python.html"&gt;Aula 31: Operador de Atribuição Múltipla&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/operadores-de-atribuicao-compostos-python.html"&gt;Aula 32: Operador de Atribuição Compostos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="python"></category><category term="operadores"></category><category term="operadores relacionais"></category><category term="operadores relacionais compostos"></category><category term="blog"></category></entry><entry><title>Operadores Relacionais Compostos do Python</title><link href="http://excript.com/python/operador-relacional-composto-python.html" rel="alternate"></link><published>2016-05-17T02:30:00-03:00</published><updated>2016-05-17T02:30:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-05-17:/python/operador-relacional-composto-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula continuaremos o estudo sobre os Operadores Relacionais, porém, estudaremos especificamente os operadores relacionais compostos. Essa aula pode ser considerada a parte prática da aula anteriormente estudada sobre os Operadores Relacionais da linguagem Python.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="revisao-dos-operadores-relacionais"&gt;
&lt;h2&gt;REVISÃO DOS OPERADORES RELACIONAIS&lt;/h2&gt;
&lt;p&gt;Em aulas anteriores estudamos os operadores relacionais simples, isto é, os …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula continuaremos o estudo sobre os Operadores Relacionais, porém, estudaremos especificamente os operadores relacionais compostos. Essa aula pode ser considerada a parte prática da aula anteriormente estudada sobre os Operadores Relacionais da linguagem Python.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="revisao-dos-operadores-relacionais"&gt;
&lt;h2&gt;REVISÃO DOS OPERADORES RELACIONAIS&lt;/h2&gt;
&lt;p&gt;Em aulas anteriores estudamos os operadores relacionais simples, isto é, os operadores relacionais que fazem um única comparação e são representados por um único simbolo. Aprendemos que existem 3 operadores, conforme a tabela a seguir demonstra.&lt;/p&gt;
&lt;p&gt;Abaixo temos a &lt;a class="reference external" href="{filename}../curso-de-python/0019_operador-relacional-python.rst"&gt;Tabela dos Operadores Relacionais Simples estudados em aulas anteriores&lt;/a&gt; .&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="67%" /&gt;
&lt;col width="33%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;Descrição&lt;/td&gt;
&lt;td&gt;Operador&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Maior que&lt;/td&gt;
&lt;td&gt;&lt;cite&gt;&amp;gt;&lt;/cite&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Menor que&lt;/td&gt;
&lt;td&gt;&lt;cite&gt;&amp;lt;&lt;/cite&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Igual a&lt;/td&gt;
&lt;td&gt;&lt;cite&gt;==&lt;/cite&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Como podemos ver, há 3 operadores relacionais fundamentais. O operador que verifica se um operando &lt;strong&gt;é maior&lt;/strong&gt; do que outro. O operador relacionais que verificar se um operando &lt;strong&gt;é menor&lt;/strong&gt; do que o outro e por fim, o operador que verifica se ambos operandos &lt;strong&gt;são iguais&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Os operadores relacionais compostos são formados com a junção de 2 operadores relacionais simples e a função destes é simplificar as expressões.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="operadores-relacionais-compostos"&gt;
&lt;h2&gt;OPERADORES RELACIONAIS COMPOSTOS&lt;/h2&gt;
&lt;p&gt;A linguagem Python disponibiliza mais 2 operadores relacionais que verificam 2 relações entre os membros. É importante observar que essas relações podem ser obtidas com o uso de conectores lógicos, isto é, com a utilização dos conectores &lt;tt class="docutils literal"&gt;and&lt;/tt&gt; e &lt;tt class="docutils literal"&gt;or&lt;/tt&gt;.&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="67%" /&gt;
&lt;col width="33%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;Descrição&lt;/td&gt;
&lt;td&gt;Operador&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Maior ou igual a&lt;/td&gt;
&lt;td&gt;&lt;cite&gt;&amp;gt;=&lt;/cite&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Menor ou igual a&lt;/td&gt;
&lt;td&gt;&lt;cite&gt;&amp;lt;=&lt;/cite&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Com os &lt;strong&gt;Operadores Relacionais Compostos&lt;/strong&gt; podemos obter a relação se o operando a esquerda é maior ou igual do que o operando a direita, ou então, se o operando a esquerda, é menor ou igual do que o operando a direita.&lt;/p&gt;
&lt;p&gt;O código a seguir imprime no Console os valores lógicos de 2 expressões.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1 &amp;gt;= 1: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1 &amp;lt;= 1: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No trecho de código acima, estamos verificando se os membros a esquerda são maiores ou menores do que os membros a sua direita.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="c1"&gt;#=====================================&lt;/span&gt;
&lt;span class="c1"&gt;#========== www.eXcript.com ==========&lt;/span&gt;
&lt;span class="c1"&gt;#=====================================&lt;/span&gt;
&lt;span class="n"&gt;idade&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Informe a sua idade:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;idade&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;A sua idade não pode ser 0 ou menor do que 0!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;elif&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;idade&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;150&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;A sua idade não pode ser superior a 150 ano!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;elif&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;idade&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Você precita ter mais do que 18 anos!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="veja-tambem"&gt;
&lt;h2&gt;VEJA TAMBÉM&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/operador-aritmetico-em-python.html"&gt;Aula 16: Operadores Aritméticos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="{filename}../curso-de-python/0019_operador-relacional-python.rst"&gt;Aula 19: Operadores Relacionais&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/operador-relacional-composto-python.html"&gt;Aula 23: Operadores Relacionais Compostos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/operadores-relacionais-na-pratica-python.html"&gt;Aula 24: Operadores Relacionais na Prática&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/operadores-logicos-python.html"&gt;Aula 25: Operadores Lógicos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/operador-de-atribuicao-python.html"&gt;Aula 30: Operadores de Atribuição&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/atribuicao-multipla-python.html"&gt;Aula 31: Operador de Atribuição Múltipla&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/operadores-de-atribuicao-compostos-python.html"&gt;Aula 32: Operador de Atribuição Compostos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="links-externos"&gt;
&lt;h2&gt;LINKS EXTERNOS&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.python.org/3/library/operator.html#mapping-operators-to-functions"&gt;Lista de Operadores do Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="python"></category><category term="operador"></category><category term="operadores relacionais"></category><category term="operadores relacionais compostos"></category><category term="blog"></category></entry><entry><title>Depurando código Python</title><link href="http://excript.com/python/depuracao-pycharm-python.html" rel="alternate"></link><published>2016-05-17T01:30:00-03:00</published><updated>2016-05-17T01:30:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-05-17:/python/depuracao-pycharm-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos a definição de depuração e como podemos depurar códigos Python com o uso da IDE PyCharm&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="depuracao"&gt;
&lt;h2&gt;DEPURAÇÃO&lt;/h2&gt;
&lt;img alt="IDE PyCharm em modo de depuração com um breakpoint na primeira linha" src="../images/curso-de-python/depuracao-pycharm.png" /&gt;
&lt;p&gt;Depuração é uma técnica de programação em que é possível manipular a execução de cada linha e verificar os valores das variáveis (instâncias).&lt;/p&gt;
&lt;p&gt;Segundo o dicionário Aurélio, depurar significa: &lt;strong&gt;Procurar …&lt;/strong&gt;&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos a definição de depuração e como podemos depurar códigos Python com o uso da IDE PyCharm&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="depuracao"&gt;
&lt;h2&gt;DEPURAÇÃO&lt;/h2&gt;
&lt;img alt="IDE PyCharm em modo de depuração com um breakpoint na primeira linha" src="../images/curso-de-python/depuracao-pycharm.png" /&gt;
&lt;p&gt;Depuração é uma técnica de programação em que é possível manipular a execução de cada linha e verificar os valores das variáveis (instâncias).&lt;/p&gt;
&lt;p&gt;Segundo o dicionário Aurélio, depurar significa: &lt;strong&gt;Procurar, detectar e corrigir erros em programa&lt;/strong&gt; .&lt;/p&gt;
&lt;p&gt;Hoje em dia, ferramenta para depuração de código estão presente nas IDE modernas e nos proporcionam uma forma de executar nossa aplicação passo-a-passo e ir verificando o valor das variáveis e o que nosso programa vai executando, ou seja, quais funções vão sendo invocadas.&lt;/p&gt;
&lt;p&gt;É correto dizer que depurar um código significa a execução de cada linha vagarosamente, onde o programador é quem diz quando que determinada instrução deve ser executada. E também, a cada linha executada, é possível verificar o valor das variáveis que estão no escopo local e global&lt;/p&gt;
&lt;p&gt;Algumas IDEs permitem a alteração do valor das variáveis e a executação de código paralelamente. Desta forma, conseguimos simular situações onde talvez, não fosse possível através do nosso programa.&lt;/p&gt;
&lt;p&gt;A depuração é comumente utilizada para na detecção de erros e para entender o estado do programa e de suas variáveis num determinado instânte, ou numa determinada função.&lt;/p&gt;
&lt;p&gt;Podemos dizer que é possível depurar qualquer código de qualquer linguagem, até porque, esse é um recurso atualmente considerado elementar para a correta construção de software. Algumas vezes a depuração é um recurso encontrado em determinada IDE, outras vezes, a capacidade de depuração acaba sendo uma ferramenta disponibilizada pela linguagem, isto é, a Máquina Virtual ou o Compilador da linguagem é quem disponibilizam esses recursos e capacidades.&lt;/p&gt;
&lt;p&gt;Neste Curso de Python, estamos utilizando a IDE &lt;a class="reference external" href="https://www.jetbrains.com/pycharm/download/"&gt;PyCharm&lt;/a&gt; e a mesma oferece-nos grande capacidade para depuração e análise interna em tempo de execução.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="o-recurso-de-depuracao"&gt;
&lt;h2&gt;O RECURSO DE DEPURAÇÃO&lt;/h2&gt;
&lt;p&gt;A depuração é um recurso disponibilizado pelo compilador ou interpretador da linguagem. Portanto, nativamente, conseguimos depurar o código através da linha de comando, semelhate a forma como executamos o código.&lt;/p&gt;
&lt;p&gt;As IDE ao implementarem os recursos de depuração estão de fato negociando com o compilador ou interpretador o local em que deve haver interrupções e todos os demais recursos.&lt;/p&gt;
&lt;p&gt;É importante sabermos que não são as IDE que implementam a capacidade de depurar o código, elas apenas dialogam com o compilador ou interpretador e fornecem uma forma gráfica para depuração.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="primordios-da-depuracao"&gt;
&lt;h2&gt;PRIMÓRDIOS DA DEPURAÇÃO&lt;/h2&gt;
&lt;p&gt;Todas as vezes em que utilizamos a função &lt;code&gt;print()&lt;/code&gt; para enviar à saída padrão o valor de variáveis estamos depurando nosso código de forma primitiva. Ou seja, estamos inspecionando o valor das variáveis e o estado do programa utilizando a função print.&lt;/p&gt;
&lt;p&gt;É comum que novas linguagens de programação não tragam a funcionalidade de depurar o código implementado, portanto, o programar é obrigado a trabalhar enviando para a saída padrão o valor dos membros que ele deseja conhecer os valores.&lt;/p&gt;
&lt;p&gt;Linguagens como JavaScript, PHP e ASP são exemplos notáveis de linguagens que foram lançadas no mercado sem que os desenvolvedores disponibilizassem uma forma de depurar o código de forma eficiente.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="performance"&gt;
&lt;h2&gt;PERFORMANCE&lt;/h2&gt;
&lt;p&gt;A execução em modo de depuração só deve ser executada quando necessário, até porque, a perfomance é muito inferior ao que temos com a execução normal. Por isso, só execute um código em forma de depuaração quando houver um razão para isso.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="o-que-significa-cursor-de-execucao"&gt;
&lt;h2&gt;O QUE SIGNIFICA &lt;cite&gt;CURSOR DE EXECUÇÃO&lt;/cite&gt;?&lt;/h2&gt;
&lt;p&gt;Cursor de execução é o termo que utilizamos para nos referirmos a linha de código em que estamos, ou melhor, na linha onde estamos.&lt;/p&gt;
&lt;p&gt;Na imagem a seguir podemos ver a execução de um simples código. Observe na linha 9, em azul, o cursor de execução e na linha 11 podemos ver o uso de um breakpoint. É importante lembrar que o sistema de cor pode ser personalizado, portanto, não existe um padrão e não podemos nos referir ao cursor ou ao breakpoint como sendo uma linha de uma determinada cor.&lt;/p&gt;
&lt;img alt="IDE PyCharm com breakpoint e cursor de execução" src="../images/curso-de-python/pycharm-cursor-breakpoint.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="o-que-significa-breakpoint"&gt;
&lt;h2&gt;O QUE SIGNIFICA &lt;tt class="docutils literal"&gt;breakpoint&lt;/tt&gt;?&lt;/h2&gt;
&lt;p&gt;A palavra &lt;tt class="docutils literal"&gt;breakpoint&lt;/tt&gt;, significa, na depuração de programas, o número da linha em que a execução do código será interrompido para o início da depuração.&lt;/p&gt;
&lt;p&gt;Esse é um recurso permite interrompermos a execução do nosso programa num determinado ponto. Assim, podemos marcar em qual local do programa desejamos iniciar a depuração e quando o cursor de execução chegar na linha demarcada, a execução será interrompida e a IDE trará o código em que ocorreu a interrupção.&lt;/p&gt;
&lt;p&gt;Na imagem acima, é possível ver um breakpoint na primeira linha da IDE PyCharm. Normalmente, os &lt;tt class="docutils literal"&gt;breakpoints&lt;/tt&gt; são representados por uma bola vermelha no canto esquerdo [margem] dos editores de código.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="o-modo-de-depuracao"&gt;
&lt;h2&gt;O MODO DE DEPURAÇÃO&lt;/h2&gt;
&lt;p&gt;Ao executarmos um código em modo de depuração, teremos uma tela semelhante a que temos na imagem a seguir. Como podemos ver, os menus estão habilitados, até porque, estamos executando em modo de depuração.&lt;/p&gt;
&lt;img alt="IDE PyCharm em modo de depuração com um breakpoint e menu com as opções" src="../images/curso-de-python/pycharm-in-debug.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="opcoes-de-execucao"&gt;
&lt;h2&gt;OPÇÕES DE EXECUÇÃO&lt;/h2&gt;
&lt;p&gt;Normalmente desejaremos somente executar a instrução em que o cursor está posicionado, outras vezes, desejaremos depurar a função que será executada e noutras vezes, desejaremos finalizar a depuração da função e voltar ao fluxo anterior.&lt;/p&gt;
&lt;p&gt;Pra todas essas situações há teclas de atalho que facilitam o trabalho e a verificação dos valores.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Shift+F10 (Run): executa o script&lt;/li&gt;
&lt;li&gt;Shift+F9 (Debug): executa em modo de depuração (debug)&lt;/li&gt;
&lt;li&gt;Ctrl+F5 (Rerun): executa da mesma forma que a anterior&lt;/li&gt;
&lt;li&gt;Shift+Alt+F10 (Choose configuration and ru): exibe o menu que contém as configurações de execução e roda o script&lt;/li&gt;
&lt;li&gt;Shift+Alt+F9 (Choose configuration and debug): exibe o menu que contém as configurações de execução e roda o script em modo de depuração&lt;/li&gt;
&lt;li&gt;F8 (Step Over): executa a linha onde o cursor está&lt;/li&gt;
&lt;li&gt;F7 (Step Into): entra na função e posiciona o cursor na primeira linha&lt;/li&gt;
&lt;li&gt;Shift+F8(Step Out): termina a depuração da função e o cursor retorna ao local anterior&lt;/li&gt;
&lt;li&gt;Shift+Alt+F8 (Force Step Over): o cursor não entra no código da função mesmo que haja um breakpoint&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="a-depuracao-como-estudo"&gt;
&lt;h2&gt;A DEPURAÇÃO COMO ESTUDO&lt;/h2&gt;
&lt;p&gt;Neste artigo tratamos a depuração principalmente como uma ferramenta para o desenvolvimento e correção de problemas em nossos códigos, o que de fato está correto, porém, utilizar somente para isso é não aproveitar ao máximo o poder da ferramenta.&lt;/p&gt;
&lt;p&gt;A depuração deve ser utilizada durante toda a fase de estudo e, posteriormente, quando desejarmos entender como o interpretador do Python está lidando com determinada situação.&lt;/p&gt;
&lt;p&gt;Em vista de que temos a disposição todas as variáveis e que podemos criar e/ou invocar funções, devemos ver a depuração como um recurso que vai muito além de simplesmente procurar por erros e sim, como uma ferramenta que devemos utilizar durante todo o estudo do desenvolvimento de software.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="links-externos"&gt;
&lt;h2&gt;LINKS EXTERNOS&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.jetbrains.com/help/pycharm/2016.1/running-and-debugging.html"&gt;Documentação oficial do PyCharm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="python"></category><category term="depuração"></category><category term="pycharm"></category><category term="blog"></category></entry><entry><title>Estrutura if e else em Python</title><link href="http://excript.com/python/if-else-python.html" rel="alternate"></link><published>2016-05-16T23:30:00-03:00</published><updated>2016-05-16T23:30:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-05-16:/python/if-else-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos a instrução "if" junto com a instrução "else" que é uma ferramenta para definirmos o que deve acontecer nas situações em que a expressão avaliada não for verdadeira.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="introducao-a-estrutura-else"&gt;
&lt;h2&gt;INTRODUÇÃO À ESTRUTURA &lt;tt class="docutils literal"&gt;else&lt;/tt&gt;&lt;/h2&gt;
&lt;p&gt;A &lt;strong&gt;Tomada de Decisão&lt;/strong&gt; é composta por uma expressão a ser avaliada e o que …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos a instrução "if" junto com a instrução "else" que é uma ferramenta para definirmos o que deve acontecer nas situações em que a expressão avaliada não for verdadeira.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="introducao-a-estrutura-else"&gt;
&lt;h2&gt;INTRODUÇÃO À ESTRUTURA &lt;tt class="docutils literal"&gt;else&lt;/tt&gt;&lt;/h2&gt;
&lt;p&gt;A &lt;strong&gt;Tomada de Decisão&lt;/strong&gt; é composta por uma expressão a ser avaliada e o que deve acontecer caso a expressão seja verdadeira ou então, caso a expressão seja falsa. Por padrão, o bloco de instrução que estiver abaixo da instrução &lt;tt class="docutils literal"&gt;if&lt;/tt&gt; será executado quando a expressão contida na estrutura &lt;tt class="docutils literal"&gt;if&lt;/tt&gt; for verdadeira.&lt;/p&gt;
&lt;p&gt;A estrutura &lt;tt class="docutils literal"&gt;else&lt;/tt&gt; por sua vez, é uma instrução complementar da estrutura &lt;tt class="docutils literal"&gt;if&lt;/tt&gt;. A palavra &lt;tt class="docutils literal"&gt;else&lt;/tt&gt; do Inglês, significa &lt;tt class="docutils literal"&gt;SENÃO&lt;/tt&gt; e com esta, definiremos o bloco de instrução a ser executado todas as vezes que a expressão definida for igual a falso.&lt;/p&gt;
&lt;p&gt;O bloco que estiver na linha seguinte a instrução &lt;tt class="docutils literal"&gt;if&lt;/tt&gt; será o bloco de instrução a ser executados todas as vezes que a condição for verdadeira, enquanto que o bloco que estiver na linha seguinte a instrução &lt;tt class="docutils literal"&gt;else&lt;/tt&gt; será executado todas as vezes que a expressão for falsa.&lt;/p&gt;
&lt;img alt="Diagrama contendo 3 blocos de código onde foi destacado o uso do if/else encadeado" src="../images/curso-de-python/indentacao.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="analise-grafica"&gt;
&lt;h2&gt;ANÁLISE GRÁFICA&lt;/h2&gt;
&lt;p&gt;Na imagem a seguir temos a representação gráfica da tomada de decisão em que é definido o bloco de instrução que é executado caso o valor da expressão seja verdadeiro, ou então, o bloco de instrução que será executado caso o valor da expressão seja igual a falso.&lt;/p&gt;
&lt;p&gt;O gráfico a seguir é bastante semelhante ao estudado na aula anterior, no caso, quando estudamos a tomada de decisão a utilização do bloco de instrução a ser executado caso o valor da expressão seja igual a falso.&lt;/p&gt;
&lt;img alt="Tomada de decisão em Python utilizando a instrução else" src="../images/curso-de-python/tomada-de-decisao-else.png" /&gt;
&lt;p&gt;Na imagem acima assumimos que a execução do programa ocorre da esquerda para a direita. Assim, temos no extremo esquerdo um círculo preto que representa o início, ou então, as instruções que foram executadas anteriormente.&lt;/p&gt;
&lt;p&gt;Feito isso, chegamos na tomada de decisão, que é representado por um losango. O losango representa as 2 situações possíveis na avaliação de quaisquer expressão, isto é, o resultado por ser verdadeiro ou falso.&lt;/p&gt;
&lt;p&gt;Caso seja verdadeiro, a execução está demonstrada na parte superior, onde temos a execução de um bloco de instrução e na sequência, o programa continua sua execução normalmente.&lt;/p&gt;
&lt;p&gt;Na parte inferior, temos a execução do bloco de instrução para caso o valor da expressão seja falso. Como pode ser visto, um outro bloco de instrução é executado a a execução do nosso programa continua normalmente.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="a-estrutura-else"&gt;
&lt;h2&gt;A ESTRUTURA &lt;tt class="docutils literal"&gt;else&lt;/tt&gt;&lt;/h2&gt;
&lt;p&gt;A instrução &lt;tt class="docutils literal"&gt;else&lt;/tt&gt; é uma instrução dependente, isto é, uma instrução que não pode ser utilizada sozinha. A seguir, temos um exemplo, utilizando a instrução &lt;tt class="docutils literal"&gt;if&lt;/tt&gt; junto a instrução &lt;tt class="docutils literal"&gt;else&lt;/tt&gt;, porém, com as instruções traduzidas para o Português.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="n"&gt;SE&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;verdadeiro&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;faça_isso&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;SENÃO&lt;/span&gt;
    &lt;span class="n"&gt;faça_aquilo&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima, estamos verificando uma condição e, caso o resultado seja verdadeiro, o bloco de instrução na linha seguinte a instrução &lt;tt class="docutils literal"&gt;SE&lt;/tt&gt; é executado. Senão, caso o valor da expressão definida no cabeçalho da instrução &lt;tt class="docutils literal"&gt;if&lt;/tt&gt; não seja verdadeiro, o bloco de instrução definido na linha seguinte a instrução &lt;tt class="docutils literal"&gt;SENÃO&lt;/tt&gt; é o que executado.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="um-exemplo-pratico"&gt;
&lt;h2&gt;UM EXEMPLO PRÁTICO&lt;/h2&gt;
&lt;p&gt;Agora, vamos fazer um exemplo para estudarmos a utilização da estrutura de decisão &lt;tt class="docutils literal"&gt;if&lt;/tt&gt; junto a instrução &lt;tt class="docutils literal"&gt;else&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;O exemplo que faremos pedirá para o usuário digitar um número par. Em em seguida, com uso da instrução &lt;tt class="docutils literal"&gt;if&lt;/tt&gt;, verificaremos se o número digitado realmente é ou não é par. Caso seja, imprimiremos na tela a frase &amp;quot;O número digitado é par.&amp;quot; do contrário, imprimiremos, &amp;quot;O número digitado é ímpar.&amp;quot;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Digite um número par: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;O número digitado é par.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;O número digitado é ímpar.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="n"&gt;acao&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Digite &amp;#39;1&amp;#39; para sim e digite &amp;#39;2&amp;#39; para não: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;acao&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Você disse que sim!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;acao&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Você disse que não!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;O número digitado não é &amp;#39;1&amp;#39; e nem &amp;#39;2&amp;#39;!!!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="links-externos"&gt;
&lt;h2&gt;LINKS EXTERNOS&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.python.org/3/tutorial/controlflow.html"&gt;Control Flow (en)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.tutorialspoint.com/python/python_if_else.htm"&gt;IF...ELIF...ELSE Statements (en)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="veja-tambem"&gt;
&lt;h2&gt;VEJA TAMBÉM&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/tomada-decisao-python.html"&gt;Aula 20: Tomada de Decisão em Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="python"></category><category term="if"></category><category term="tomada de decisão"></category><category term="se"></category><category term="senão"></category><category term="blog"></category></entry><entry><title>Tomada de Decisão em Python</title><link href="http://excript.com/python/tomada-decisao-python.html" rel="alternate"></link><published>2016-05-16T23:00:00-03:00</published><updated>2016-05-16T23:00:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-05-16:/python/tomada-decisao-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos a Tomada de Decisão, isto é, a execução de uma bloco de instrução conforme o resultado de uma expressão lógica.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="introducao-para-a-tomada-de-decisao"&gt;
&lt;h2&gt;INTRODUÇÃO PARA A TOMADA DE DECISÃO&lt;/h2&gt;
&lt;p&gt;A &lt;strong&gt;Tomada de Decisão&lt;/strong&gt; também chamado de &lt;strong&gt;Desvio Condicional&lt;/strong&gt; ou então, a verificação de expressões é, uma prática comum no desenvolvimento …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos a Tomada de Decisão, isto é, a execução de uma bloco de instrução conforme o resultado de uma expressão lógica.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="introducao-para-a-tomada-de-decisao"&gt;
&lt;h2&gt;INTRODUÇÃO PARA A TOMADA DE DECISÃO&lt;/h2&gt;
&lt;p&gt;A &lt;strong&gt;Tomada de Decisão&lt;/strong&gt; também chamado de &lt;strong&gt;Desvio Condicional&lt;/strong&gt; ou então, a verificação de expressões é, uma prática comum no desenvolvimento de software. Com essa estrutura somos capazes de verificar expressões e assim, decidir qual &lt;strong&gt;Bloco de Instrução&lt;/strong&gt; deve ser executado.&lt;/p&gt;
&lt;p&gt;As expressões definidas no cabeçalho da estrutura &lt;tt class="docutils literal"&gt;if&lt;/tt&gt; utilizam os operadores relacionais na construção das expressões, seja de maneira implicita ou explicita.&lt;/p&gt;
&lt;p&gt;É importante observar que outras estruturas da linguagem trabalham de maneira similar ao que temos com as &lt;strong&gt;Tomadas de Decisão&lt;/strong&gt;. Ou seja, há algumas estruturas em que uma situação será verificada e, em seguida, mediante ao valor retornado na avaliação, será definido o bloco de código a ser executado. O entendimento da tomada de decisão é necessário para o bom estudo de toda a linguagem, até porque, essa é, a estrutura mais importante na construção de softwares.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="grafico-da-estrutura"&gt;
&lt;h2&gt;GRÁFICO DA ESTRUTURA&lt;/h2&gt;
&lt;p&gt;Na imagem a seguir, temos uma representação do caso de uso da estrutura de tomada de decisão.&lt;/p&gt;
&lt;img alt="Tomada de decisão em Python" src="../images/curso-de-python/tomada-de-decisao.png" /&gt;
&lt;p&gt;Na imagem acima, estamos, inicialmente, supondo que a execução do programação ocorra no sentido da esquerda para a direita. Assim, representamos com um círculo preto o início da execução.&lt;/p&gt;
&lt;p&gt;Feito isso, chegamos na tomada de decisão propriamente dita. Nesta, será verificado a expressão contida no cabeçalho da estrutura &lt;tt class="docutils literal"&gt;if&lt;/tt&gt; e, caso o valor avaliado seja verdadeiro, o bloco de instrução é executado e na sequência o programa continua sua execução normalmente.&lt;/p&gt;
&lt;p&gt;Do contrário, ou seja, caso o valor avaliado no cabeçalho da estrutura if for false, nada ocorrerá, como está representado na imagem por uma linha que liga a estrutura &lt;tt class="docutils literal"&gt;if&lt;/tt&gt; com a parte em que ocorre a continuação da execução normal das instruções definidas.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="a-instrucao-if"&gt;
&lt;h2&gt;A INSTRUÇÃO &lt;tt class="docutils literal"&gt;if&lt;/tt&gt;&lt;/h2&gt;
&lt;p&gt;A palavra &lt;tt class="docutils literal"&gt;if&lt;/tt&gt;, do Inglês, significa &lt;tt class="docutils literal"&gt;SE&lt;/tt&gt;. Com a estrutura &lt;tt class="docutils literal"&gt;if&lt;/tt&gt; podemos determinar o que deve acontecer mediante o valor lógico retornado, isto é, &lt;strong&gt;SE&lt;/strong&gt; for verdadeiro [&lt;strong&gt;True&lt;/strong&gt;], faça isso, &lt;strong&gt;SE&lt;/strong&gt; for falso [&lt;strong&gt;False&lt;/strong&gt;], faça aquilo.&lt;/p&gt;
&lt;p&gt;Analisemos o exemplo a seguir em que utilizamos o formato da instrução &lt;tt class="docutils literal"&gt;if&lt;/tt&gt;, porém, utilizando a Lingua Portuguesa:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="n"&gt;SE&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;verdadeiro&lt;/span&gt; &lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;faça_isso&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;faça_e_mais_isso&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;faça_aquilo&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima, estamos verificando se a expressão entre parêntesis é verdadeira. Em seguida, colocamos o sinal de 2 pontos, dizendo para o Python que ali finaliza o cabeçalho da estrutura &lt;tt class="docutils literal"&gt;if&lt;/tt&gt;. A linha seguinte é o início do &lt;strong&gt;Bloco de Instrução&lt;/strong&gt; e será executado nas situações em que a expressão for verdadeira. Todo bloco de instrução que está subordinado a uma estrutura, estará, obrigatoriamente, indentado um nível a frente da estrutura subordinada.&lt;/p&gt;
&lt;p&gt;Nesse primeiro momento, temos que entender que se a expressão definida no cabeçalho da estrutura &lt;tt class="docutils literal"&gt;if&lt;/tt&gt; [entre parêntesis], for verdadeira, tudo que estiver nas linhas seguintes e com a indentação avançada será executado. A instrução &lt;tt class="docutils literal"&gt;faça_isso()&lt;/tt&gt; é a primeira instrução do &lt;strong&gt;bloco de instrução&lt;/strong&gt; que é executado todas as vezes que a expressão definida e avaliada no cabeçalho da estrutura &lt;tt class="docutils literal"&gt;if&lt;/tt&gt; é verdadeira.&lt;/p&gt;
&lt;p&gt;Caso a expressão contida entre parêntesis não seja verdadeiro, na situação acima, nada acontecerá e a execução das linhas seguintes a &lt;tt class="docutils literal"&gt;tomada de decisão&lt;/tt&gt; e que estão com a indentação avançada, não será executado. Entenda por &lt;strong&gt;linhas seguintes&lt;/strong&gt; todas as instruções com o nível de indentação igual ao da instrução &lt;tt class="docutils literal"&gt;if&lt;/tt&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="um-caso-real-utilizando-a-estrutura-if"&gt;
&lt;h2&gt;UM CASO REAL UTILIZANDO A ESTRUTURA &lt;tt class="docutils literal"&gt;if&lt;/tt&gt;&lt;/h2&gt;
&lt;p&gt;Agora, vamos fazer uma exemplo onde verificaremos se o número digitado por um usuário é maior do que zero. Caso seja, o bloco de instrução [verdadeiro] a seguir da estrutura será executado.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Digite um número: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;O número digitado é maior do que &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No exemplo acima, utilizamos a função &lt;tt class="docutils literal"&gt;input()&lt;/tt&gt; para imprimirmos uma mensagem na tela e em seguida colocar o Console no modo de edição, isto é, colocar o Console de tal forma que seja  possível ao nosso usuário digitar e pressionar Enter.&lt;/p&gt;
&lt;p&gt;Após o usuário digitar um valor e pressionar a tecla Enter, o valor digitado é passado para a variável &lt;tt class="docutils literal"&gt;num&lt;/tt&gt;. Em seguida, o valor contido na variável &lt;tt class="docutils literal"&gt;num&lt;/tt&gt; é comparada ao número 0. Caso o valor de &lt;tt class="docutils literal"&gt;num&lt;/tt&gt; seja maior do que zero, o bloco de instrução verdadeiro será executado, do contrário, nada acontecerá.&lt;/p&gt;
&lt;p&gt;É importante observar que caso nada seja digitado, ou então, não seja digitado um número válido, uma exceção é levantada e a execução do programa é interrompida.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="veja-tambem"&gt;
&lt;h2&gt;VEJA TAMBÉM&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/if-else-python.html"&gt;Aula 21: Estrutura if e else em Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="python"></category><category term="if"></category><category term="tomada de decisão"></category><category term="se"></category><category term="blog"></category></entry><entry><title>Entrada de Dados em Python</title><link href="http://excript.com/python/entrada-dados-python.html" rel="alternate"></link><published>2016-05-07T23:45:00-03:00</published><updated>2016-05-07T23:45:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-05-07:/python/entrada-dados-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos a entrada de dados numa aplicação e como o Python trata nativamente.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="entrada-de-dados"&gt;
&lt;h2&gt;ENTRADA DE DADOS&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Entrada de Dados&lt;/strong&gt; refere-se a entrada de dados do mundo externo para o meio digital. É dessa forma que enviamos informações para dentro das nossas aplicações. A forma mais primitiva de enviar …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos a entrada de dados numa aplicação e como o Python trata nativamente.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="entrada-de-dados"&gt;
&lt;h2&gt;ENTRADA DE DADOS&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Entrada de Dados&lt;/strong&gt; refere-se a entrada de dados do mundo externo para o meio digital. É dessa forma que enviamos informações para dentro das nossas aplicações. A forma mais primitiva de enviar dados para uma aplicação é pelo &lt;tt class="docutils literal"&gt;Prompt de Comando&lt;/tt&gt;, isto é, pelo &lt;tt class="docutils literal"&gt;Console&lt;/tt&gt; propriamente dito.&lt;/p&gt;
&lt;img alt="Imagem do Console para a entrada de dados em programa Python" src="../images/curso-de-python/console-python.png" /&gt;
&lt;p&gt;Uma aplicação pode, a qualquer momento, pedir que o usuário informe uma determinada informação, para isto, basta invocar a função &lt;tt class="docutils literal"&gt;input()&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;A partir da versão 3 do Python, a função &lt;tt class="docutils literal"&gt;input()&lt;/tt&gt;, tem por objetivo de escrever a String passada como parâmetro e em seguida, ativar o modo de digitação, isto é, colocar o Console de uma determinada forma em que seja possível a digitação (entrada de dados). É importante observar que versões anteriores do Python funcionavam de maneira distinta, e também, que a função &lt;tt class="docutils literal"&gt;input()&lt;/tt&gt; nas versões 2x era utilizado para outro finalidade!&lt;/p&gt;
&lt;p&gt;A seguir, temos um exemplo onde imprimimos uma frase na tela e em seguida, é aberto para o usuário, a capacidade para digitação de letras e números.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Escreva entre aspas alguma informação a ser impressa no Console &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;O código acima, quando executado, irá imprimir o que está entre parêntesis no Console e em seguida, permitira ao usuário a digitação de qualquer tipo de dado alfanumérico. O conjunto de caracteres digitado pelo usuário, será retornado pela função &lt;tt class="docutils literal"&gt;input()&lt;/tt&gt;. É responsabilidade do programador armazenar esses caracteres numa variável, como fazemos no exemplo a seguir:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Digite um número:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No exemplo acima, será impresso a frase definida entre aspas e então, o console entrará num modo que permitirá o usuário digitar texto e números. Após o usuário digitar o que desejar e pressionar a tecla Enter, os dados digitados serão retornados pela função &lt;tt class="docutils literal"&gt;input()&lt;/tt&gt;. No exemplo acima, estamos atribuindo o retorno da função para a variável num, logo, a mesma receberá aquilo que o usuário digitou no Console antes de pressionar a tecla Enter.&lt;/p&gt;
&lt;p&gt;Por fim, imprimimos na tela os caracteres digitados pelo nosso usuário através da função &lt;cite&gt;print()&lt;/cite&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="outras-formas-para-entrada-de-dados"&gt;
&lt;h2&gt;OUTRAS FORMAS PARA ENTRADA DE DADOS&lt;/h2&gt;
&lt;p&gt;Uma aplicação pode receber dados através das mais distintas formas, como por exemplo, pela leitura de um arquivo, através dos protocolos TCP/IP, pelo uso de janelas gráficas, como por exemplo, a biblioteca TkInter, que é a forma nativa para a construção de Janelas Gráficas no Python e etc.&lt;/p&gt;
&lt;p&gt;Há diversas maneiras para recebermos informações, porém, o princípio de como trataremos esses dados será, na maior parte da vezes o mesmo.&lt;/p&gt;

    &lt;div class="admonitionblock important data-line-21"&gt;
        &lt;table&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                &lt;td class="icon"&gt;
                    &lt;i class="fa icon-important" title="Importante!"&gt;&lt;/i&gt;
                &lt;/td&gt;
                &lt;td class="content"&gt;
                    &lt;div class="paragraph data-line-22"&gt;
                        &lt;p&gt;Certifique-se estar utilizando a versão 3.x do Python, do contrário, a função input() terá funcionamento anomalo e a sua aplicação não será executada da maneira correta! Por isso lembre-se: se você estiver tendo problemas, averigue a versão do Python instalada em seu computador!&lt;/p&gt;
                    &lt;/div&gt;
                &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;p&gt;A seguir, temos o exemplo feito na vídeo aulas do Curso de Python da eXcript:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;


&lt;span class="n"&gt;login&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Login:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;senha&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Senha:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;O usuário informado foi: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;, e a senha digitada foi: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;login&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;senha&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="python"></category><category term="entrada padrão"></category><category term="entrada de dados"></category><category term="input"></category><category term="blog"></category></entry><entry><title>Potenciação e Radiciação em Python</title><link href="http://excript.com/python/potenciacao-radiciacao-python.html" rel="alternate"></link><published>2016-05-07T03:20:00-03:00</published><updated>2016-05-07T03:20:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-05-07:/python/potenciacao-radiciacao-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula aprenderemos a trabalhar com o operador dedicado a obtenção da potenciação, e, que nos permite, através das propriedades matemáticas, a obtenção da radiciação.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="introducao-a-potenciacao-e-radiciacao"&gt;
&lt;h2&gt;INTRODUÇÃO À POTENCIAÇÃO E RADICIAÇÃO&lt;/h2&gt;
&lt;p&gt;Potenciação é a operação matemática que eleva um número a uma determinada potência. A linguagem Python disponibiliza um operador para …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula aprenderemos a trabalhar com o operador dedicado a obtenção da potenciação, e, que nos permite, através das propriedades matemáticas, a obtenção da radiciação.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="introducao-a-potenciacao-e-radiciacao"&gt;
&lt;h2&gt;INTRODUÇÃO À POTENCIAÇÃO E RADICIAÇÃO&lt;/h2&gt;
&lt;p&gt;Potenciação é a operação matemática que eleva um número a uma determinada potência. A linguagem Python disponibiliza um operador para obtermos a potência de qualquer número. Logo, através das propriedades matemáticas, podemos utilizar a potenciação para a obtenção da radiciação.&lt;/p&gt;
&lt;p&gt;É importante observar que a potenciação poderia ser obtida com o uso de uma função, porém, tamanha é sua utilidade que foi definido um operador especializado.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="potenciacao"&gt;
&lt;h2&gt;POTENCIAÇÃO&lt;/h2&gt;
&lt;p&gt;A linguagem tem definido que a utilização de 2 asteriscos seguidos &lt;cite&gt;**&lt;/cite&gt; significa que o número a esquerda do operador será elevado ao número a direita do operador, por exemplo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;número&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;direita&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="n"&gt;número&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;esquerda&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;O código a seguir demonstra o uso da exponenciação em Python:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A operação acima está calculado o valor de 2 elevado a quita potência. Feito isso, o valor retornado é passado como parâmetro para a função &lt;cite&gt;print()&lt;/cite&gt; que imprime o resultado no Console.&lt;/p&gt;
&lt;p&gt;O operador de potenciação em Python é um operador binário, isto é, temos que definir 2 valores para a sua utilização. A esquerda definimos o número a ser elevado, e a direita do operador, o potência desejada.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="radiciacao"&gt;
&lt;h2&gt;RADICIAÇÃO&lt;/h2&gt;
&lt;p&gt;A radiciação, matematicamente falando, é o inverso da potenciação. Podemos obter a radiciação utilizando as propriedades matemáticas, até porque, todo número elevado ao seu inverso é a sua raiz, isto é, basta elevarmos &lt;cite&gt;N&lt;/cite&gt; a (1/2) que iremos obter a raiz quadrada de &lt;cite&gt;N&lt;/cite&gt;.&lt;/p&gt;
&lt;p&gt;No código a seguir, temos um exemplo da obtenção da raiz quadrada de 9.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima estamos realizando 3 operações com o operador de potenciação do Python &lt;cite&gt;**&lt;/cite&gt;.&lt;/p&gt;
&lt;p&gt;Na primeira operação, estamos elevando o número 9 a sua segunda potência, isto é, &lt;cite&gt;9 * 9&lt;/cite&gt;. Em seguida, elevamos o número 9 a sua inversa, isto é, &lt;cite&gt;1/2&lt;/cite&gt;. Por fim, na terceira operação, estamos fazendo a mesma coisa que fizemos na segunda operação, porém, utilizando a divisão de &lt;cite&gt;1&lt;/cite&gt; por &lt;cite&gt;2&lt;/cite&gt; diretamente.&lt;/p&gt;
&lt;p&gt;O operador de potenciação é mais um recursos especiais da linguagem Python. Sua utilização é bastante simples e possui uma notação semelhante a outros operadores que já estudamos, como por exemplo, &lt;a class="reference external" href="http://excript.com/python/modulo-da-divisao-python.html"&gt;o operador módulo.&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="python"></category><category term="operador"></category><category term="potenciação"></category><category term="radiciação"></category><category term="operador binário"></category><category term="blog"></category></entry><entry><title>Módulo da Divisão em Python</title><link href="http://excript.com/python/modulo-da-divisao-python.html" rel="alternate"></link><published>2016-05-07T03:10:00-03:00</published><updated>2016-05-07T03:10:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-05-07:/python/modulo-da-divisao-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos o módulo da divisão, ou seja, o operador que permite obter a parte restante de uma divisão.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="modulo-da-divisao-ou-operacao-modulo"&gt;
&lt;h2&gt;MÓDULO DA DIVISÃO OU OPERAÇÃO MÓDULO&lt;/h2&gt;
&lt;p&gt;O &lt;strong&gt;Módulo da Divisão&lt;/strong&gt;, ou então, &lt;strong&gt;Operação Módulo&lt;/strong&gt;, é o operador que extraí o resto da divisão. É possível obter o resto da divisão …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos o módulo da divisão, ou seja, o operador que permite obter a parte restante de uma divisão.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="modulo-da-divisao-ou-operacao-modulo"&gt;
&lt;h2&gt;MÓDULO DA DIVISÃO OU OPERAÇÃO MÓDULO&lt;/h2&gt;
&lt;p&gt;O &lt;strong&gt;Módulo da Divisão&lt;/strong&gt;, ou então, &lt;strong&gt;Operação Módulo&lt;/strong&gt;, é o operador que extraí o resto da divisão. É possível obter o resto da divisão de várias maneiras, porém, a linguagem Python, bem como, a maioria das linguagens de programação, disponibilizam um operador para este fim.&lt;/p&gt;
&lt;p&gt;O sinal de porcentagem &lt;cite&gt;%&lt;/cite&gt; é o operador módulo. Ainda que não faça muito sentido, esse pode ser considerado quase que um padrão entre as linguagens de programação.&lt;/p&gt;
&lt;p&gt;Ao lado esquerdo, devemos colocar o número a ser dividido, e ao lado direito, o divisor, por exemplo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;#obtém o módulo da divisão de 10 por 2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima, estamos dividindo o número 10 por 2 com uso do operador módulo. O valor retornado é passado como parâmetro para a função &lt;cite&gt;print()&lt;/cite&gt; que imprime o módulo da divisão no Console.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="numeros-pares"&gt;
&lt;h2&gt;NÚMEROS PARES&lt;/h2&gt;
&lt;p&gt;Podemos saber se um número é par com o uso do operador módulo, para isto, basta verificarmos se a divisão possui resto, ou melhor, se o valor retornado é diferente de zero, por exemplo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Digite um número: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Número par.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Número ímpar&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima, pedimos para o usuário digitar um número. Em seguida, armazenamos esse número na variável de nome &lt;cite&gt;num&lt;/cite&gt;. Feito isso, obtemos o módulo de &lt;cite&gt;num&lt;/cite&gt; por 2. Caso o valor retornado seja diferente de 0, a divisão não é inteira, logo o número não é par. Em seguida, imprimimos no Console a frase dizendo se o valor digitado é ou não par.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="numeros-cheios-ou-numeros-redondos"&gt;
&lt;h2&gt;NÚMEROS CHEIOS OU NÚMEROS REDONDOS&lt;/h2&gt;
&lt;p&gt;Uma outra utilidade simples, porém, interessa, é verificar se um determinado número é redondo, por exemplo: 100, 200, 500 e etc. Para isso, dividirmos o mesmo por 100 e compararmos o módulo com 0, por exemplo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Digite um número: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Número redondo.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;O número não é redondo&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima, pedimos para o usuário digitar um valor e em seguida, verificamos se o módulo do número digitado é igual a 0.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="consideracoes-finais"&gt;
&lt;h2&gt;CONSIDERAÇÕES FINAIS&lt;/h2&gt;
&lt;p&gt;Os exemplos estudados são bastante simples, porém, muitas serão as vezes em que precisaremos utilizar códigos semelhantes ao que acabamos de estudar. Uma situação é no cálculo do digito verificador do CPF.&lt;/p&gt;
&lt;p&gt;Por fim, temos que o operador módulo não é utilizado a todo momento, porém, quando necessário, observamos a importância de haver um operador propriamente dito para essa finalidade.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mf"&gt;3.1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;900&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;num1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Digite um número: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;num2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Digite outro número: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="n"&gt;divisao&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;num1&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;num2&lt;/span&gt;
&lt;span class="n"&gt;resto&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;num1&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;num2&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;divido por&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;é igual a: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;divisao&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;O resto da divisão entre&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;e&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; é igual a:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;resto&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="python"></category><category term="módulo"></category><category term="operação módulo"></category><category term="módulo da divisão"></category><category term="divisão"></category><category term="número par"></category><category term="número primo"></category><category term="blog"></category></entry><entry><title>Operadores Aritméticos do Python</title><link href="http://excript.com/python/operador-aritmetico-em-python.html" rel="alternate"></link><published>2016-05-07T02:50:00-03:00</published><updated>2016-05-07T02:50:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-05-07:/python/operador-aritmetico-em-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos os operadores aritméticos da linguagem Python, ou seja, os operadores que realizam as operações matemáticas elementares, com a soma, subtração, multiplicação, divisão, divisão inteira e módulo.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="introducao-as-operacoes-matematicas"&gt;
&lt;h2&gt;INTRODUÇÃO ÀS OPERAÇÕES MATEMÁTICAS&lt;/h2&gt;
&lt;p&gt;O Python além de ser uma excelente linguagem para a construção de aplicações de forma geral, também …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos os operadores aritméticos da linguagem Python, ou seja, os operadores que realizam as operações matemáticas elementares, com a soma, subtração, multiplicação, divisão, divisão inteira e módulo.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="introducao-as-operacoes-matematicas"&gt;
&lt;h2&gt;INTRODUÇÃO ÀS OPERAÇÕES MATEMÁTICAS&lt;/h2&gt;
&lt;p&gt;O Python além de ser uma excelente linguagem para a construção de aplicações de forma geral, também é, uma excelente linguagem para ser utilizada junto com a matemática, como por exemplo, na geração de relatórios, gráficos, estatísticas e etc.&lt;/p&gt;
&lt;p&gt;Atualmente, temos diversas bibliotecas matemáticas para serem utilizadas, e os recursos vão de simples análises e geração de gráficos a inteligência artificial, análise de sentimentos, estatísticas para compra e venda de ações, neurociência e muito, mas muitas outras áreas relacionadas a pesquisa e análise de informações.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="operadores-matematicos"&gt;
&lt;h2&gt;OPERADORES MATEMÁTICOS&lt;/h2&gt;
&lt;p&gt;O Python pode ser utilizado como uma calculadora matemática avançada. Praticamente, todos os operadores aritméticos funcionam da mesma forma como os conhecemos da matemática elementar. Por exemplo, para trabalharmos com as 4 principais funções matemáticas, a soma, subtração, multiplicação e divisão, temos os operadores conforme tabela a seguir.&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="63%" /&gt;
&lt;col width="37%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;Operação&lt;/td&gt;
&lt;td&gt;Operador&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;adição&lt;/td&gt;
&lt;td&gt;&lt;cite&gt;+&lt;/cite&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;subtração&lt;/td&gt;
&lt;td&gt;&lt;cite&gt;-&lt;/cite&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;multiplicação&lt;/td&gt;
&lt;td&gt;&lt;cite&gt;*&lt;/cite&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;divisão&lt;/td&gt;
&lt;td&gt;&lt;cite&gt;/&lt;/cite&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Tempos também, operadores para exponenciação, obtenção da parte inteira de uma divisão, extração do módulo da divisão, conforme pode ser visto na tabela a seguir:&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="63%" /&gt;
&lt;col width="37%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;Operação&lt;/td&gt;
&lt;td&gt;Operador&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;exponenciação&lt;/td&gt;
&lt;td&gt;&lt;cite&gt;**&lt;/cite&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;parte inteira&lt;/td&gt;
&lt;td&gt;&lt;cite&gt;//&lt;/cite&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;módulo&lt;/td&gt;
&lt;td&gt;&lt;cite&gt;%&lt;/cite&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;O operador módulo &lt;cite&gt;%&lt;/cite&gt; sera estudado em detalhes em aulas futuras.&lt;/p&gt;
&lt;p&gt;Podemos elevar um número a outro através da utilização de 2 sinais de multiplicação seguidos &lt;cite&gt;**&lt;/cite&gt;, isto é, o operador &lt;cite&gt;**&lt;/cite&gt; é o operador para exponenciação em Python. Também é possível obter a parte inteira da divisão, com o uso do sinal de divisão repetido, &lt;cite&gt;//&lt;/cite&gt;.&lt;/p&gt;
&lt;p&gt;A seguir, temos algumas operações matemáticas utilizando os operadores que acabamos de estudar e seus respectivos resultados:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="c1"&gt;#soma&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;
&lt;span class="mi"&gt;10&lt;/span&gt;

&lt;span class="c1"&gt;#subtração&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="mi"&gt;8&lt;/span&gt;

&lt;span class="c1"&gt;#multiplicação&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="mi"&gt;4&lt;/span&gt;

&lt;span class="c1"&gt;#divisão&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;81&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;
&lt;span class="mf"&gt;9.0&lt;/span&gt;

&lt;span class="c1"&gt;#exponenciação&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;
&lt;span class="mi"&gt;32&lt;/span&gt;

&lt;span class="c1"&gt;#extração da parte inteira da divisão&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;
&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Acabamos de utilizar 6 operadores matemáticas que estão definidos por padrão. Ainda que não tenha muita utilidade num primeiro momento, podemos alterar o funcionamento dos operadores, ou seja, podemos fazer com que o sinal de adição funcione da maneira como bem desejarmos.&lt;/p&gt;
&lt;p&gt;Essa funcionalidade não possui utilidade quando estamos tratando de números inteiros, porém, é bastante útil, quando por exemplo, temos uma estrutura que seria interessante poder ser somada com outra. Logo, implementamos na classe dessa estrutura a funcionalidade de soma, subtração e etc.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;p&gt;A seguir, temos o código escrito durante a aula.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="veja-tambem"&gt;
&lt;h2&gt;VEJA TAMBÉM&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/operador-aritmetico-em-python.html"&gt;Aula 16: Operadores Aritméticos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="{filename}../curso-de-python/0019_operador-relacional-python.rst"&gt;Aula 19: Operadores Relacionais&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/operador-relacional-composto-python.html"&gt;Aula 23: Operadores Relacionais Compostos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/operadores-relacionais-na-pratica-python.html"&gt;Aula 24: Operadores Relacionais na Prática&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/operadores-logicos-python.html"&gt;Aula 25: Operadores Lógicos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/operador-de-atribuicao-python.html"&gt;Aula 30: Operadores de Atribuição&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/atribuicao-multipla-python.html"&gt;Aula 31: Operador de Atribuição Múltipla&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/operadores-de-atribuicao-compostos-python.html"&gt;Aula 32: Operador de Atribuição Compostos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="python"></category><category term="operações matemáticas"></category><category term="operações aritméticas"></category><category term="soma"></category><category term="subtração"></category><category term="multiplicação"></category><category term="divisão"></category><category term="divisão inteira"></category><category term="módulo"></category><category term="blog"></category></entry><entry><title>Variáveis do tipo Ponto Flutuante do Python</title><link href="http://excript.com/python/ponto-flutuante-python.html" rel="alternate"></link><published>2016-05-06T23:00:00-03:00</published><updated>2016-05-06T23:00:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-05-06:/python/ponto-flutuante-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos os números que tenham casas decimais e que são manipulados por programas escritos em Python pelo tipo de dados float.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="ponto-flutuante"&gt;
&lt;h2&gt;PONTO FLUTUANTE&lt;/h2&gt;
&lt;p&gt;Valor de tipo &lt;strong&gt;Ponto Flutuante&lt;/strong&gt; é qualquer número decimal, isto é, números que contenham casas decimais. Números decimais em Python, são representados pelo tipo de …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos os números que tenham casas decimais e que são manipulados por programas escritos em Python pelo tipo de dados float.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="ponto-flutuante"&gt;
&lt;h2&gt;PONTO FLUTUANTE&lt;/h2&gt;
&lt;p&gt;Valor de tipo &lt;strong&gt;Ponto Flutuante&lt;/strong&gt; é qualquer número decimal, isto é, números que contenham casas decimais. Números decimais em Python, são representados pelo tipo de dado &lt;cite&gt;float&lt;/cite&gt;.&lt;/p&gt;
&lt;p&gt;No código a seguir, utilizamos a função &lt;tt class="docutils literal"&gt;type()&lt;/tt&gt; para obter o tipo de dado que o Python definiu para vários números diferente.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;1.1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nc"&gt;float&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;gt;&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nc"&gt;int&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;gt;&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nc"&gt;complex&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;gt;&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nc"&gt;int&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;gt;&lt;/span&gt;

&lt;span class="n"&gt;num_int&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
&lt;span class="n"&gt;num_dec&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;7.3&lt;/span&gt;
&lt;span class="n"&gt;val_str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;qualquer texto&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima, é possível ver que para o Python, o número &lt;cite&gt;1.1&lt;/cite&gt; é um número do tipo &lt;cite&gt;float&lt;/cite&gt;, isto é, do tipo ponto flutuante. Já, o número &lt;cite&gt;1&lt;/cite&gt; é, para o Python, um número inteiro. O número &lt;cite&gt;1j&lt;/cite&gt; é um número complexo e o resultado da expressão, 10 elevado a 1000, será também um número inteiro.&lt;/p&gt;
&lt;p&gt;Atualmente, o Python trata qualquer número que não possua casas decimais como sendo um inteiro, mesmo números que tenham centenas de dígitos, serão para o Python, números inteiros.&lt;/p&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="python"></category><category term="tipos de dados"></category><category term="tipos"></category><category term="ponto flutuante"></category><category term="double"></category><category term="float"></category><category term="blog"></category></entry><entry><title>Nomenclatura das Variáveis em Python</title><link href="http://excript.com/python/nomenclatura-variaveis-python.html" rel="alternate"></link><published>2016-05-06T19:10:00-03:00</published><updated>2016-05-06T19:10:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-05-06:/python/nomenclatura-variaveis-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos a nomenclatura de variáveis, isto é, quais as regras que a linguagem Python tem definido para definirmos nomes de variáveis&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="nomenclatura"&gt;
&lt;h2&gt;NOMENCLATURA&lt;/h2&gt;
&lt;p&gt;As variáveis possuem obrigatoriamente um nome que as identificam e as distinguem. Esse nome, ou referência, deve seguir algumas regras, para evitar, por exemplo, colisões de …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos a nomenclatura de variáveis, isto é, quais as regras que a linguagem Python tem definido para definirmos nomes de variáveis&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="nomenclatura"&gt;
&lt;h2&gt;NOMENCLATURA&lt;/h2&gt;
&lt;p&gt;As variáveis possuem obrigatoriamente um nome que as identificam e as distinguem. Esse nome, ou referência, deve seguir algumas regras, para evitar, por exemplo, colisões de nomes e também, para não &amp;quot;confundir&amp;quot; o interpretador.&lt;/p&gt;
&lt;p&gt;Se utilizamos uam IDE para o desenvolvimento, está marcará todos os nomes inválidos que por ventura tentarmos utilizar. Porém, se trabalharmos com editores simples, como por exemplo, o Bloco de Notas do Windows, tudo que for digitado é aceito e nenhuma mensagem é exibida.&lt;/p&gt;
&lt;p&gt;As regras que aqui estudaremos também servirão para a definição de nomes de todas as demais estruturas, isto é, as regras aqui estudadas podem ser utilizadas na definição de funções, nomes de classes, nome de pacotes e etc.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="nome"&gt;
&lt;h2&gt;NOME&lt;/h2&gt;
&lt;p&gt;Na construção de referências, pode-se utilizar, quaisquer letras, sejam elas maiúsculas ou minúsculas. Variáveis não devem utilizar nomes de classes ou pacotes, ou seja, não devemos declarar uma variável de nome &amp;quot;str&amp;quot;, ou então, &amp;quot;int&amp;quot;, até porque, esses são nomes de classes definidas por padrão pela linguagem Python. Porém, a linguagem não proibe-nos a utilização de referências que sejam iguais a nomes de classes, porém, se assim o fizermos, poderemos &amp;quot;bagunçar&amp;quot; o ambiente de execução da nossa aplicação.&lt;/p&gt;
&lt;p&gt;De maneira geral, temos a disposição todo o alfabeto para definirmos o nome de variáveis. Também podemos, por exemplo, compor o nome da variável utilizando números, o que estudaremos nos tópicos a seguir.&lt;/p&gt;
&lt;p&gt;Desde já é importante dizer que em nenhuma situação será permitida a utilização de caracteres especiais na composição de nomes, isto é, não podemos utilizar a lista de caracteres a seguir quando estivermos definindo o nome de variáveis:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="caracteres-numericos"&gt;
&lt;h2&gt;CARACTERES NUMÉRICOS&lt;/h2&gt;
&lt;p&gt;Uma referência pode conter números, desde que este não seja o primeiro caractere. Assim, referências como por exemplo, &lt;tt class="docutils literal"&gt;'9num'&lt;/tt&gt;, ou então, &lt;tt class="docutils literal"&gt;'1var'&lt;/tt&gt;, não são permitidos, até porque, o interpretador, não conseguirá distinguir se estamos definindo uma referências ou então, estamos trabalhando com números.&lt;/p&gt;
&lt;p&gt;Então, a utilização de números é permitida só e somente só após o primeiro caractere, como podemos ver nos exemplos a seguir:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="n"&gt;num1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;caractere&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;x&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;flag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;
&lt;span class="n"&gt;a2b3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;qualquer texto... &amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="palavras-reservadas"&gt;
&lt;h2&gt;PALAVRAS RESERVADAS&lt;/h2&gt;
&lt;p&gt;É importante observar que o Python possui um conjunto de palavras reservadas e essas, também não poderão ser utilizadas na composição de nomes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="caracteres-especiais"&gt;
&lt;h2&gt;CARACTERES ESPECIAIS&lt;/h2&gt;
&lt;p&gt;Caracteres especiais, como por exemplo, os caracteres latinos, como o c-cedilha &lt;tt class="docutils literal"&gt;'ç'&lt;/tt&gt;, o tio &lt;tt class="docutils literal"&gt;'~'&lt;/tt&gt; e etc, não são permitidos na composição de nomes de variáveis. O único caractere tido como especial e que pode ser utilizado é o underline &lt;tt class="docutils literal"&gt;'_'&lt;/tt&gt;. A seguir, temos uma lista com os caracteres que não podem ser utilizados na composição de referências:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;'ç'&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;'+'&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;'-'&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;'*'&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;'/'&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;'='&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;'!'&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;'&amp;#64;'&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;'#'&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;'$'&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;'%'&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;'&amp;amp;'&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;''&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;'/'&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;'('&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;')'&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;'['&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;']'&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;'^'&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;'~'&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;'´'&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Novamente, é importante dizer que caracteres especiais não podem ser utilizados, seja qual for a posição em que estes aparecerem na definição da referência!&lt;/p&gt;
&lt;p&gt;A seguir, temos mais um exemplo dos caracteres que não podem estar na primeira posição de um nome de variável.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;informe seu nome&amp;quot;&lt;/span&gt;
&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As referências utilizadas no código acima são todas invalidas, e a razão, deve-se ao fato das mesmas iniciarem com caracteres numéricos. Como já dito, o primeiro caractere deve, obrigatoriamente, ser um letra.&lt;/p&gt;
&lt;p&gt;Podemos concluir também, que uma variável &lt;strong&gt;JAMAIS&lt;/strong&gt; será composta por somente números, haja vista que o primeiro caractere precisa ser uma letra.&lt;/p&gt;
&lt;p&gt;Para definirmos o nome de variáveis, temos que iniciar utilizando um caractere que esteja no intervalo de &lt;tt class="docutils literal"&gt;'a'&lt;/tt&gt; à &lt;tt class="docutils literal"&gt;'z'&lt;/tt&gt; ou &lt;tt class="docutils literal"&gt;'A'&lt;/tt&gt; à &lt;tt class="docutils literal"&gt;'Z'&lt;/tt&gt;. A única exceção a esta regra é o caractere underline &lt;cite&gt;_&lt;/cite&gt;. A seguir, temos alguns nomes de variáveis &lt;strong&gt;válidos&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="n"&gt;vvar&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
&lt;span class="n"&gt;_vVar&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;__________idade&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;19&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="unica-excecao"&gt;
&lt;h2&gt;ÚNICA EXCEÇÃO&lt;/h2&gt;
&lt;p&gt;O único caractere especial, que pode ser utilizado na composição de nomes, e que também pode estar situando em qualquer posição, é o caractere underline &lt;tt class="docutils literal"&gt;'_'&lt;/tt&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="n"&gt;_minhaVar&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;55&lt;/span&gt;
&lt;span class="n"&gt;____texto&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="macete"&gt;
&lt;h2&gt;MACETE&lt;/h2&gt;
&lt;p&gt;Na dúvida sobre quais caracteres são permitidos, utilize somente letras sem acentuação e sem espaços, até porque, todas as letras são permitidas.&lt;/p&gt;
&lt;p&gt;Agora, se você quer decorar o que pode e o que não pode, pense da seguinte maneira:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;números só se for o segundo caractere&lt;/li&gt;
&lt;li&gt;letras que não estejam no alfabeto Inglês não permitidos&lt;/li&gt;
&lt;li&gt;caracteres que não são letras e não são número não podem ser utilizados!&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;p&gt;A seguir, temos o código-fonte feito na aula de Python.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="c1"&gt;#===================================================&lt;/span&gt;
&lt;span class="c1"&gt;#=================== eXcript.com ===================&lt;/span&gt;
&lt;span class="c1"&gt;#========== youtube.com/user/excriptvideo ==========&lt;/span&gt;
&lt;span class="c1"&gt;#===================================================&lt;/span&gt;

&lt;span class="n"&gt;num_int&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
&lt;span class="n"&gt;num_dec&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;7.3&lt;/span&gt;
&lt;span class="n"&gt;val_str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;qualquer texto&amp;quot;&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;o valor é:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num_int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;o valor é: &lt;/span&gt;&lt;span class="si"&gt;%i&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;num_int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;o valor é: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num_int&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Concatendo decimal:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num_dec&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Concatendo decimal: &lt;/span&gt;&lt;span class="si"&gt;%.10f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;num_dec&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Concatendo decimal: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num_dec&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Concatendo strings&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;val_str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Concatendo strings &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;val_str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Concatendo strings &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;val_str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="python"></category><category term="variavel"></category><category term="nomenclatura"></category><category term="blog"></category></entry><entry><title>Características das Variáveis em Python</title><link href="http://excript.com/python/caracteristicas-das-variaveis-python.html" rel="alternate"></link><published>2016-05-06T18:40:00-03:00</published><updated>2016-05-06T18:40:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-05-06:/python/caracteristicas-das-variaveis-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aulas continuaremos o estudo sobre as variáveis em Python. Estudaremos, especificamente, as características, ciclo de vidas e como podemos explorar as funcionalidades que a linguagem Python nos oferece na manipulação de variáveis.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="introducao"&gt;
&lt;h2&gt;INTRODUÇÃO&lt;/h2&gt;
&lt;p&gt;Variável, em programação de computadores, é o meio pelo qual colocamos [armazenamos] informações na memória. Trata-se …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aulas continuaremos o estudo sobre as variáveis em Python. Estudaremos, especificamente, as características, ciclo de vidas e como podemos explorar as funcionalidades que a linguagem Python nos oferece na manipulação de variáveis.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="introducao"&gt;
&lt;h2&gt;INTRODUÇÃO&lt;/h2&gt;
&lt;p&gt;Variável, em programação de computadores, é o meio pelo qual colocamos [armazenamos] informações na memória. Trata-se de uma abstração, encontrada em todas as linguagens modernas, onde a informação é associada a um nome qualquer, para posterior acesso e/ou alteração.&lt;/p&gt;
&lt;p&gt;O conceito de variável em programação, é semelhante ao conceito de variável na matemática, onde letras, tais como, &lt;em&gt;'x'&lt;/em&gt;, &lt;em&gt;'y'&lt;/em&gt;, normalmente são utilizadas, ainda que, não exista limitação a quantidade de caracteres e, portanto, letras são vastamente utilizadas por questões de simplificação.&lt;/p&gt;
&lt;p&gt;O conceito de variável, implica, por definição, a existência de características que as definem e as tornam únicas.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="caracteristicas-das-variaveis"&gt;
&lt;h2&gt;CARACTERÍSTICAS DAS VARIÁVEIS&lt;/h2&gt;
&lt;p&gt;As características das variáveis determinam aspectos do seu funcionamento e também, acabam determinando, por exemplo, a maneira como as informação são gerenciadas durante a execução do código, o seu ciclo de vida e por conseguinte, como as mesmas são manipuladas na memória do computador.&lt;/p&gt;
&lt;p&gt;O gerenciamento de variáveis no Python é de total responsabilidade da sua &lt;a class="reference external" href="https://pt.wikipedia.org/wiki/M%C3%A1quina_virtual"&gt;Máquina Virtual&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Há 4 características elementares referentes a todas as variáveis, são elas:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;strong&gt;NOME:&lt;/strong&gt; toda variável possui &lt;strong&gt;nome&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;TIPO:&lt;/strong&gt; toda variável possui &lt;strong&gt;tipo&lt;/strong&gt; (inferido pela VM)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ESPAÇO:&lt;/strong&gt; toda variável ocupará um &lt;strong&gt;espaço de memória&lt;/strong&gt; único&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;VALOR:&lt;/strong&gt; toda variável possui &lt;strong&gt;valor&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;Ainda que não declaramos explicitamente o tipo das variáveis em Python, temos que uma variável inferida pela VM como sendo do tipo inteiro, não poderá, durante o tempo de execução, ter uma String ou então, qualquer outro valor atribuido. Por isso dizemos que o Python é uma linguagem fortemente tipada, isto é, as variáveis serão do mesmo tipo do inferido inicialmente.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="nome-referencia-identificacao"&gt;
&lt;h2&gt;NOME (REFERÊNCIA, IDENTIFICAÇÃO)&lt;/h2&gt;
&lt;p&gt;O &lt;strong&gt;nome da variável&lt;/strong&gt;, ou então, a sua referência ou identificação, é o meio pelo qual utilizamos variáveis em nossos códigos.&lt;/p&gt;
&lt;p&gt;Se, dentro de nossos códigos, valores são associados a nomes, temos que, a declaração de variáveis é &lt;strong&gt;(a)&lt;/strong&gt; a alocação de uma região na memória do computador &lt;strong&gt;(b)&lt;/strong&gt; o armazenamento de algum dado &lt;strong&gt;(c)&lt;/strong&gt; criação de um vínculo de uma região da memória a um determinado nome.&lt;/p&gt;
&lt;p&gt;Após declarado a variável, seu identificador [nome], quando utilizado no código, será reconhecido na execução da aplicação, como uma entedidade armazenadora de dados. Se, posteriormente, outro valor for associado a um identificador [nome] já utilizado, o mesmo será descartado pois, assume-se que um novo valor deve ser associado.&lt;/p&gt;
&lt;p&gt;É importante entender que o nome, é uma ponte entre o endereço de memória e o nosso código. Assim, não precisamos manipular números (endereços de memória) durante o desenvolvimento, o que torna nossos códigos mais legíveis e fáceis de serem implementados.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="tipo"&gt;
&lt;h2&gt;TIPO&lt;/h2&gt;
&lt;p&gt;O &lt;strong&gt;Tipo de Variável&lt;/strong&gt; funciona como uma espécie de classificação das informações, ou seja, o tipo informa com antecedência qual informação podemos esperar de determinada variável. Toda variável declarada será, obrigatoriamente, de algum tipo. O tipo da variável será armazenado junto com o valor que esta estará armazenando.&lt;/p&gt;
&lt;p&gt;A linguagem tem definido algumas operações para alguns tipos de dados, por exemplo, quando utilizamos o operador (adição) entre 2 variáveis que contenham números inteiros, o interpretador, somará os valores. Porém, se utilizarmos o sinal de adição com 2 variáveis do tipo String, o interpretador fará uma concatenação.&lt;/p&gt;
&lt;p&gt;A operação que ocorrerá mediante ao tipo da variável é, definido em código e, podemos, se desejarmos, alterar o funcionamento. Aprendemos como por exemplo, alterar a maneira como 2 números inteiros são somados, quando estudarmos a Orientação a Objetos em Python.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="espaco"&gt;
&lt;h2&gt;ESPAÇO&lt;/h2&gt;
&lt;p&gt;As informações precisam ser armazenada em alguma mídia, e as variáveis, são armazenadas na memória RAM do nosso computador. A memória RAM é formada por centenas de milhares de pequenos blocos, onde, cada bloco, possui um número que o identifica e o distingue dos demais. Assim, uma informação sempre estará armazenada numa determinada posição física de memória.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="valor"&gt;
&lt;h2&gt;VALOR&lt;/h2&gt;
&lt;p&gt;O valor, ou então, a informação contida na variável, isto é, o dado propriamente dito, é, a parte principal de qualquer variável.&lt;/p&gt;
&lt;p&gt;Toda variável será capaz de ter o seu valor alterado durante o tempo de execução, bastando para isso, somente, a atribuição de outro valor. A única regra definida para a atribuição de valores é que o tipo do valor a ser atribuído, seja do mesmo tipo da variável. Assim, para variáveis inteiras, só poderemos atribuir números. Para variáveis do tipo String, só poderemos atribuir texto. Para variáveis do tipo Boolean, só podemos atribuir números entre 0 à 1, ou então, True ou False.&lt;/p&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="python"></category><category term="variáveis"></category><category term="caracteristicas das variáveis"></category><category term="tipos"></category><category term="blog"></category></entry><entry><title>Variáveis em Python</title><link href="http://excript.com/python/variavel-em-python.html" rel="alternate"></link><published>2016-05-06T18:30:00-03:00</published><updated>2016-05-06T18:30:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-05-06:/python/variavel-em-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula iniciaremos o estudo das variáveis em Python e aprenderemos os principais conceitos da declaração e respectivo uso das variáveis previamente declaradas.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="definicao-de-variavel"&gt;
&lt;h2&gt;DEFINIÇÃO DE VARIÁVEL&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Variável&lt;/strong&gt; é um espaço de memória que reservamos para armazenar valores temporários que estão sendo processados ou manipulados. Toda variável possui um tipo e …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula iniciaremos o estudo das variáveis em Python e aprenderemos os principais conceitos da declaração e respectivo uso das variáveis previamente declaradas.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="definicao-de-variavel"&gt;
&lt;h2&gt;DEFINIÇÃO DE VARIÁVEL&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Variável&lt;/strong&gt; é um espaço de memória que reservamos para armazenar valores temporários que estão sendo processados ou manipulados. Toda variável possui um tipo e este será inferido conforme a informação inicial que atribuirmos para a variável. Uma variável pode ter o seu valor alterado a qualquer momento, porém, não é possível alterar o seu tipo durante a execução.&lt;/p&gt;
&lt;p&gt;Toda variável irá armazenar o valor na memória RAM (Random Access Memory) e a mesma estará disponível enquanto houver eletricidade, ou o computador não seja reiniciado. Todo armazenamento feito na memória RAM é considerado como um armazenamento temporário, e trabalhamos dessa maneira, devido a velocidade de entrega que memória RAM proporciona se comparada a outras mídias, como por exemplo, o disco rígido, PenDrive, CD-Room e etc.&lt;/p&gt;
&lt;p&gt;Podemos declarar quantas variáveis desejarmos. O Python administrará (reservará espaço) para cada uma individualmente e associará o nome que definirmos ao espaço de memória. Temos então, que a localização do espaço de memória será feito por intermédio da referência (nome da variável) definida pelo programador. A partir do momento em que não fizermos mais uso de determinada variável, a máquina virtual do Python desalocará o espaço reservado, devolvendo-o ao sistema operacional.&lt;/p&gt;
&lt;p&gt;A melhor maneira para manipularmos informações seja num &lt;tt class="docutils literal"&gt;programa&lt;/tt&gt;, como também num &lt;tt class="docutils literal"&gt;Script&lt;/tt&gt;, é através da utilização de variáveis. Isso porque, variáveis possuem uma estrutura simples e rápida para utilização.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="como-funcionam-as-variaveis"&gt;
&lt;h2&gt;COMO FUNCIONAM AS VARIÁVEIS?&lt;/h2&gt;
&lt;p&gt;Devemos pensar nas variáveis como sendo um espaço físico. Este espaço é administrado pelo hardware, pela placa-mãe, processador e sistema operacional. Cada pedaço do espaço físico possui um número que o identifica (número identificador) e assim, ao declararmos uma variável, estaremos, reservamos um espaço físico para guardar informações temporariamente e vinculando esse espaço ao nome da variável (referência).&lt;/p&gt;
&lt;p&gt;As informações que serão armazenadas são temporárias, até porque, o funcionamento da memória RAM necessita, obrigatoriamente, de eletricidade para seu funcionamento. Não existe limites pré-definidos da quantidade de variáveis, ou quantidade de informações que é possível utilizar. Essas quantias sempre serão definidas pela quantidade de memória física que houver no sistema, e a quantidade de variáveis que podemos declarar, também estará, diretamente relacionada com a quantidade de espaço físico disponível, isto é, a quantidade de memória RAM existente.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="o-que-e-uma-referencia"&gt;
&lt;h2&gt;O QUE É UMA REFERÊNCIA?&lt;/h2&gt;
&lt;p&gt;Referência é o nome que damos às nossas variáveis e é a forma como a VM do Python vinculará as informações entre o nosso programa e a memória do computador.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="quantas-variaveis-podemos-declarar"&gt;
&lt;h2&gt;QUANTAS VARIÁVEIS PODEMOS DECLARAR?&lt;/h2&gt;
&lt;p&gt;Quando iniciamos o estudo da programação, gostamos de conhecer os limites, quantidades e capacidades de tudo. Mensurar a quantidade de variáveis que um programa Python pode ter é bastante difícil. Isso porque, vamos supor, um simples número inteiro para o Python, não possuirá somente o valor da sua informação e sim, haverá um conjunto de dados que estarão vinculado ao número internamente. Junto a cada referência declarada, haverá também, muitas outras informações vinculadas, informações estas conhecidas como metadados, e estas, serão armazenadas para tanto uso intero no Python, ou então, para melhorar a performance em alguma situação.&lt;/p&gt;
&lt;p&gt;A linguagem Python não define quantidades até porque, os limites sempre estarão diretamente relacionadas com a capacidade do computador onde o programa for executado.&lt;/p&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="python"></category><category term="variavel"></category><category term="blog"></category></entry><entry><title>Indentação do código Python</title><link href="http://excript.com/python/indentacao-python.html" rel="alternate"></link><published>2016-05-06T18:00:00-03:00</published><updated>2016-05-06T18:00:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-05-06:/python/indentacao-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos a utilização da indentação e a sua importância para a correta interpretação do código pelo interpretador.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="indentacao"&gt;
&lt;h2&gt;INDENTAÇÃO&lt;/h2&gt;
&lt;p&gt;Indentar é o recuo do texto em relação a sua margem, ou seja, se antes de escrevermos uma instrução, utilizamo 4 espaçamentos da margem esquerda até a instrução propriamente dita …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos a utilização da indentação e a sua importância para a correta interpretação do código pelo interpretador.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="indentacao"&gt;
&lt;h2&gt;INDENTAÇÃO&lt;/h2&gt;
&lt;p&gt;Indentar é o recuo do texto em relação a sua margem, ou seja, se antes de escrevermos uma instrução, utilizamo 4 espaçamentos da margem esquerda até a instrução propriamente dita, podemos dizer que a indentação utilizada possui 4 espaços.&lt;/p&gt;
&lt;p&gt;A palavra indentação, vem do inglês indentation e é normal a sua utilização no código-fonte de um programa, indiferente da linguagem utilizada.&lt;/p&gt;
&lt;p&gt;Em Python, a indentação possui função bastante especial, até porque, os blocos de instrução são delimitados pela profundidade da indentação, isto é, os códigos que estiverem rente a margem esquerda, farão parte do primeiro nível hierárquico. Já, os códigos que estiverem a 4 espaços da margem esquerda, estarão no segundo nível hierárquico e aqueles que estiverem a 8 espaços, estarão no terceiro nível e assim por diante.&lt;/p&gt;
&lt;p&gt;Todos os blocos são delimitados pela profundidade da indentação e por isso, a sua importância, é vital para um programa em Python. O mau uso, isto é, utilizar 4 espaçamentos enquanto deveríamos estar utilizando 8, acarretará na não execução, ou então, no mal funcionamento em geral.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="blocos"&gt;
&lt;h2&gt;BLOCOS&lt;/h2&gt;
&lt;p&gt;Os &lt;strong&gt;blocos&lt;/strong&gt; são uma ou mais instruções que devem ser executadas uma após a outra, de cima para baixo da esquerda para a direita.&lt;/p&gt;
&lt;p&gt;Existem vários tipos de blocos, os mais comuns, são os blocos de códigos, isto é, blocos que contenham instruções Python.&lt;/p&gt;
&lt;p&gt;Outro tipo comum de bloco são os blocos de comentários, isto é, um conjunto de caracteres, que ocupam uma ou mais linha de código e estão delimitados por uma notação que a linguagem de programação definiu.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="blocos-de-codigo"&gt;
&lt;h2&gt;BLOCOS DE CÓDIGO&lt;/h2&gt;
&lt;p&gt;Bloco de código é uma ou um conjunto de instrução que estejam numa mesma distância da margem esquerda. A seguir, temos um trecho de código Python que mostra a utilização de 2 blocos. Estes foram definidos pela quantidade de espaços, isto é, pela distância da margem esquerda.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nivel&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;#primeiro nível hierárquico&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nível&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;#segundo nível hierárquico&lt;/span&gt;


&lt;span class="n"&gt;Este&lt;/span&gt; &lt;span class="n"&gt;é&lt;/span&gt; &lt;span class="n"&gt;um&lt;/span&gt; &lt;span class="n"&gt;bloco&lt;/span&gt; &lt;span class="n"&gt;de&lt;/span&gt; &lt;span class="n"&gt;comentários&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="n"&gt;essa&lt;/span&gt; &lt;span class="n"&gt;é&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;primeira&lt;/span&gt; &lt;span class="n"&gt;linha&lt;/span&gt;
&lt;span class="n"&gt;agora&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;estamos&lt;/span&gt; &lt;span class="n"&gt;na&lt;/span&gt; &lt;span class="n"&gt;segunda&lt;/span&gt; &lt;span class="n"&gt;linha&lt;/span&gt; &lt;span class="n"&gt;de&lt;/span&gt; &lt;span class="n"&gt;comentário&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;É comum utilizarmos 2 espaços ou então, 4 espaços, ou mesmo 1 tabulação ao lado esquerdo da instrução para assim definir, em qual bloco a instrução está contida. O primeiro nível é o nível 0, ou seja, o nível que não contém espaçamento. A linguagem não nos obriga a utilizar uma determinada quantidade de espaçamentos, ou então, tabulações. Porém, se utilizarmos 4 espaços para definir o primeiro blocos, o interpretador assumirá que as próximas instruções estão indentadas com uso de múltiplos de 4.&lt;/p&gt;
&lt;p&gt;A recomendação é que utilizemos, ou 1 tabulação, ou então, 4 espaços.&lt;/p&gt;
&lt;p&gt;Ao invés de trabalharmos com quantidades de espaços, podemos utilizar uma determinada quantidade de tabulações. O primeiro nível hierárquico seria o nível 0, isto é, instruções que não possuem tabulações a sua esquerda. O segundo nível utilizaria uma única tabulação, o terceiro nível utilizaria 2 tabulações e assim sucessivamente.&lt;/p&gt;
&lt;p&gt;O mais importante é sabermos que em Python, o espaçamento não é facultativos, isto é, não o colocamos se assim desejarmos, mas sim, somos obrigados a trabalharmos com algum sistema de espaçamento a fim de definirmos blocos isolados de códigos.&lt;/p&gt;
&lt;p&gt;Os benefícios do uso da tabulação são percebidos rapidamente, isso porque, um código em Python sempre estará organizado, do contrário o mesmo não funcionará. E não somente isso, código indentados tornam-se mais legíveis e é um padrão utilizado por praticamente todos os programadores, indiferente da linguagem em que estes estejam trabalhando.&lt;/p&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="python"></category><category term="indentação"></category><category term="blog"></category></entry><entry><title>Comentários em Python</title><link href="http://excript.com/python/comentarios-em-python.html" rel="alternate"></link><published>2016-05-06T17:40:00-03:00</published><updated>2016-05-06T17:40:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-05-06:/python/comentarios-em-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos a utilização de comentários em Python, onde e o que devemos comentar e diversas outras questões pertinentes ao uso de comentários junto ao código fonte.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="comentarios"&gt;
&lt;h2&gt;COMENTÁRIOS&lt;/h2&gt;
&lt;p&gt;O uso de comentários é uma prática normal na programação. O objetivo é poder adicionar descrições em partes especificas do código …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos a utilização de comentários em Python, onde e o que devemos comentar e diversas outras questões pertinentes ao uso de comentários junto ao código fonte.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="comentarios"&gt;
&lt;h2&gt;COMENTÁRIOS&lt;/h2&gt;
&lt;p&gt;O uso de comentários é uma prática normal na programação. O objetivo é poder adicionar descrições em partes especificas do código, seja para documentá-lo, seja para adicionar uma descrição, ou mesmo, para marcar que uma determinada linha, ou um conjunto de linhas, não devem ser executados.&lt;/p&gt;
&lt;p&gt;Para adicionarmos comentários, utilizamos uma notação especial, a fim de informar ao interpretador que, determinado trecho de caracteres, possui a finalidade de descrever ou documentar algo e assim, o compilador ou interpretador, não deve interpretar os caracteres contidos na notação que demarca trechos de comentários.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="a-notacao-definida-pelo-python"&gt;
&lt;h2&gt;A NOTAÇÃO DEFINIDA PELO PYTHON&lt;/h2&gt;
&lt;p&gt;Em Python, temos 3 notações utilizadas para definir blocos de comentários. A primeira e mais simples, é para definirmos que uma única linha deve ser ignorada, e as 2 outras, para delimitarmos um conjunto de linhas.&lt;/p&gt;
&lt;div class="section" id="notacao-inline"&gt;
&lt;h3&gt;NOTAÇÃO INLINE&lt;/h3&gt;
&lt;p&gt;Utilizamos o caractere cerquilha &lt;cite&gt;#&lt;/cite&gt; para demarcarmos que tudo que estiver &lt;strong&gt;a frente&lt;/strong&gt; desse caractere, deve ser ignorado pelo interpretador do Python, por exemplo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="c1"&gt;#tudo que estiver a frente da cerquilha será ignorado&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;teste&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;#a instrução atrás da cerquilha será interpretada&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="notacao-multilines-varias-linhas"&gt;
&lt;h2&gt;NOTAÇÃO MULTILINES (VÁRIAS LINHAS)&lt;/h2&gt;
&lt;p&gt;A linguagem Python também disponibiliza uma notação para demarcarmos que um conjunto de linhas deve ser ignorado pelo interpretador. Essa notação se dá pelo uso de 3 aspas simples, ou entao, 3 aspas duplas. Nestes casos, tudo que estiver delimitado pelas aspas não será interpretado, por exemplo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="sd"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="sd"&gt;toda informações contida entre 3 aspas SIMPLES&lt;/span&gt;
&lt;span class="sd"&gt;é considerada como caracteres que devem ser ignorados.&lt;/span&gt;
&lt;span class="sd"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;


&lt;span class="n"&gt;toda&lt;/span&gt; &lt;span class="n"&gt;informações&lt;/span&gt; &lt;span class="n"&gt;contida&lt;/span&gt; &lt;span class="n"&gt;entre&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="n"&gt;aspas&lt;/span&gt; &lt;span class="n"&gt;DUPLAS&lt;/span&gt;
&lt;span class="n"&gt;é&lt;/span&gt; &lt;span class="n"&gt;considerado&lt;/span&gt; &lt;span class="n"&gt;texto&lt;/span&gt; &lt;span class="n"&gt;que&lt;/span&gt; &lt;span class="n"&gt;deve&lt;/span&gt; &lt;span class="n"&gt;ser&lt;/span&gt; &lt;span class="n"&gt;ignorado&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima, definimos 2 blocos de códigos que serão ignorados pelo interpretador do Python ou então, podemos dizer que, serão interpretados como se fossem comentários e que dispensam qualquer avaliação por parte do interpretador.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="para-que-utilizamos-comentarios"&gt;
&lt;h2&gt;PARA QUE UTILIZAMOS COMENTÁRIOS?&lt;/h2&gt;
&lt;p&gt;A utilização de comentários da-se tanto para inserirmos uma informações que não podemos esquecer, ou então, algo que desejamos que outros programadores saibam no momento em que estiverem lendo determinadas linhas de código.&lt;/p&gt;
&lt;p&gt;A primeira utilização dos comentário é fazer o que o próprio nome sugere: comentar os nosso códigos informando ao interpretador que essas linhas não devem ser executadas.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="documentacao-de-programas"&gt;
&lt;h2&gt;DOCUMENTAÇÃO DE PROGRAMAS&lt;/h2&gt;
&lt;p&gt;Utilizamos a marcação de comentários para documentarmos programas, classes, funções, variáveis, constantes ou seja lá o que for. Quando criamos uma biblioteca e essa será utilizada por terceiros, é importante que o código possua uma documentação para que os outros programadores entendam a nossa biblioteca e, saibam como invocar as funções corretamente, ou mesmo, para entenderem o que elas se propõem.&lt;/p&gt;
&lt;p&gt;Para a documentação de código, há um conjunto de parâmetros a serem definidos dentro do bloco de comentário a fim de instruir o programa que irá tornar nossos comentários em documentação propriamente dita.&lt;/p&gt;
&lt;p&gt;Quando documentamos partes internas do nosso programa, temos que, ao mesmo tempos em que documentamos o que estamos fazendo, também geramos documentação que será posteriormente extraída nosso código e será então, gerada a documentação propriamente dita. Dessa forma, não temos o problema de ter num diretório onde há arquivos que documentam classes e funções, e noutro diretório, as classes e funções documentadas.&lt;/p&gt;
&lt;p&gt;Assim, tudo estará junto num mesmo arquivo, feito num mesmo editor! Essa forma de trabalhar, faz com que a documentação sempre esteja atualizada e acelera o desenvolvimento de maneira geral. Até porque, no mesmo momento em que alteramos o código fonte, já podemos alterar a documentação.&lt;/p&gt;
&lt;p&gt;É recomendável nos acostumarmos a documentar nosso código. Isso não somente faz de nós melhores programadores como também, ajuda-nos na definir qual a razão que determinado trecho de código está se propondo a realizar.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;p&gt;A seguir, temos o exemplo feito durante aula sobre a utilização de comentários.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Aprendendo como utilizar comentários.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;segunda linha&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;terceira linha&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;#aqui é um comentário que não será interpretado&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="links-externos"&gt;
&lt;h2&gt;LINKS EXTERNOS&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.python.org/dev/peps/pep-0008/#comments"&gt;PEP8&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="python"></category><category term="comentários"></category><category term="blog"></category></entry><entry><title>Primeiro programa em Python</title><link href="http://excript.com/python/primeiro-programa-em-python.html" rel="alternate"></link><published>2016-05-06T17:15:00-03:00</published><updated>2016-05-06T17:15:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-05-06:/python/primeiro-programa-em-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nessa aula escreveremos o nosso primeiro programa em Python, ou seja, faremos o famoso Hello World e também, aprenderemos algumas funcionalidade básicas da linguagem&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="primeiro-programa"&gt;
&lt;h2&gt;PRIMEIRO PROGRAMA&lt;/h2&gt;
&lt;p&gt;Um programa em Python pode ser um único arquivo com a extensão *.py ou então, uma pasta que contém várias sub-pastas com diversos arquivos …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nessa aula escreveremos o nosso primeiro programa em Python, ou seja, faremos o famoso Hello World e também, aprenderemos algumas funcionalidade básicas da linguagem&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="primeiro-programa"&gt;
&lt;h2&gt;PRIMEIRO PROGRAMA&lt;/h2&gt;
&lt;p&gt;Um programa em Python pode ser um único arquivo com a extensão *.py ou então, uma pasta que contém várias sub-pastas com diversos arquivos contendo código Python *.py e muitos outros contendo informações relevantes ao programa.&lt;/p&gt;
&lt;p&gt;Nesse nosso primeiro programa, vamos imprimir uma mensagem na saída padrão, isto é, no console, para que assim, possamos entender um pouco melhor sobre como podemos escrever dados no prompt de comando.&lt;/p&gt;
&lt;p&gt;Grande parte do nosso Curso de Python ocorrerá no Prompt de Comando, ou seja, imprimiremos mensagens na tela e em seguida, iremos ler o que o nosso usuário digitou. Essa é a &lt;strong&gt;melhor maneira para o estudo da programação&lt;/strong&gt; e também, é a melhor forma para escrevermos software!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="imprimindo-na-saida-padrao"&gt;
&lt;h2&gt;IMPRIMINDO NA SAÍDA PADRÃO&lt;/h2&gt;
&lt;p&gt;Todas as vez em que desejarmos imprimir uma mensagem na tela, basta utilizarmos a função &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;print('')&lt;/span&gt;&lt;/tt&gt;, em seguida, abrimos parêntesis, colocamos duas aspas e então, digitar o texto a ser impresso no Console. Feito isso, basta fecharmos o parêntesis e então, executar o código.&lt;/p&gt;
&lt;p&gt;Se você já programa/programou em outra linguagem, é importante lembrar que em Python, não finalizamos as instruções com uso do ponto e vírgula!&lt;/p&gt;
&lt;p&gt;Ainda que seja permitido a utilização do caractere de finalização ponto e vírgula, não é obrigatório finalizar as instruções com o mesmo. Até podemos colocá-lo se desejarmos, porém, o normal é utilizarmos somente quando precisamos colocar mais de uma instrução numa mesma linha.&lt;/p&gt;
&lt;p&gt;Não é correto dizer que não utilizamos ponto e vírgula em Python, até porque, existem situações onde é necessário a sua utilização, como por exemplo, quando precisamos, por alguma razão, escrevermos várias instruções numa única linha. Nesses casos, somos obrigados a utilizar o ponto e vírgula para dizermos ao interpretador onde inicia e onde finaliza cada instrução.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="a-instrucao-print"&gt;
&lt;h2&gt;A INSTRUÇÃO &lt;tt class="docutils literal"&gt;print&lt;/tt&gt;&lt;/h2&gt;
&lt;p&gt;A instrução &lt;tt class="docutils literal"&gt;print&lt;/tt&gt; em Python é utilizada todas as vezes em que precisarmos escrever alguma informação na saída padrão, também chamado de Console, linha de comando e etc. A função &lt;tt class="docutils literal"&gt;print()&lt;/tt&gt; pode receber vários parâmetros, como por exemplo, o &lt;tt class="docutils literal"&gt;encoding&lt;/tt&gt; do texto que será impresso ou então, um nome de arquivo para o qual desejamos escrever dentro.&lt;/p&gt;
&lt;p&gt;Inicialmente, vamos utilizar a instrução &lt;tt class="docutils literal"&gt;print()&lt;/tt&gt; para escrever mensagens na saída padrão, isto é, no Console. No trecho de código a seguir, temos um exemplo do uso da função &lt;tt class="docutils literal"&gt;print()&lt;/tt&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;parametro&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Escrevemos o nome da instrução, neste caso, &lt;tt class="docutils literal"&gt;print()&lt;/tt&gt;. Em seguida, abrimos um parêntesis, abrimos aspas e então, escrevemos a mensagem que deverá ser impressa na tela. Assim, tudo que estiver entre aspas será reconhecido como texto e será impresso no Console. Feito isso, fechamos aspas, fechamos parêntesis e então, podemos executar o nosso programa.&lt;/p&gt;
&lt;p&gt;IMPORTANTE: tome cuidado para que em todas as vezes que abrires parêntesis fecha-lo ou então, para todas as vezes em que abrires aspas, fechá-las! Do contrário, será levantado uma mensagem de erro pelo interpretador assim que tentares executar o código.&lt;/p&gt;
&lt;p&gt;O programa que desenvolvemos possui a base que todo script em Python terá. Logo, ainda que o exemplo tenha sido simples, os princípios aprendidos são muito importantes para o restante do nosso estudo.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;texto 1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;texto 2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="veja-tambem"&gt;
&lt;h2&gt;VEJA TAMBÉM&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/primeira-aula-python.html"&gt;Aula 1: Introdução ao Curso de Python da eXcript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/como-instalar-o-python-windows.html"&gt;Aula 2: Como instalar o Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/caracteristica-python.html"&gt;Aula 3: Características do Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/recursos-python.html"&gt;Aula 4: Recursos do Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/instalando-o-pycharm-windows.html"&gt;Aula 6: Instalando a IDE PyCharm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/primeiro-programa-em-python.html"&gt;Aula 7: Primeiro programa em Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="python"></category><category term="primeiro programa"></category><category term="hello world"></category><category term="blog"></category><category term="print"></category></entry><entry><title>Instalando o PyCharm no Windows</title><link href="http://excript.com/python/instalando-o-pycharm-windows.html" rel="alternate"></link><published>2016-05-06T17:00:00-03:00</published><updated>2016-05-06T17:00:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-05-06:/python/instalando-o-pycharm-windows.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nessa aula estudaremos o passo-a-passo para o download e a instalação do PyCharm no Windows, ou seja, vamos aprender a baixar e a instalar a IDE utilizada nesse curso.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="ambiente-para-desenvolvimento-em-python"&gt;
&lt;h2&gt;AMBIENTE PARA DESENVOLVIMENTO EM PYTHON&lt;/h2&gt;
&lt;img alt="Imagem da IDE PyCharm utilizada nos Cursos da eXcript" src="../images/curso-de-python/pycharm-ide.png" /&gt;
&lt;p&gt;Para desenvolvermos em &lt;tt class="docutils literal"&gt;Python&lt;/tt&gt;, podemos utilizar qualquer editor de textos ou então, o simples Bloco de …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nessa aula estudaremos o passo-a-passo para o download e a instalação do PyCharm no Windows, ou seja, vamos aprender a baixar e a instalar a IDE utilizada nesse curso.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="ambiente-para-desenvolvimento-em-python"&gt;
&lt;h2&gt;AMBIENTE PARA DESENVOLVIMENTO EM PYTHON&lt;/h2&gt;
&lt;img alt="Imagem da IDE PyCharm utilizada nos Cursos da eXcript" src="../images/curso-de-python/pycharm-ide.png" /&gt;
&lt;p&gt;Para desenvolvermos em &lt;tt class="docutils literal"&gt;Python&lt;/tt&gt;, podemos utilizar qualquer editor de textos ou então, o simples Bloco de Nota do Windows. Por padrão, o interpretador do &lt;tt class="docutils literal"&gt;Python&lt;/tt&gt; executa textos [códigos] compostos por caracteres ASCII e/ou Unicode e por isso, é indiferente o programa utilido para escrever os códigos. Isso porque, um arquivo de código é basicamente um arquivo de texto com a extensão *.py.&lt;/p&gt;
&lt;p&gt;Atualmente, é comum utilizarmos programas pra construir programas, isto é, utilizamos softwares que são desenvolvidos para agilizar e automatizar nossas tarefas de programação. Estes software são conhecidos como &lt;tt class="docutils literal"&gt;IDE&lt;/tt&gt;, um acrônimo de &lt;tt class="docutils literal"&gt;Integrated Development Environment&lt;/tt&gt;, que numa tradução livre significa, &lt;tt class="docutils literal"&gt;Ambiente de Desenvolvimento Integrado&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Existem centenas de &lt;strong&gt;IDE&lt;/strong&gt; no mercado, muitas gratuitas, outras pagas. Os recursos que estas oferecem vão desde a compilação e execução automatica do código, até o gerenciamento e geração de código automatizado.&lt;/p&gt;
&lt;p&gt;Para programarmos em &lt;tt class="docutils literal"&gt;Python&lt;/tt&gt;, temos diversas opções de &lt;tt class="docutils literal"&gt;IDE&lt;/tt&gt; disponíveis, a maioria é gratuita ou então, possui uma versão livre. Inclusive, existe &lt;strong&gt;IDE&lt;/strong&gt; para desenvolvimento em &lt;tt class="docutils literal"&gt;Python&lt;/tt&gt; escritas com a própria linguagem Python, como o é o caso do &lt;a class="reference external" href="http://ninja-ide.org/downloads/"&gt;NINJA IDE&lt;/a&gt;, uma excelente ferramenta, multiplataforma, gratuita e open source.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="pycharm"&gt;
&lt;h2&gt;PyCharm&lt;/h2&gt;
&lt;img alt="Logo da IDE JetBrain PyCharm" src="../images/curso-de-python/jetbrains-pycharm.png" /&gt;
&lt;p&gt;O PyCharm é uma IDE desenvolvida pela empresa &lt;a class="reference external" href="https://www.jetbrains.com/"&gt;JetBrains&lt;/a&gt;, empresa esta especializada na produção de ferramentas para o desenvolvimento de software, como por exemplo, o AndroidStudio, que atualmente é, &lt;a class="reference external" href="`GoogleAndroid`"&gt;o Ambiente de Desenvolvimento oficial para a plataforma Google Android&lt;/a&gt;.&lt;/p&gt;

    &lt;div class="admonitionblock tip data-line"&gt;
        &lt;table&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="icon"&gt;
                        &lt;i class="fa icon-tip" title="Dica!"&gt;&lt;/i&gt;
                    &lt;/td&gt;
                    &lt;td class="content"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt;IDE é um programa para fazer programas. Nada tem a ver com a compilação, linkedição, interpretação ou geração de código executável.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;p&gt;Os produtos &lt;a class="reference external" href="https://www.jetbrains.com/"&gt;JetBrains&lt;/a&gt;, ou melhor, as &lt;tt class="docutils literal"&gt;IDE&lt;/tt&gt; s da JetBrains, estão dentre as melhores ferramentas para desenvolvimento, seja em Python, C/C++, Ruby, PHP, Web e etc. Para programação em Python, temos a IDE de nome &lt;strong&gt;PyCharm&lt;/strong&gt;, e este será o programa que utilizaremos para desenvolvimento de aplicações Python em todas as aulas deste curso.&lt;/p&gt;
&lt;p&gt;Atualmente, o &lt;strong&gt;PyCharm&lt;/strong&gt; é considerado a melhor &lt;strong&gt;IDE&lt;/strong&gt; para desenvolvimento em Python e, recomendamos que voce utilize o mesmo em seu estudo, até porque, é gratuito e fácil de utilizar.&lt;/p&gt;

    &lt;div class="admonitionblock tip data-line"&gt;
        &lt;table&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="icon"&gt;
                        &lt;i class="fa icon-tip" title="Dica!"&gt;&lt;/i&gt;
                    &lt;/td&gt;
                    &lt;td class="content"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt;Você pode utilizar quaisquer IDE para desenvolvimento em Python.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;p&gt;O &lt;tt class="docutils literal"&gt;PyCharm&lt;/tt&gt; possui uma versão gratuita e uma versão paga. Inicialmente, a versão gratuita possui muito mais recursos do que iremos precisar, porém, quando estivermos desenvolvendo para Web e utilizando framework's como Django ou Flask, é producente adquirir uma licença pela agilidade e produtividade que a versão comercial do PyCharm proporciona.&lt;/p&gt;
&lt;p&gt;A IDE PyCharm oferece um módulo de acesso a Banco de Dados e também, trás uma maneira de testarmos códigos SQL, administrar o nosso banco, alterar, editar e excluir registros de maneira simples e rápida. Conseguimos administrar praticamente todos os bancos de dados do mercado sem a necessidade de utilizarmos outro programa, até porque, o PyCharm possui todo o módulo de acesso a base de dados incorporada a IDE.&lt;/p&gt;
&lt;p&gt;Neste curso utilizaremos a versão comunitária do PyCharm e recomendamos que você também a utilize. Porém, sinta-se livre para trabalhar com qualquer editor, o resultado sempre deverá ser o mesmo, haja vista que a &lt;strong&gt;IDE&lt;/strong&gt;, isto é, o Ambiente de Desenvolvimento Integrado, gerencia a produção de código sem alterar ou influenciar como o código será executado.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="instalacao"&gt;
&lt;h2&gt;INSTALAÇÃO&lt;/h2&gt;
&lt;p&gt;Para instalar o PyCharm em seu computador, é necessário que você &lt;a class="reference external" href="`DownloaddoJava`"&gt;instale antes o Java&lt;/a&gt;, caso não tenhas o mesmo instalado. Na dúvida, ou seja, se não souberes se o Java está instalado, baixe-o e faça a instalação, somente para garantir!&lt;/p&gt;
&lt;p&gt;Também é importante que você já tenha instalado o Python em seu computador. Isso porque, o PyCharm configurará o ambiente para você, do contrário, será preciso configurar qual a instalação do Python você deseja utilizar.&lt;/p&gt;
&lt;p&gt;Após o download e instalação do Java e do Python, &lt;a class="reference internal" href="#pycharm"&gt;faça o download da última versão do PyCharm&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Caso queiras &lt;a class="reference external" href="`JetBrains`"&gt;acessar o site da JetBrains, utilize este link&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;p&gt;O exemplo a seguir foi desenvolvido na aula após a instalação do PyCharm.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;
&lt;span class="mi"&gt;20&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Bem-vindo ao curso de Python!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Bem&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;vindo&lt;/span&gt; &lt;span class="n"&gt;ao&lt;/span&gt; &lt;span class="n"&gt;curso&lt;/span&gt; &lt;span class="n"&gt;de&lt;/span&gt; &lt;span class="n"&gt;Python&lt;/span&gt;&lt;span class="err"&gt;!&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Bem vindo&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="ne"&gt;SyntaxError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;invalid&lt;/span&gt; &lt;span class="n"&gt;syntax&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;20&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;dir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="veja-tambem"&gt;
&lt;h2&gt;VEJA TAMBÉM&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/primeira-aula-python.html"&gt;Aula 1: Introdução ao Curso de Python da eXcript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/como-instalar-o-python-windows.html"&gt;Aula 2: Como instalar o Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/caracteristica-python.html"&gt;Aula 3: Características do Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/recursos-python.html"&gt;Aula 4: Recursos do Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/instalando-o-pycharm-windows.html"&gt;Aula 6: Instalando a IDE PyCharm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/primeiro-programa-em-python.html"&gt;Aula 7: Primeiro programa em Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="python"></category><category term="pycharm"></category><category term="jetbrains"></category><category term="ide"></category><category term="blog"></category></entry><entry><title>IDLE - Modo Interativo do Python</title><link href="http://excript.com/python/idle-python.html" rel="alternate"></link><published>2016-05-02T01:50:00-03:00</published><updated>2016-05-02T01:50:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-05-02:/python/idle-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos o aplicativo IDLE que é, a forma interativa para utilizarmos o Python e assim, sermos capazes de testar funções, classes e quaisquer classe de qualquer pacote instalado.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="idle-visao-geral"&gt;
&lt;h2&gt;IDLE - VISÃO GERAL&lt;/h2&gt;
&lt;img alt="Imagem que exibe o IDLE em execução." src="../images/curso-de-python/idle.png" /&gt;
&lt;p&gt;A palavra IDLE é o acrônimo de &lt;strong&gt;Integrated Development and Learning Environment&lt;/strong&gt;. O mesmo é um programa …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos o aplicativo IDLE que é, a forma interativa para utilizarmos o Python e assim, sermos capazes de testar funções, classes e quaisquer classe de qualquer pacote instalado.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="idle-visao-geral"&gt;
&lt;h2&gt;IDLE - VISÃO GERAL&lt;/h2&gt;
&lt;img alt="Imagem que exibe o IDLE em execução." src="../images/curso-de-python/idle.png" /&gt;
&lt;p&gt;A palavra IDLE é o acrônimo de &lt;strong&gt;Integrated Development and Learning Environment&lt;/strong&gt;. O mesmo é um programa escrito em Python para ser utilizado como um ambiente de desenvolvimento integrado para execução de Script´s. A aplicação vem junto com a maioria das instalações do Python e está presente na distribuição oficial desde a versão 2.3.&lt;/p&gt;
&lt;p&gt;O editor está construido 100% em Python, logo, toda a parte gráfica foi desenvolvida utilizando a biblioteca Tkinter, um bind (versão) da biblioteca Tk disponibilizada nativamente para Python.&lt;/p&gt;
&lt;p&gt;De forma geral, podemos dizer que o objetivo do IDLE é proporcionar uma maneira rápida e fácil para o uso das funções e bibliotecas do Python, como também, proporcionar uma plataforma de estudo simples de ser utilizada, disponibilizando num único lugar, todos os recursos e bibliotecas do Python.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="repl"&gt;
&lt;h2&gt;REPL&lt;/h2&gt;
&lt;p&gt;A palavra R.E.P.L é um acronimo de &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop"&gt;Read–Eval–Print Loop&lt;/a&gt;, também chamado de Interactive Toplevel or Language Shell.&lt;/p&gt;
&lt;p&gt;Esse tipo de ferramenta apareceu com a linguagem LISP e fornece uma forma rápida e fácil para testar funções e estudar a linguagem.&lt;/p&gt;
&lt;p&gt;Para maiores informações, veja o artigo na &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop"&gt;Wikipedia&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="ubuntu"&gt;
&lt;h2&gt;UBUNTU&lt;/h2&gt;
&lt;p&gt;Se você estiver utilizando o Ubuntu será necessário instalar o IDLE manualmente. Para isso, abra o terminal e digite:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install idle
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="code-complete"&gt;
&lt;h2&gt;CODE COMPLETE&lt;/h2&gt;
&lt;p&gt;O IDLE vem evoluindo bastante nas últimas versões. Atualmente, o mesmo possui um &lt;strong&gt;code complete&lt;/strong&gt; bastante inteligente, que exibe os parâmetros das função, ou então, todas as funções que podem ser invocadas por determinada classe ou objeto.&lt;/p&gt;
&lt;img alt="Imagem mostrando CodeComplete do IDLE" src="../images/curso-de-python/idle-code-complete.png" /&gt;
&lt;p&gt;As teclas de atalho para chamar o CodeComplete são: Ctrl + Espaço. A forma como chamamos o CodeComplete do IDLE é igual a 99% das IDE´s.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="editor-de-scripts"&gt;
&lt;h2&gt;EDITOR DE SCRIPTS&lt;/h2&gt;
&lt;p&gt;O IDLE também possui um editor de Script de várias linhas. Para utiliza-lo acesse o Menu &lt;cite&gt;File -&amp;gt; New File&lt;/cite&gt;, ou então, pressione as teclas de atalho Ctrl + N. Em seguida, será aberta uma janela semelhante ao que temos abaixo.&lt;/p&gt;
&lt;img alt="Imagem mostrando CodeComplete do IDLE" src="../images/curso-de-python/idle-editor-scripts.png" /&gt;
&lt;p&gt;Como podemos ver na imagem, nesta janela é possível criar scripts que contenham várias linhas e em seguida, executar todo o arquivo. Para executar o código, inicialmente, salve o Script e em seguida, vá no Menu &lt;cite&gt;Run -&amp;gt; Run Module&lt;/cite&gt;, ou então, pressione a tecla de atalho F5. Feito isso, o Script será executado, caso não haja erros.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="funcionamento-basico-do-idle"&gt;
&lt;h2&gt;FUNCIONAMENTO BÁSICO DO IDLE&lt;/h2&gt;
&lt;p&gt;Para executar uma instrução no IDLE, basta digitarmos a mesma e pressionarmos a tecla Enter. Se a instrução enviada for válida, algo será impresso na tela ou então, nada acontecerá, salvo que o Cursor se posicionará numa nova linha.&lt;/p&gt;
&lt;p&gt;Se por exemplo, executarmos a soma entre 2 números inteiros, o resultado será impresso na linha seguinte a operação, como podemos ver na imagem a seguir:&lt;/p&gt;
&lt;img alt="Imagem mostrando a utilização do IDLE como uma simples calculadora" src="../images/curso-de-python/idle-calculadora.png" /&gt;
&lt;p&gt;Como podemos ver na imagem, se mandarmos somar 2 números o resultado é impresso na linha seguinte. O mesmo resultado pode ser obtido, passando a soma como parâmetro pela função &lt;cite&gt;print()&lt;/cite&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
&lt;span class="mi"&gt;20&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;20&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Após o resultado ser apresentado, o cursor é liberado para que seja possível entrar outra instrução.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="retornando-instrucoes-anteriores"&gt;
&lt;h2&gt;RETORNANDO INSTRUÇÕES ANTERIORES&lt;/h2&gt;
&lt;p&gt;A maior crítica sobre a utilização do IDLE, sem dúvidas, está no fato das teclas de atalho para voltar a última instrução enviada. Normalmente, para retornarmos a última instrução no Prompt de Comando ou então, no Shell do Linux, utilizamos as setas para cima e para baixo. Porém, no IDLE, se utilizarmos as teclas para cima e para baixo, ocorrerá que iremos posicionar o cursor na direção pressionada.&lt;/p&gt;
&lt;p&gt;Existe uma razão pela qual as teclas para cima e para baixo não foram utilizadas e também, rapidamente nos acostumamos com as teclas utilizadas por padrão pelo IDLE.&lt;/p&gt;
&lt;p&gt;Alt + P - para voltar a última instrução digitada. A letra 'P' vem de &amp;quot;previous&amp;quot;.
Alt + N - para avançar. O 'N' vem de &amp;quot;Next&amp;quot;.&lt;/p&gt;
&lt;p&gt;Assim, temos a capacidade de avançar ou então retroceder nas instruções que digitamos.&lt;/p&gt;
&lt;p&gt;Caso as teclas de atalho para avançar e retroceder as instruções lhe for incomodo, é possível alterá-las acessando o Menu do IDLE, para isso, vá em &lt;cite&gt;Option -&amp;gt; Configure IDLE -&amp;gt; Keys&lt;/cite&gt; e então, defina a tecla de atalho a ação que desejares.&lt;/p&gt;
&lt;img alt="Imagem do IDLE exibindo a janela Options para a alteração das teclas de atalho para avançar e retroceder no histórico de instruções executadas." src="../images/curso-de-python/idle-keys-next-previous-history.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="utilizando-varias-secoes"&gt;
&lt;h2&gt;UTILIZANDO VÁRIAS SEÇÕES&lt;/h2&gt;
&lt;p&gt;Quando inicializamos o IDLE é aberta uma janela que contém um editor e é inicializado uma seção do Python. Tudo que for feito numa janela, estará disponível só e somente só na seção do Python inicializada especialmente para essa janela. Se o IDLE for reiniciado, ou então, se você estiver trabalhando com várias janelas abertas, cada uma terá uma seção independente do Python, onde poderás importar bibliotecas, definir variáveis ou então, poderás fazer o que bem entender. Assim, temos que uma variável declarada na &amp;quot;Janela A&amp;quot;, não estará disponível na &amp;quot;Janela B&amp;quot;, da mesma forma que, uma variável declaradas na execução do &amp;quot;Programa X&amp;quot;, não estará disponível na execução do &amp;quot;Programa Y&amp;quot;.&lt;/p&gt;
&lt;p&gt;Muitas vezes, importamos diversas bibliotecas numa seção, ou então, alteramos algum funcionamento interno das bibliotecas do Python para estudarmos ou então, realizarmos testes.&lt;/p&gt;
&lt;p&gt;Sempre que desejares, é possível reiniciar a seção em que estamos trabalhando e assim, remover quaisquer alterações feitas ou então, remover qualquer objeto criado em memória. Para isso, vá no Menu &lt;cite&gt;Shell -&amp;gt; Restart Shell&lt;/cite&gt; ou então, pressione as teclas de atalho &lt;cite&gt;CTRL + F6&lt;/cite&gt;. Em seguida, uma linha horizontal será traçada e será escrito no centro do vídeo &lt;tt class="docutils literal"&gt;RESTART&lt;/tt&gt;, como pode ser visto na imagem abaixo:&lt;/p&gt;
&lt;img alt="Imagem do IDLE reiniciado com uso da tecla de atalho Ctrl + F6" src="../images/curso-de-python/idle-restart.png" /&gt;
&lt;p&gt;Como a imagem acima esta mostrando, a variável que foi declarada antes da reinicialização do IDLE não está mais disponível, até porque, a seção que estava sendo utilizada foi destruida e em seguida, uma nova seção do Python foi inicializada.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="utilizando-o-ultimo-resultado"&gt;
&lt;h2&gt;UTILIZANDO O ÚLTIMO RESULTADO&lt;/h2&gt;
&lt;p&gt;É comum que precisarmos utilizar o último valor que foi retornado pelo IDLE, isto é, vamos supor que nós estejamos fazendo um cálculo, logo, é comum precisarmos do último resultado. Pra isso, podemos utilizar o caractere de underline ( _ ) para assim acessarmos a instância do último valor, por exemplo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#realizamos uma simples soma entre 2 valores&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
&lt;span class="mi"&gt;20&lt;/span&gt;
&lt;span class="c1"&gt;#utilizamos o último resultado e somamos mais 10 unidades ao mesmo&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
&lt;span class="mi"&gt;30&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Como pode ser visto no código acima, inicialmente realizamos a soma de 2 operandos. Na sequência, utilizamos o caractere de underline para assim somarmos mais 10 unidades ao resultado da primeira expressão.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="teclas-de-atalho-do-idle"&gt;
&lt;h2&gt;TECLAS DE ATALHO DO IDLE&lt;/h2&gt;
&lt;p&gt;A seguir, temos as teclas de atalho que estudamos nessa aula e também, os atalhos que podem ser considerados os principais da utilização básica do IDLE.&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Alt + P -&amp;gt; retorna última instrução&lt;/li&gt;
&lt;li&gt;Alt + N -&amp;gt; avança para a próxima instrução&lt;/li&gt;
&lt;li&gt;Ctrl + F6 -&amp;gt; Reinicia o IDLE&lt;/li&gt;
&lt;li&gt;Ctrl + N -&amp;gt; Abre o editor de Script´s de várias linhas&lt;/li&gt;
&lt;li&gt;Ctrl + Enter -&amp;gt;&lt;/li&gt;
&lt;li&gt;Ctrl + C -&amp;gt; interrompe a execução (Script em looping)&lt;/li&gt;
&lt;li&gt;Ctrl + Espaço -&amp;gt; abre o Code Complete&lt;/li&gt;
&lt;li&gt;Tab -&amp;gt; abre o Code Complete&lt;/li&gt;
&lt;li&gt;Ctrl + J -&amp;gt; adiciona linha e move o cursor para a mesma&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="personalizando-o-idle"&gt;
&lt;h2&gt;PERSONALIZANDO O IDLE&lt;/h2&gt;
&lt;p&gt;Como vimos, o IDLE é construído só e somente só com a linguagem Python, e toda a parte gráfica está escrita utilizando a biblioteca nativa Tkinter. Porém, é possível personalizarmos o IDLE das mais diversas maneiras e inclusive, somos capazes de criar nossos próprios temas e até, distribuí-los.&lt;/p&gt;
&lt;p&gt;Para personalizar o IDLE, vá no Menu &lt;cite&gt;Option -&amp;gt; Configure IDLE...&lt;/cite&gt;. Em seguida, será aberta uma janela semelhante a que temos abaixo:&lt;/p&gt;
&lt;img alt="Janela inicial do IDLE Preferences" src="../images/curso-de-python/idle-preferences-1.png" /&gt;
&lt;p&gt;Como podemos ver na imagem acima, a primeira aba do menu de preferências do IDLE é &lt;cite&gt;Fonts/Tabs&lt;/cite&gt;. Nesta, podemos escolher qual a fonte a ser utilizada pelo editor na lista contida dentro do GroupBox &lt;cite&gt;Base Editor Font&lt;/cite&gt;. Abaixo da listagem de fontes disponíveis, há a opção &lt;cite&gt;Size&lt;/cite&gt;, onde é possível definir o tamanho da fonte do editor e ao lado de &lt;cite&gt;Size&lt;/cite&gt;, há um CheckBox de nome &lt;cite&gt;Bold&lt;/cite&gt; que define se o texto deve ou não estar em Negrito.&lt;/p&gt;
&lt;img alt="Janela IDLE Preferences com a aba Highlighting selecionada" src="../images/curso-de-python/idle-preferences-2.png" /&gt;
&lt;p&gt;A aba Highlighting do IDLE permite-nos definir o sistema de cor a ser utilizado. Inicialmente, observe a caixa ao lado direito da janela de nome &lt;cite&gt;Highlighting Theme&lt;/cite&gt;. Nesta, podemos selecionar inicialmente se a alteração das cores será feita no tema que está sendo exibido no caso, a opção a &lt;cite&gt;Built-in Theme&lt;/cite&gt;, ou então, podemos definir a opção &lt;cite&gt;a Custom Theme&lt;/cite&gt; que habilitará os controles abaixo.&lt;/p&gt;
&lt;p&gt;No primeiro Controle habilitado, há algumas opções de temas que estão instalados. Quando você seleciona outro tema, no mesmo momento, o editor ao lado esquerdo é alterado conforme as cores definidas no tema selecionado.&lt;/p&gt;
&lt;p&gt;Agora, no GroupBox a esquerda de nome &lt;cite&gt;Custom Highlighting&lt;/cite&gt;, temos a disposição todas as definições da linguagem Python. Logo, podemos alterar a cor de Background ou então, do Foreground de cada opção.&lt;/p&gt;
&lt;p&gt;Se você for com o mouse em cima do Editor, poderás clicar em qual definição desejas alterar e assim, bastará selecionar a cor deseja.&lt;/p&gt;
&lt;img alt="Janela IDLE Preferences com a aba Keys selecionada" src="../images/curso-de-python/idle-preferences-3.png" /&gt;
&lt;p&gt;A aba Keys já foi vista anteriormente, nesta, temos a definição de todas as teclas de atalho do IDLE e assim, podemos selecionar e em seguida, alterar a definição de tecla de atalho que desejamos.&lt;/p&gt;
&lt;img alt="Janela IDLE Preferences com a aba General selecionada" src="../images/curso-de-python/idle-preferences-4.png" /&gt;
&lt;p&gt;A última aba é de nome &lt;cite&gt;General&lt;/cite&gt;. Nesta, há opções configurações diversas. Inicialmente, temos o GroupBox &lt;cite&gt;Startup Preferences&lt;/cite&gt;. Neste, podemos definir se ao abrirmos o IDLE o mesmo será aberto no mode &lt;cite&gt;Shell Window&lt;/cite&gt;, isto é, o modo padrão, onde digitamos a instrução, pressionamos a tecla Enter e a mesma é executada.&lt;/p&gt;
&lt;p&gt;Se definirmos a opção de abertura como sendo &lt;cite&gt;Open Edit Window&lt;/cite&gt;, o IDLE será aberto com a tela de Edição de Scripts que estudamos anteriormente.&lt;/p&gt;
&lt;p&gt;A opção a seguir é &lt;cite&gt;Autosave Preferences&lt;/cite&gt;. Nesta, podemos definir se ao executarmos o Script na janela de Edição de Scripts será perguntado se desejamos salvar ou então, se o código será salvo automaticamente. É importante observar que inicialmente será perguntado onde desejamos salvar o arquivo de Script e somente em seguida, é que o salvamento será realizado automaticamente.&lt;/p&gt;
&lt;p&gt;Em seguida temos a opção &lt;cite&gt;Initial Window Size (in character)&lt;/cite&gt;. Está opção permite-nos definir a largura e a altura do editor. É importante observar que as dimensões são calculadas pela quantidade de caracteres e não em pixels. Quando estudarmos a biblioteca Tkinter iremos entender o porque dessa especificação!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="consideracoes-finais"&gt;
&lt;h2&gt;CONSIDERAÇÕES FINAIS&lt;/h2&gt;
&lt;p&gt;Nesse artigo estudamos o mínimo sobre o IDLE e aprendemos somente as teclas de atalho essenciais para que possamos utilizar o ambiente para testes e estudos disponibilizado nas principais versões do Python.&lt;/p&gt;
&lt;p&gt;É possível obter muito mais do que o demonstrado e podemos explorar diversos outros recursos acessando o Menu do próprio editor.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="links-externos"&gt;
&lt;h2&gt;LINKS EXTERNOS&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://lwn.net/1999/0114/a/idle.html"&gt;Anuncio na lista de discussão oficial (en)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.python.org/3/library/idle.html"&gt;IDLE (en)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://en.wikipedia.org/wiki/IDLE"&gt;Wikipedia (en)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="python"></category><category term="idle"></category><category term="ide"></category><category term="editor"></category><category term="blog"></category></entry><entry><title>Recursos do Python</title><link href="http://excript.com/python/recursos-python.html" rel="alternate"></link><published>2016-05-01T21:20:00-03:00</published><updated>2016-05-01T21:20:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-05-01:/python/recursos-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula continuaremos nosso estudo sobre as características das linguagem Python e seus recursos. Nesse momento, discutiremos as formas para disponibilizarmos nossos programas, as bibliotecas gráficas, os paradigmas da linguagem, extensibilidade e muito mais.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="caracteristicas-da-linguagem"&gt;
&lt;h2&gt;CARACTERÍSTICAS DA LINGUAGEM&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;extensível&lt;/dt&gt;
&lt;dd&gt;O projeto do &lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt; previu, desde as primeiras versões, ferramentas para que …&lt;/dd&gt;&lt;/dl&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula continuaremos nosso estudo sobre as características das linguagem Python e seus recursos. Nesse momento, discutiremos as formas para disponibilizarmos nossos programas, as bibliotecas gráficas, os paradigmas da linguagem, extensibilidade e muito mais.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="caracteristicas-da-linguagem"&gt;
&lt;h2&gt;CARACTERÍSTICAS DA LINGUAGEM&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;extensível&lt;/dt&gt;
&lt;dd&gt;O projeto do &lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt; previu, desde as primeiras versões, ferramentas para que outros programadores pudessem facilmente, extender a linguagem. Assim, podemos criar novas bibliotecas com as mais diversas linguagens, como C, C++, Pascal e etc. Dessa forma, podemos criar extensões com diversas linguagens e, em seguida, invocar essa funções, que foram definidas em outras linguagens, de dentro dos nossos códigos em Python.&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;acesso aos principais Banco de Dados&lt;/dt&gt;
&lt;dd&gt;Nativamente, o &lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt; disponibiliza acesso ao banco de dados SQLite. Porém, basta somente adicionarmos as bibliotecas (drivers) de determinado banco de dados, para que então, possamos negociar dados com determinada base.&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;GUI (Graphical User Interface)&lt;/dt&gt;
&lt;dd&gt;A linguagem &lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt; trás, nativamente, bibliotecas para o desenvolvimento janelas gráficas. Existem, hoje, existem várias bibliotecas gráficas que podemos utilizar em nossos projetos, bastando somente instalarmos as mesmas. Inclusive, a biblioteca &lt;a class="reference external" href="http://kivy.org"&gt;kivy&lt;/a&gt;, está sendo desenvolvido do zero e permite a criação de aplicações gráficas que podem ser acessadas, no Windows, Linux, MacOs, Android, iOS, dentre outros sistemas.&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;escalável&lt;/dt&gt;
&lt;dd&gt;As aplicações escritas em &lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt; podem ser facilmente escaláveis conforme a necessidade do software que estamos desenvolvendo.&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;multiparadigma&lt;/dt&gt;
&lt;dd&gt;O &lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt; é uma linguagem multiparadigma, isto é, podemos estruturar nosso código com o paradigma Orientado a Objetos, ou então, com o paradigma Procedural.&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;script e compilada&lt;/dt&gt;
&lt;dd&gt;Podemos disponibilizar nossa aplicação como sendo um script ou então, podemos gerar um executável para determinada plataforma. Porém, por padrão, o Python é uma linguagem interpretada, logo, outras formas de distribuição até são suportadas, porém, geralmente, temos que instalar bibliotecas de terceiros para este fim.&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Nesse momento, finalizamos nosso estudo sobre as principais características e recurso da linguagem Python! Poderíamos enumerar muitos outros recursos, porém, nesse momento, citamos os principais e as mais importantes características da linguagem.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="veja-tambem"&gt;
&lt;h2&gt;VEJA TAMBÉM&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/primeira-aula-python.html"&gt;Aula 1: Introdução ao Curso de Python da eXcript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/como-instalar-o-python-windows.html"&gt;Aula 2: Como instalar o Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/caracteristica-python.html"&gt;Aula 3: Características do Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/recursos-python.html"&gt;Aula 4: Recursos do Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/instalando-o-pycharm-windows.html"&gt;Aula 6: Instalando a IDE PyCharm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/primeiro-programa-em-python.html"&gt;Aula 7: Primeiro programa em Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="python"></category><category term="caracteristica do python"></category><category term="recursos do python"></category><category term="blog"></category></entry><entry><title>Características do Python</title><link href="http://excript.com/python/caracteristica-python.html" rel="alternate"></link><published>2016-05-01T21:00:00-03:00</published><updated>2016-05-01T21:00:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-05-01:/python/caracteristica-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos os principais recursos e características da linguagem Python e analisaremos em detalhe alguns aspecto que do Python uma das linguagens com maior crescimento nos últimos anos. Discutiremos as dificuldade nos estudo da linguagem, a sintaxe, o código resultante e a complexidade na manutenção de aplicações.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="recursos-da-linguagem"&gt;
&lt;h2&gt;RECURSOS DA …&lt;/h2&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos os principais recursos e características da linguagem Python e analisaremos em detalhe alguns aspecto que do Python uma das linguagens com maior crescimento nos últimos anos. Discutiremos as dificuldade nos estudo da linguagem, a sintaxe, o código resultante e a complexidade na manutenção de aplicações.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="recursos-da-linguagem"&gt;
&lt;h2&gt;RECURSOS DA LINGUAGEM&lt;/h2&gt;
&lt;p&gt;São várias as características do &lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt; que o tornam uma linguagem tão promissora e, que atrai a cada dia, mais desenvolvedores. A seguir, foram elucidados alguma dessas características e junto, uma breve descrição.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;fácil de aprender&lt;/dt&gt;
&lt;dd&gt;O &lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt; é uma linguagem fácil de ser aprendida e poderosa para trabalharmos. A mesma possui uma sintaxe limpa e clara, como também, contém um conjunto de bibliotecas estáveis e bem estruturadas.&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;fácil leitura e compreensão&lt;/dt&gt;
&lt;dd&gt;A sintaxe da linguagem é minimalista, isso é, mantém somente o necessário, o que torna o código escrito, muitas vezes, a um texto em Inglês.&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;fácil manutenção&lt;/dt&gt;
&lt;dd&gt;Em decorrência da simplicidade sintática e da excelente estruturação das bibliotecas, a manutenção de códigos, seja aquele que desenvolvemos ou mesmo de terceiros, muito mais fácil e compreensível.&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;multiplataforma&lt;/dt&gt;
&lt;dd&gt;O interpretador do Python é escrito com a Linguagem C e C++, assim, o mesmo pode ser portado a todas as plataformas que possuam compiladores para a linguagem. Tendo em vista que o C++ é a linguagem mais difundida e a base de praticamente toda a informática, temos compiladores nativos ou portados para quase todas as plataformas existentes.&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;modo interativo&lt;/dt&gt;
&lt;dd&gt;Sendo o &lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt; uma linguagem interpretada, foi possível o desenvolvimento de ferramentas interativas, isto é, ferramentas majoritariamente em linha de comando, onde podemos executar instruções e analisar a saída.&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Os tópicos aqui elucidados estão longe de esgotar os recursos do Python! Por essa razão, continuaremos o nosso estudo sobre as principais características e recursos da linguagem na próxima aula.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="veja-tambem"&gt;
&lt;h2&gt;VEJA TAMBÉM&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/primeira-aula-python.html"&gt;Aula 1: Introdução ao Curso de Python da eXcript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/como-instalar-o-python-windows.html"&gt;Aula 2: Como instalar o Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/caracteristica-python.html"&gt;Aula 3: Características do Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/recursos-python.html"&gt;Aula 4: Recursos do Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/instalando-o-pycharm-windows.html"&gt;Aula 6: Instalando a IDE PyCharm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/primeiro-programa-em-python.html"&gt;Aula 7: Primeiro programa em Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="python"></category><category term="caracteristica do python"></category><category term="recursos do python"></category><category term="blog"></category></entry><entry><title>Como Instalar o Python no Windows</title><link href="http://excript.com/python/como-instalar-o-python-windows.html" rel="alternate"></link><published>2016-05-01T18:00:00-03:00</published><updated>2016-05-01T18:00:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-05-01:/python/como-instalar-o-python-windows.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos como fazer o download do Python, qual versão escolher, e como realizar a instalação do Python no Windows.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="maquina-virtual-python"&gt;
&lt;h2&gt;MÁQUINA VIRTUAL PYTHON&lt;/h2&gt;
&lt;p&gt;O Python é composto por um conjunto de bibliotecas e um arquivo executável, no caso, o interpretador da linguagem Python. Quando instalamos o Python em nosso …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos como fazer o download do Python, qual versão escolher, e como realizar a instalação do Python no Windows.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="maquina-virtual-python"&gt;
&lt;h2&gt;MÁQUINA VIRTUAL PYTHON&lt;/h2&gt;
&lt;p&gt;O Python é composto por um conjunto de bibliotecas e um arquivo executável, no caso, o interpretador da linguagem Python. Quando instalamos o Python em nosso computador, o que fazemos de fato, é instalar um programa que executa código Python e adicionar, no Path do sistema, o local em que o interpretador da linguagem Python está contido.&lt;/p&gt;
&lt;p&gt;O programa executável do Python, isto é, o interpretador, é também chamado de &lt;strong&gt;Máquina Virtual do Python&lt;/strong&gt; . A expressão &lt;a class="reference external" href="https://pt.wikipedia.org/wiki/M%C3%A1quina_virtual"&gt;Máquina Virtual&lt;/a&gt; é decorrente do fato que o programa Python propriamente dito, executa instruções que juntas, formam programas, e essas instruções são executadas pelo interpretador de maneira análoga as instruções de arquivos executáveis que são executadas pelo Computador.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="baixando-e-instalando-o-python"&gt;
&lt;h2&gt;BAIXANDO E INSTALANDO O PYTHON&lt;/h2&gt;
&lt;p&gt;O Python é distribuido gratuitamente e toda sua documentação pode ser encontrada no site da organização Python: &lt;cite&gt;https://www.python.org/&lt;/cite&gt;. Para fazermos o download do Interpretador Python, temos que acessar o site, em seguida clicar no menu &lt;tt class="docutils literal"&gt;Downloads&lt;/tt&gt;. Feito isso, a página de download será aberta, como pode ser visto na imagem a seguir:&lt;/p&gt;
&lt;img alt="Imagem com o Download da instalação do Python" src="../images/curso-de-python/download-python.png" /&gt;
&lt;p&gt;Caso queiras ir &lt;a class="reference external" href="`https://www.python.org/downloads/`"&gt;direto à página de download do Python, utilize este link&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Baixe o instalador conforme o Sistema Operacional que estejas utilizando! Também é necessário escolher entre a versão de 32bits ou 64bits, conforme a arquitetura do seu processador! Se estiveres utilizando o Windows 8 ou superior, estaras, numa arquitetura de 64 bits. Do contrário, terás que descobrir em qual arquitetura estás trabalhando.&lt;/p&gt;
&lt;p&gt;Em caso de dúvida, deixe um comentário ou então, leia o comentário do pessoal. Muito provavelmente alguém já teve um problema igual ou semelhante ao seu, e assim, uma olhada rápida nos comentários dos nossos colegas pode lhe salvar algumas horas de dor de cabeça!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="usuarios-linux-outras-distros"&gt;
&lt;h2&gt;USUÁRIOS LINUX / OUTRAS DISTROS&lt;/h2&gt;
&lt;p&gt;Nesta aula não foi contemplado a instalação do Python em outros sistemas operacionais. Usuários do MacOS e do Ubuntu já possuem o Python instalado de fábrica, e também, as maiores e principais distros Linux, já vem com o Python instalado por padrão.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="qual-o-problema-entao"&gt;
&lt;h2&gt;QUAL O PROBLEMA ENTÃO?&lt;/h2&gt;
&lt;p&gt;A versão do Python que está instalada. Nesse curso, trabalhamos com a versão 3x do Python, mas a maioria dos sistemas operacionais vem com o Python 2.7 de fábrica.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="qual-a-razao-de-haver-2-versoes-2-7-xxxx-e-3-xxx-xxx"&gt;
&lt;h2&gt;QUAL A RAZÃO DE HAVER 2 VERSÕES 2.7.xxxx E 3.xxx.xxx?&lt;/h2&gt;
&lt;p&gt;A versão 3 do Python sofreu mudanças estruturais significantes, a mais simples, podemos dizer, num primeiro momento, é o fato de você ser obrigado a utilizar parêntesis na função &lt;tt class="docutils literal"&gt;print()&lt;/tt&gt;. Essa é uma única mudança, há diversas outras, principalmente na parte de Orientação a Objetos e a estrutura interna das classes.&lt;/p&gt;
&lt;p&gt;Com o objetivo de evitar o &lt;strong&gt;caos&lt;/strong&gt; e o trauma de toda e qualquer mudança abrupta, optou-se, num primeiro momento, por utilizar 2 versões do Python em paralelo. Por isso é que temos a versão 2.7.x e a versão 3.x. O Python 2.7.x suporta a maior parte das mudanças do Python 3, mas o contrário não é verdade. Ou seja, o Python 3 não suporta o Python 2.7.&lt;/p&gt;
&lt;p&gt;Mas não se preocupe com isso nesse momento! Porém, não esqueça: &lt;strong&gt;vamos trabalhar com a versão 3.x do Python neste curso!&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="o-que-e-importante-saber"&gt;
&lt;h2&gt;O QUE É IMPORTANTE SABER?&lt;/h2&gt;
&lt;p&gt;Existem 2 versões OFICIAIS: a versão 2.7 e a versão 3x do Python. A versão 2.7 é a que será descontinuada em 2022 e a mesma, vem, gradativamente, sofrendo diversas modificações. Assim, o que acontece, é que não haverá uma mudança abrupta, e sim, ocorrerá que a versão 2.7 se &amp;quot;encontrara&amp;quot; com a versão 3.x.x.&lt;/p&gt;
&lt;p&gt;A cada nova versão do Python 2.7, há mudanças que devem ser feitas em código legado a fim de manter a compatibilidade. Logo, o que acontece é, que ambas versões caminham juntas e paralelas. As mudanças a nível de código são implementadas nas duas versões, porém, como já dito, a versão 2.7 não funciona na versão 3.x.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="qual-a-minha-versao-do-python"&gt;
&lt;h2&gt;QUAL A MINHA VERSÃO DO PYTHON?&lt;/h2&gt;
&lt;p&gt;Vá no prompt/shell/bash e digite:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;python
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Se nada acontecer, tente digitar somente a palavra:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;py
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;O texto que impresso deverá ser semelhante ao ao texto a seguir:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;python

Python &lt;span class="m"&gt;3&lt;/span&gt;.5 &lt;span class="o"&gt;(&lt;/span&gt;default, Mar  - YYYY, hh:mm:ss&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;MSC v.1600 &lt;span class="m"&gt;64&lt;/span&gt; bit &lt;span class="o"&gt;(&lt;/span&gt;AMD64&lt;span class="o"&gt;)]&lt;/span&gt; on win32
Type &lt;span class="s2"&gt;&amp;quot;copyright&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;credits&amp;quot;&lt;/span&gt; or &lt;span class="s2"&gt;&amp;quot;license()&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; more information.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;OU ENTÃO:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;python
Python &lt;span class="m"&gt;3&lt;/span&gt;.6 &lt;span class="p"&gt;|&lt;/span&gt;Anaconda &lt;span class="m"&gt;2&lt;/span&gt;.2.0 &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;64&lt;/span&gt;-bit&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;default, Mar  YYYY, hh:mm:ss&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;MSC v.1600 &lt;span class="m"&gt;64&lt;/span&gt; bit &lt;span class="o"&gt;(&lt;/span&gt;AMD64&lt;span class="o"&gt;)]&lt;/span&gt; on win32
Type &lt;span class="s2"&gt;&amp;quot;copyright&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;credits&amp;quot;&lt;/span&gt; or &lt;span class="s2"&gt;&amp;quot;license()&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; more information.
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="se-eu-tiver-o-python-instalado-e-nada-acontecer"&gt;
&lt;h2&gt;SE EU TIVER O PYTHON INSTALADO E NADA ACONTECER?&lt;/h2&gt;
&lt;p&gt;Isso ocorre nas situações quando o local de instalação do Python não está nas variáveis do sistema. As variáveis do sistema apontam para diretórios onde o SO que estamos utilizando irá buscar os programas que devem ser reconhecidos na linha de comando ou por outros softwares de maneira automática.&lt;/p&gt;
&lt;p&gt;Nos sistemas Linux, raramente a instalação não é encontrada, mas nas versões do Windows, isso ocorre muito mais facilmente, até porque, é possível, nas instalações do Python, pedir que o mesmo não adicione o PATH [caminho ou diretório] da instalação atual, nas variáveis do sistema. Logo, você terá que ir nas opções do sistema, no caso, em Programas Instalados e procurar por alguma instalação do Python. Se nada for encontrado, e você não tiver feito a instalação via compilação através do fontes, então o Python não está instalado.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="veja-tambem"&gt;
&lt;h2&gt;VEJA TAMBÉM&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/primeira-aula-python.html"&gt;Aula 1: Introdução ao Curso de Python da eXcript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/como-instalar-o-python-windows.html"&gt;Aula 2: Como instalar o Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/caracteristica-python.html"&gt;Aula 3: Características do Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/recursos-python.html"&gt;Aula 4: Recursos do Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/instalando-o-pycharm-windows.html"&gt;Aula 6: Instalando a IDE PyCharm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/primeiro-programa-em-python.html"&gt;Aula 7: Primeiro programa em Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="python"></category><category term="download"></category><category term="instalação"></category><category term="windows"></category><category term="instalação no windows"></category><category term="blog"></category></entry><entry><title>Primeira Aula de Python</title><link href="http://excript.com/python/primeira-aula-python.html" rel="alternate"></link><published>2016-05-01T17:50:00-03:00</published><updated>2016-05-01T17:50:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-05-01:/python/primeira-aula-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Está é a primeira aula do Curso de Python! Um curso totalmente gratuito, disponibilizado inicialmente no YouTube, e agora, também, na plataforma da eXcript. Nesta primeira Aula de Python, faremos um simples programa e veremos algumas características do Curso de Programação Python da eXcript.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="introducao"&gt;
&lt;h2&gt;INTRODUÇÃO&lt;/h2&gt;
&lt;p&gt;Seja bem-vindo a primeira aula …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Está é a primeira aula do Curso de Python! Um curso totalmente gratuito, disponibilizado inicialmente no YouTube, e agora, também, na plataforma da eXcript. Nesta primeira Aula de Python, faremos um simples programa e veremos algumas características do Curso de Programação Python da eXcript.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="introducao"&gt;
&lt;h2&gt;INTRODUÇÃO&lt;/h2&gt;
&lt;p&gt;Seja bem-vindo a primeira aula do &lt;strong&gt;Curso de Python&lt;/strong&gt;!!&lt;/p&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;É com muita satisfação que disponibilizamos publicamente e gratuitamente o &lt;a class="reference external" href="http://excript.com/curso-de-python.html"&gt;Curso de Python&lt;/a&gt; e que pode ser estudado por qualquer pessoa que tenha conhecimentos mínimos sobre o funcionamento do sistema operacional. Podemos dizer que, qualquer pessoa que saiba utilizar o &lt;a class="reference external" href="https://www.facebook.com/excript/"&gt;Facebook&lt;/a&gt; e saiba como copiar e colar texto, já possui os pré-requisitos para iniciar os estudos de programação através deste curso.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="a-linguagem-de-programacao-python"&gt;
&lt;h2&gt;A LINGUAGEM DE PROGRAMAÇÃO PYTHON&lt;/h2&gt;
&lt;p&gt;O &lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt; é uma linguagem ímpar, projetada para ser simples e desenhada para ser eficaz. Seu uso vem crescendo exponencialmente e atualmente, diversas universidades ao redor do mundo estão ensinando Python como a primeira linguagem de programação. Isso porque, a linguagem possui uma fácil leitura e por conseguinte, acaba tendo uma fácil compreensão.&lt;/p&gt;
&lt;p&gt;A linguagem foi inicialmente desenvolvida por &lt;a class="reference external" href="https://www.python.org/~guido/"&gt;Guido van Rossum&lt;/a&gt; em meados de 1991. Um dos principais conceitos sobre a linguagem é, que a mesma, é interpretada. Isto é, o código &lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt; é interpretado por um programa escrito na linguagem &lt;a class="reference external" href="http://excript.com/curso-c.html"&gt;C&lt;/a&gt; e &lt;a class="reference external" href="http://excript.com/curso-cpp.html"&gt;C++&lt;/a&gt;. Este programa que entende e executa os códigos &lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt;, é chamado de interpretador Python, ou então, a Máquina Virtual &lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Todas as vezes em que executarmos um programa escrito em &lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt;, este só será executado se a Máquina Virtual do Python estiver instalado no computador em que está sendo executado.&lt;/p&gt;
&lt;p&gt;Devido a facilidade em codificar e tendo como resultado um código limpo e legível, o Python acaba se tornando uma linguagem fácil de dar manutenção. Se você já programa, com certeza já precisasse dar manutenção em códigos de terceiro, e muito provavelmente, essa não foi a melhor atividade que já fizeste em vida. Agora, quando precisares dar suporte a códigos Python, rapidamente percebemos que não é tão complexo como se fosse, por exemplo, um código Java ou C++.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="caracteristicas-do-python"&gt;
&lt;h2&gt;CARACTERÍSTICAS DO PYTHON&lt;/h2&gt;
&lt;p&gt;O &lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt; é uma linguagem que proporciona alta produtividade, isto é, conseguimos escrever grandes aplicações em pouco tempo e, com poucas linhas de código. Essa característica decorre da maneira como a linguagem está projetada e, dos princípios empregados pela comunidade na construção das bibliotecas.&lt;/p&gt;
&lt;p&gt;Um programa em Python, muitas vezes, parece a um texto escrito em Inglês. E também, trechos de código Python, podem ser lido por leigos e estes, até conseguirão entender, a maior parte do que o programador está mandando o computador fazer.&lt;/p&gt;
&lt;p&gt;Em &lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt; conseguimos trabalhar com os conceitos de Programação Orientada a Objetos de maneira simples. Conseguimos facilmente representar um tipo de dado abstrato, inclusive, podemos criar um novo tipo de dados através da junção de outras estruturas, utilizando, por exemplo, a herança ou herança múltipla.&lt;/p&gt;
&lt;p&gt;Diferentemente de outras linguagens, em &lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt;, não há restrições quanto ao acesso a membros de classes. A linguagem parte do princípio que o programador sabe o que está fazendo, ao contrário das linguagens C++ e Java, que partem do princípio que as estruturas devem ser protegidas de uma possível má utilização.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="faq-frequently-asked-questions"&gt;
&lt;h2&gt;FAQ (Frequently Asked Questions)&lt;/h2&gt;
&lt;div class="section" id="posso-utilizar-o-notepad-ao-inves-do-pycharm"&gt;
&lt;h3&gt;POSSO UTILIZAR O NOTEPAD AO INVÉS DO &lt;tt class="docutils literal"&gt;PyCharm&lt;/tt&gt;?&lt;/h3&gt;
&lt;p&gt;Sem qualquer problema! Porém, você terá que escrever seu código e em seguir ir no Prompt de Comando, Shell e mandar executar o seu código.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="posso-utilizar-outra-ide"&gt;
&lt;h2&gt;POSSO UTILIZAR OUTRA IDE?&lt;/h2&gt;
&lt;p&gt;Sim! É possível acompanhar as aulas utilizando quaisquer IDE do mercado. Porém, esteja certo de que as configurações da IDE estejam corretas, como por exemplo, qual interpretador será utilizadi para executar o código.&lt;/p&gt;
&lt;p&gt;Nunca é demais repetir que não existe um programa que deve ser utilizado obrigatoriamente para construir outros programas. Todas as IDE são, em sua definição mais primitiva, editores de texto puro. Porém, esses software incorporaram uma série de funcionalidades que ajudam no desenvolvimento de software e assim, acabam sendo utilizadas pelos desenvolvedores.&lt;/p&gt;
&lt;div class="section" id="e-melhor-aprender-logica-de-programacao-antes-do-python"&gt;
&lt;h3&gt;É MELHOR APRENDER LÓGICA DE PROGRAMAÇÃO ANTES DO PYTHON?&lt;/h3&gt;
&lt;p&gt;Não! Inclusive, há muitas escolas que ensinam programação com a linguagem Python, logo, o mesmo pode ser utilizando para o aprendizado da programação, bem como, da lógica de programação.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="este-curso-exige-o-conhecimento-de-html-ou-css"&gt;
&lt;h3&gt;ESTE CURSO EXIGE O CONHECIMENTO DE HTML OU CSS?&lt;/h3&gt;
&lt;p&gt;Não! O Curso de Python da eXcript parte do início do estudo de qualquer linguagem de programação. Desta forma, é estudado as instruções fundamentais, bem como a sintaxe da linguagem. Portanto, o conhecimento de HTML ou de CSS não se faz necessário.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="quem-fez-o-python"&gt;
&lt;h3&gt;QUEM FEZ O PYTHON?&lt;/h3&gt;
&lt;p&gt;O &lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt; foi inicialmente desenvolvido pelo matemático &lt;a class="reference external" href="https://www.python.org/~guido/"&gt;Guido van Rossum&lt;/a&gt;. Atualmente, o Python é desenvolvido por um grupo de desenvolvedores ao redor do mundo. É importante observar que o desenvolvimento da linguagem de programação Python não se resume a implementação da sintaxe, construção da máquina virtual e etc. O Python possui centenas de módulos que são distribuídos por padrão, bem como dezenas de ferramentas, como o depurador, o &lt;a class="reference external" href="https://docs.python.org/3.5/library/idle.html"&gt;IDLE&lt;/a&gt;, a documentação da linguagem e etc.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://neopythonic.blogspot.com.br/"&gt;Blog do Guido van Rossum (en)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Guido_van_Rossum"&gt;Wikipedia Guido van Rossum (en)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://plus.google.com/u/0/115212051037621986145"&gt;Perfil G+ Guido van Rossum (en)&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="o-que-e-ide"&gt;
&lt;h3&gt;O QUE É IDE?&lt;/h3&gt;
&lt;p&gt;O termos IDE é um acrônimo de Integrated Development Environment que, numa tradução significa: Ambiente de Desenvolvimento Integrado. De forma geral, uma IDE é um programa que foi construído especialmente para a construção de programas.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="por-que-e-ensinado-a-logica-em-todos-os-cursos"&gt;
&lt;h3&gt;POR QUE É ENSINADO A LÓGICA EM TODOS OS CURSOS&lt;/h3&gt;
&lt;p&gt;Várias pessoas perguntam a razão pela qual eu não faço um Curso de Lógica de Programação e em seguida avance mais rapidamente nos cursos das linguagens em geral.&lt;/p&gt;
&lt;p&gt;Num primeiro momento há lógica no que está sendo dito, porém, numa análise sob o ensino da programação de maneira geral, essa metodologia seria um grande equívoco, como será demonstrado nas linhas a seguir.&lt;/p&gt;
&lt;p&gt;Inicialmente, qual é o livro, editora ou WebSite que ensina a lógica e depois as linguagens propriamente ditas? Particularmente, não conheço nenhum trabalho construído dessa maneira.&lt;/p&gt;
&lt;p&gt;Agora, quando já passamos pela fase básica da programação e conseguimos dominar a lógica fundamental, é comum querermos cursos em que haja somente as diferenças de cada linguagem, e não um curso completo. Porém, imagine-se agora, ou melhor, volte ao momento em que estavas aprendendo a sua primeira linguagem de programação e então veja, se você aprendeu a lógica e depois pegou a linguagem estudando somente as diferenças ou então, se você estudou toda a linguagem desde o início!&lt;/p&gt;
&lt;p&gt;E também, hoje é possível aprender uma nova linguagem em 3 ou 4 horas sem precisar ler uma única página de um livro e ainda assim, queremos aprender mais rapidamente!&lt;/p&gt;
&lt;p&gt;Em fim, é muito fácil pedir para que os cursos se adaptem a sua realidade do que se colocar no momento em que você estava aprendendo e, tenho certeza absoluta, queria ver exemplos da instrução :code:while, :code:for, :code:if com a linguagem propriamente dita, e não com Portugol ou derivados!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="qual-ano-o-python-foi-desenvolvido"&gt;
&lt;h3&gt;QUAL ANO O PYTHON FOI DESENVOLVIDO?&lt;/h3&gt;
&lt;p&gt;A Linguagem de Programação &lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt;, vem sendo desenvolvida desde 1991. Novas versões sempre são lançadas e estas trazem correções, alterações na sintaxe, implementações, utilitários e etc.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="python-e-somente-para-web"&gt;
&lt;h3&gt;PYTHON É SOMENTE PARA WEB?&lt;/h3&gt;
&lt;p&gt;É verdade que o Python é uma excelente linguagem para a construção de WebSites, porém, a linguagem foi criada antes da popularização da Web. Por essa razão, é fácil concluir que a linguagem Python não é destinada só e somente só a construção Web, mas sim, para a construção de aplicações em geral.&lt;/p&gt;
&lt;!-- Quais as características que definem o Python_?
O Python_ realmente é uma boa linguagem?
Quais os recursos do Python?
O que faz da linguagem Python_ ser especial? --&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="veja-tambem"&gt;
&lt;h2&gt;VEJA TAMBÉM&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/primeira-aula-python.html"&gt;Aula 1: Introdução ao Curso de Python da eXcript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/como-instalar-o-python-windows.html"&gt;Aula 2: Como instalar o Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/caracteristica-python.html"&gt;Aula 3: Características do Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/recursos-python.html"&gt;Aula 4: Recursos do Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/instalando-o-pycharm-windows.html"&gt;Aula 6: Instalando a IDE PyCharm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/primeiro-programa-em-python.html"&gt;Aula 7: Primeiro programa em Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="python"></category><category term="curso de python"></category><category term="eXcript"></category><category term="eXcript Brasil"></category><category term="blog"></category></entry><entry><title>Curso de Python</title><link href="http://excript.com/curso-de-python.html" rel="alternate"></link><published>2016-05-01T17:00:00-03:00</published><updated>2016-05-01T17:00:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-05-01:/curso-de-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Curso de Python, aprenda lógica de programação ao mesmo tempo em que você estuda a linguagem Python, a linguagem de programação mais fácil e rápida de ser estudada!&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="sobre-o-curso"&gt;
&lt;h2&gt;SOBRE O CURSO&lt;/h2&gt;
&lt;p&gt;O &lt;tt class="docutils literal"&gt;Curso de Python&lt;/tt&gt; da eXcript é a forma mais fácil para iniciar os estudos na linguagem de programação …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Curso de Python, aprenda lógica de programação ao mesmo tempo em que você estuda a linguagem Python, a linguagem de programação mais fácil e rápida de ser estudada!&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="sobre-o-curso"&gt;
&lt;h2&gt;SOBRE O CURSO&lt;/h2&gt;
&lt;p&gt;O &lt;tt class="docutils literal"&gt;Curso de Python&lt;/tt&gt; da eXcript é a forma mais fácil para iniciar os estudos na linguagem de programação &lt;strong&gt;Python&lt;/strong&gt;. As aulas partem do princípio que o aluno nunca programou e por isso, é ensinado o básico da programação, como por exemplo, a lógica, bem como a linguagem &lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt;, até a execução de lógicas complexas para a manipulação do fluxo de controle das aplicações.&lt;/p&gt;
&lt;p&gt;Vamos aprender ainda nas primeiras aulas a como instalar o Python, como instalar um programa para programarmos em Python [ IDE (editor de código) ], como executar código Python e tudo que você precisa conhecer.&lt;/p&gt;
&lt;p&gt;Então, este curso foi desenvolvido para quem não conhece &lt;strong&gt;absolutamente nada&lt;/strong&gt; ou então, para quem possui apenas uma base sobre outra linguagem ou mesmo, de &lt;strong&gt;Lógica de Programação&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="pre-requisitos"&gt;
&lt;h2&gt;PRÉ-REQUISITOS&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Não é necessário ter conhecimentos prévios de programação&lt;/strong&gt;! Se você tiver o conhecimento elementar de como utilizar um Sistema Operacional, já é o suficiente para acompanhar todas as Aulas de Programação de Computadores com a Linguagem &lt;tt class="docutils literal"&gt;Python&lt;/tt&gt;!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="sistema-operacional"&gt;
&lt;h2&gt;SISTEMA OPERACIONAL&lt;/h2&gt;
&lt;p&gt;O &lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt; pode ser executado nos principais sistemas operacionais do mercado. Por isso, sinta-se a vontade para escolher a plataforma onde irás instala-lo e executa-lo. Se por exemplo, tiveres 2 computadores, um com Windows e outro com Mac e venhas a estudar algumas aulas no Windows e outras no Mac, o resultado que irás obter, será o mesmo! Inclusive, sinta-se a vontade para copiar o código feito no Windows para o Mac e vice-e-versa, em tese, não pode haver quaisquer problemas, até porque, o Python é multi-plataforma!&lt;/p&gt;
&lt;p&gt;Neste curso utilizamos o sistema operacional Windows. Você poderá utilizar qualquer sistema operacional do mercado, como por exemplo, MacOS, Linux (qualquer distro), Microsoft Windows (qualquer versão).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="e-a-logica-de-programacao"&gt;
&lt;h2&gt;E A LÓGICA DE PROGRAMAÇÃO?&lt;/h2&gt;
&lt;p&gt;A &lt;strong&gt;Lógica de Programação&lt;/strong&gt; será ensinada junto com a linguagem &lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt;. Talvez você fique na dúvida se é melhor estudar a lógica de programação com linguagens que estejam em Português, como por exemplo, Portugol. &lt;strong&gt;Nós garantimos que não há necessidade de ter qualquer conhecimento de programação, ou de lógica, para acompanhar este curso&lt;/strong&gt;!&lt;/p&gt;
&lt;p&gt;A forma como irás estudar é indiferente, porém, não existe uma única razão para você fazer outro curso de programação para que somente então, inicie o estudo do Python!&lt;/p&gt;
&lt;p&gt;Centenas de universidades, sejam elas brasileiras ou então internacionais, utilizam o Python como a primeira linguagem. Inclusive, o instrutor desde curso, [eu Cláudio], iniciei meus estudos com uma linguagem de programação chamada Pascal, isto é, aprendi a lógica ao mesmo tempo em que aprendia a linguagem Pascal! Por isso, posso garantir-lhe:  &lt;strong&gt;não existe necessidade de fazer outro curso antes deste!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Economize tempo e vá direto ao assunto, aprenda &lt;strong&gt;Python&lt;/strong&gt; e &lt;strong&gt;Lógica de Programação&lt;/strong&gt; ao mesmo tempo!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="lista-das-aulas"&gt;
&lt;h2&gt;LISTA DAS AULAS&lt;/h2&gt;
&lt;/div&gt;
</content><category term="python"></category><category term="curso"></category><category term="aula"></category><category term="curso de python"></category><category term="aula de python"></category><category term="eXcript"></category><category term="eXcript Brasil"></category><category term="blog"></category></entry><entry><title>Dicionários na Prática com Python</title><link href="http://excript.com/python/dicionario-pratica-python.html" rel="alternate"></link><published>2015-09-14T13:27:00-03:00</published><updated>2015-09-14T13:27:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2015-09-14:/python/dicionario-pratica-python.html</id><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos alguns exemplos práticos com o uso do dicionários e aprofundaremos nosso enteminto discutindo situações que ocorrem no exercício do desenvolvimento de software.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
</content><category term="curso"></category><category term="python"></category><category term="dicionário"></category></entry><entry><title>Funções das Strings no Python</title><link href="http://excript.com/python/funcoes-string-python.html" rel="alternate"></link><published>2015-07-16T17:48:00-03:00</published><updated>2015-07-16T17:48:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2015-07-16:/python/funcoes-string-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos as funções definidas na classe String do Python e aprenderemos como podemos utilizar essa funões, para realizar uma série de alterações e assim, obter uma nova String que contenha a alteração solicitada.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="funcoes-da-classe-str"&gt;
&lt;h2&gt;FUNÇÕES DA CLASSE &lt;tt class="docutils literal"&gt;str&lt;/tt&gt;&lt;/h2&gt;
&lt;p&gt;A classe &lt;tt class="docutils literal"&gt;str&lt;/tt&gt; contém um conjunto de função para manipularmos string …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos as funções definidas na classe String do Python e aprenderemos como podemos utilizar essa funões, para realizar uma série de alterações e assim, obter uma nova String que contenha a alteração solicitada.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="funcoes-da-classe-str"&gt;
&lt;h2&gt;FUNÇÕES DA CLASSE &lt;tt class="docutils literal"&gt;str&lt;/tt&gt;&lt;/h2&gt;
&lt;p&gt;A classe &lt;tt class="docutils literal"&gt;str&lt;/tt&gt; contém um conjunto de função para manipularmos string, isto é, cadeias de caracteres.&lt;/p&gt;
&lt;p&gt;É importante lembrar, que objetos do tipo &lt;tt class="docutils literal"&gt;str&lt;/tt&gt; são imutáveis e assim, qualquer alteração que alguma função fizer, a nova String que for retornada, será um novo objeto, e este, possuirá um endereço diferente da String utilizada inicialmente.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="quantidade-de-caracteres"&gt;
&lt;h2&gt;QUANTIDADE DE CARACTERES&lt;/h2&gt;
&lt;p&gt;A função built-in &lt;tt class="docutils literal"&gt;len()&lt;/tt&gt; pode ser utilizada para retornar a quantidade de caracteres utilizados numa determinada estrutura.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Lista de Caracteres&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="alteracao-de-string"&gt;
&lt;h2&gt;ALTERAÇÃO DE &lt;tt class="docutils literal"&gt;string&lt;/tt&gt;&lt;/h2&gt;
&lt;p&gt;Como estudado, não é possível alterarmos uma &lt;tt class="docutils literal"&gt;string&lt;/tt&gt;. Assim, se tentarmos atribuir um novo caractere para determinada posição, será retornado um erro, como pode ser visto no código a seguir.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Lista de Caracteres&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;e&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;x&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;Traceback&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;most&lt;/span&gt; &lt;span class="n"&gt;recent&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;lt;pyshell#121&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;x&amp;quot;&lt;/span&gt;
&lt;span class="ne"&gt;TypeError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;str&amp;#39;&lt;/span&gt; &lt;span class="nb"&gt;object&lt;/span&gt; &lt;span class="n"&gt;does&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;support&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="n"&gt;assignment&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Inicialmente, utilizamos a notação para que fosse retornado o caractere de índice igual a 4 e 7. Em seguida, tentamos alterar o caractere de índice igual a 5 e uma excessão foi gerada.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="funcao-split"&gt;
&lt;h2&gt;FUNÇÃO &lt;tt class="docutils literal"&gt;split()&lt;/tt&gt;&lt;/h2&gt;
&lt;p&gt;A função &lt;tt class="docutils literal"&gt;split()&lt;/tt&gt; divide um texto todas as vezes que a String passada como argumento for localizada. No código a seguir, definimos uma frase e sem seguida, invocamos a função &lt;tt class="docutils literal"&gt;split()&lt;/tt&gt;, definindo como argumento, uma String que contém um único espaço em branco.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Toda string em Python é imutável&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Toda&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;string&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;em&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Python&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;é&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;imutável&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Como podemos ver, uma lista foi retornada e está contém as palavras como sendo elementos. Se observarmos a String original, veremos que as quebras foram feitas a cada espaço em branco existente.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="funcao-replace"&gt;
&lt;h2&gt;FUNÇÃO &lt;tt class="docutils literal"&gt;replace()&lt;/tt&gt;&lt;/h2&gt;
&lt;p&gt;A função &lt;tt class="docutils literal"&gt;replace()&lt;/tt&gt; substitui uma parte do texto por uma outra String. A palavra &lt;tt class="docutils literal"&gt;replace()&lt;/tt&gt;, do Inglês, siginifca &lt;tt class="docutils literal"&gt;substituir&lt;/tt&gt; e é isso que a função &lt;tt class="docutils literal"&gt;replace()&lt;/tt&gt; da classe String do Python faz.&lt;/p&gt;
&lt;p&gt;No código a seguir, iremos definir uma String e em seguida, substituiremos uma parte do texto por outra.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;A função replace aa substitui parte de um texto por outro texto&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;aa&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;123&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;A função replace 123 substitui parte de um texto por outro texto&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima, definimos uma String e dentro desta, colocamos uma marcação &lt;tt class="docutils literal"&gt;aa&lt;/tt&gt;, somente para facilitar o estudo. Em seguida, invocamos a funçao &lt;tt class="docutils literal"&gt;replace()&lt;/tt&gt;, e dissemos, que queríamos alterar a string &lt;tt class="docutils literal"&gt;aa&lt;/tt&gt; pelo texto, &amp;quot;123&amp;quot;. Feito isso, uma nova String foi retornada, com a alteração feita.&lt;/p&gt;
&lt;p&gt;Novamente, é importar lembrar, que foi retornado uma nova String, até porque, a String utilizada não pode ser alterada.&lt;/p&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="python"></category></entry><entry><title>Fatiando Strings com Python</title><link href="http://excript.com/python/fatiando-string-python.html" rel="alternate"></link><published>2015-07-13T18:45:00-03:00</published><updated>2015-07-13T18:45:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2015-07-13:/python/fatiando-string-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos o fatiamento de string, isto é, como podemos extrair uma sublista a partir de outra.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="o-fatiamento-de-string"&gt;
&lt;h2&gt;O FATIAMENTO DE &lt;tt class="docutils literal"&gt;string&lt;/tt&gt;&lt;/h2&gt;
&lt;p&gt;O fatiamento de &lt;tt class="docutils literal"&gt;string&lt;/tt&gt; funciona da mesma forma como o fatiamento de lista estudado em aulas passadas. No entanto, estudar o fatiamento com &lt;tt class="docutils literal"&gt;string&lt;/tt&gt; pode ser mais fácil …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos o fatiamento de string, isto é, como podemos extrair uma sublista a partir de outra.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="o-fatiamento-de-string"&gt;
&lt;h2&gt;O FATIAMENTO DE &lt;tt class="docutils literal"&gt;string&lt;/tt&gt;&lt;/h2&gt;
&lt;p&gt;O fatiamento de &lt;tt class="docutils literal"&gt;string&lt;/tt&gt; funciona da mesma forma como o fatiamento de lista estudado em aulas passadas. No entanto, estudar o fatiamento com &lt;tt class="docutils literal"&gt;string&lt;/tt&gt; pode ser mais fácil e intuitivo, até porque, trabalharemos diretamente com caracteres.&lt;/p&gt;
&lt;p&gt;O sistema de índices também é igual ao sistema de índices das Listas, logo, o primeiro elemento possui índice igual a 0 e o último, índice igual a -1.&lt;/p&gt;
&lt;p&gt;No código abaixo, temos um simples exemplos onde iremos fatiar uma &lt;tt class="docutils literal"&gt;string&lt;/tt&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Lista de Caracteres&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;#retornando o primeiro caractere&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;L&amp;#39;&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;#retornando o último caractere&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;s&amp;#39;&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;sta&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="python"></category></entry><entry><title>Operadores and, or e in do Python</title><link href="http://excript.com/python/operadores-and-or-in-python.html" rel="alternate"></link><published>2015-06-28T02:25:00-03:00</published><updated>2015-06-28T02:25:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2015-06-28:/python/operadores-and-or-in-python.html</id><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos 3 operadores do Python aplicados ao manuseio e manipulação de listas. Vamos estudar situações em que verificaremos com uso de expressões e dos operadores lógicos se determinado elemento ou então, se um conjunto de elemento está contido dentro de determinada lista.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
</content><category term="curso"></category><category term="python"></category></entry><entry><title>Operadores in e not in do Python</title><link href="http://excript.com/python/operadores-in-not-in-python.html" rel="alternate"></link><published>2015-06-23T13:24:00-03:00</published><updated>2015-06-23T13:24:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2015-06-23:/python/operadores-in-not-in-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos 2 operadores do Python que são dedicado ao trabalho e manusei de listas&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="introducao-aos-operadores-in-e-not-in"&gt;
&lt;h2&gt;INTRODUÇÃO AOS OPERADORES &lt;tt class="docutils literal"&gt;in&lt;/tt&gt; e &lt;tt class="docutils literal"&gt;not in&lt;/tt&gt;&lt;/h2&gt;
&lt;p&gt;O operador &lt;tt class="docutils literal"&gt;in&lt;/tt&gt; verifica se o operando a sua esquerda, está contido na lista a sua direita, da mesma forma que o operador &lt;tt class="docutils literal"&gt;not in&lt;/tt&gt; que verifica …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos 2 operadores do Python que são dedicado ao trabalho e manusei de listas&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="introducao-aos-operadores-in-e-not-in"&gt;
&lt;h2&gt;INTRODUÇÃO AOS OPERADORES &lt;tt class="docutils literal"&gt;in&lt;/tt&gt; e &lt;tt class="docutils literal"&gt;not in&lt;/tt&gt;&lt;/h2&gt;
&lt;p&gt;O operador &lt;tt class="docutils literal"&gt;in&lt;/tt&gt; verifica se o operando a sua esquerda, está contido na lista a sua direita, da mesma forma que o operador &lt;tt class="docutils literal"&gt;not in&lt;/tt&gt; que verifica o contrário.&lt;/p&gt;
&lt;p&gt;Estes, são 2 operadores nativo para verificar se um determinado objeto está contido numa lista. A palavra &lt;tt class="docutils literal"&gt;in&lt;/tt&gt;, do Inglês, significa, &amp;quot;contido em&amp;quot;. Essa é uma maneira para simplificar a verificação se o elemento X está contido na lista Y.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima, perguntamos, com uso do operador &lt;tt class="docutils literal"&gt;in&lt;/tt&gt;, se o número 2 está contido na Tupla definida a direita do operador. No exemplo, definimos a Tupla no mesmo instânte em que estamos fazendo a verificação, porém, poderíamos ter trabalhado com o uso de referência.&lt;/p&gt;
&lt;p&gt;No código a seguir, estamos utilizando o operador &lt;tt class="docutils literal"&gt;in&lt;/tt&gt; numa tomada de decisão para verificarmos qual bloco de instrução deve ser executado.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# x = [1, 2, 3, 4, 5]&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Contido&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima, inicialmente, geramos uma sequência numérica com a função &lt;tt class="docutils literal"&gt;range()&lt;/tt&gt; e vinculamos a sequência retornada a variável de nome &lt;tt class="docutils literal"&gt;x&lt;/tt&gt;. Feito isso, com uso da instrução &lt;tt class="docutils literal"&gt;if&lt;/tt&gt;, verificamos se o elemento 2 está contido na sequência cuja referência é &lt;tt class="docutils literal"&gt;x&lt;/tt&gt;, caso a expressão seja verdadeira, o bloco seguinte será executado.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="estudando-algumas-situacoes"&gt;
&lt;h2&gt;ESTUDANDO ALGUMAS SITUAÇÕES&lt;/h2&gt;
&lt;p&gt;Agora, vamos estudar uma maneira de verificarmos se um valor está contido numa lista ou então, se um conjunto de valores estão contidos. Para verificarmos se mais de um valor está contido, temos que utilizar os operadores &lt;tt class="docutils literal"&gt;and&lt;/tt&gt; e &lt;tt class="docutils literal"&gt;or&lt;/tt&gt;. Assim, conseguimos montar expressões como: se o &lt;tt class="docutils literal"&gt;valor x&lt;/tt&gt; e o &lt;tt class="docutils literal"&gt;valor y&lt;/tt&gt; estiverem contidos, então faça isso. Ou então, podemos utilizar o operador &lt;tt class="docutils literal"&gt;or&lt;/tt&gt;, logo, temos a seguinte expressão: se &lt;tt class="docutils literal"&gt;x&lt;/tt&gt; ou &lt;tt class="docutils literal"&gt;y&lt;/tt&gt; estiverem contidos, então, faça isso.&lt;/p&gt;
&lt;p&gt;Vamos estudar alguns exemplos para melhor entendermos.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#1 - True&lt;/span&gt;
&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#2 - False&lt;/span&gt;
&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#3 - False&lt;/span&gt;
&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#4 - True&lt;/span&gt;
&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#5 - False&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#6 - True&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As 4 primeiras expressões são fáceis de entender, porém, as 2 últimas podem resultar um pouco de dúvidas. Isso porque, quando verificamos se o valor 10 ou o valor 2 estão contidos no intervalo de 1 à 5, o valor retornado será Falso. Porém, se invertermos os valores, perguntando se 2 ou 10 estão contidos, o valor lógico retornado será verdadeiro.&lt;/p&gt;
&lt;p&gt;A lógica por detrás dessas 2 expressões, encontra-se na maneira como o Python avalia as expressões. A regra é a seguinte: quando a primeira condição não satisfazer a expressão, interrompe-se a verificação das demais expressões. Logo, como o valor 10 não está contido, temos que a próxima expressão não será avaliada, até porque, a primeira retornou um valor lógico falso. Porém, o contrário é verdadeiro, até porque, a primeira expressão é verdadeira.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="caso-de-uso-especifico"&gt;
&lt;h2&gt;CASO DE USO ESPECIFICO&lt;/h2&gt;
&lt;p&gt;Vamos analisar agora, uma situação interessante decorrente do do uso do operador &lt;tt class="docutils literal"&gt;in&lt;/tt&gt; que acabamos de estudar. Ao invés de escrevermos uma expressão que faz 3 comparações ligando-as com o Operador Lógico de conjunção &lt;tt class="docutils literal"&gt;and&lt;/tt&gt;, escreveremos utilizando o operador &lt;tt class="docutils literal"&gt;in&lt;/tt&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;
&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;66&lt;/span&gt;

&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Digite um número: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Está contido&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima, verificamos se o valor da variável &lt;tt class="docutils literal"&gt;x&lt;/tt&gt; é igual a variável &lt;tt class="docutils literal"&gt;a&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;b&lt;/tt&gt; ou então, &lt;tt class="docutils literal"&gt;c&lt;/tt&gt;. Essa é uma maneira funcional e lógica, mas há uma forma mais elegante de dizer a mesma coisa.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;
&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;66&lt;/span&gt;

&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Digite um número: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
 &lt;span class="c1"&gt;# if(x == a or x == b or x == c):&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;]):&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Está contido.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Não está contido.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;O código acima é semelhante ao que fizemos anteriormente, a diferença está, na tomada de decisão. Ao invés de verificarmos 3 condições, para sabermos se o valor de &lt;tt class="docutils literal"&gt;x&lt;/tt&gt; é igual a algum dos 3 valores pré-definido, perguntamos se o valor de &lt;tt class="docutils literal"&gt;x&lt;/tt&gt; está contido na lista formada pelos 3 valores possíveis.&lt;/p&gt;
&lt;p&gt;Observe que o retorno em ambas verificações será o mesmo, ainda que a expressão seja totalmente diferente.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="um-exemplo-mais-elaborado"&gt;
&lt;h2&gt;UM EXEMPLO MAIS ELABORADO&lt;/h2&gt;
&lt;p&gt;Agora, vamos fazer um simples programa que declara uma lista onde cadas elemento é o nome de uma cor. Em seguida, pediremos para o usuário informar o nome de uma cor. Feito isso, guardamos numa variável a cor escolhida pelo usuário e então, verificaremos se a mesma está contida na nossa lista de cores. Caso esteja, imprimiremos uma frase na tela informando que a cor informada é válida, do contrário, imprimiremos uma outra frase, informando que a cor não é válida.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;cores&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;azul&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;amarelo&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;vermelho&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;branco&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;valor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Digite o nome de uma cor ou 0 para sair&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;valor&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;valor&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;cores&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Essa cor está contida na lista!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Essa cor NÃO está contida na lista!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima, inicialmente, declaramos uma Tupla e definimos 4 elementos do tipo &lt;tt class="docutils literal"&gt;str&lt;/tt&gt;, cada um com o nome de uma cor. Em seguida, criamos um laço de repetição infinito com a instrução &lt;tt class="docutils literal"&gt;while&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;No bloco de código da instrução &lt;tt class="docutils literal"&gt;while&lt;/tt&gt;, inicialmente, pedimos para o usuário informar o nome de uma cor, em seguida, com uso da instrução &lt;tt class="docutils literal"&gt;if&lt;/tt&gt;, verificamos se a cor digitada é igual a letra &amp;quot;0&amp;quot;, caso seja, finalizamos o laços de repetição infinito, como também, será finalizado o programa.&lt;/p&gt;
&lt;p&gt;Na sequência, definimos outra Tomada de Decisão Simples, e verificamos se o valor contido na variável &lt;tt class="docutils literal"&gt;valor&lt;/tt&gt;, que sempre irá conter o valor digitado pelo usuário, é igual a algum valor contido na Tupla &lt;tt class="docutils literal"&gt;cores&lt;/tt&gt;. Se a expressão for verdadeira, imprimiremos uma mensagem para o usuário, do contrário, imprimiremos outra.&lt;/p&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="python"></category></entry><entry><title>Tuplas em Python</title><link href="http://excript.com/python/tuplas-python.html" rel="alternate"></link><published>2015-05-24T01:44:00-03:00</published><updated>2015-05-24T01:44:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2015-05-24:/python/tuplas-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos as Tuplas, isto é, uma Estrutura de Dados semelhante as Listas porém imutável.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="definicao-de-tupla"&gt;
&lt;h2&gt;DEFINIÇÃO DE TUPLA&lt;/h2&gt;
&lt;p&gt;Tupla é uma Lista imutável. O que diferencia a &lt;a class="reference external" href="{filename}../curso-de-python/0044_list-class-python.rst"&gt;Estrutura de Dados Lista&lt;/a&gt; da Estrutura de Dados Tupla é que a primeira pode ter elementos adicionados a qualquer momento, enquanto que …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos as Tuplas, isto é, uma Estrutura de Dados semelhante as Listas porém imutável.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="definicao-de-tupla"&gt;
&lt;h2&gt;DEFINIÇÃO DE TUPLA&lt;/h2&gt;
&lt;p&gt;Tupla é uma Lista imutável. O que diferencia a &lt;a class="reference external" href="{filename}../curso-de-python/0044_list-class-python.rst"&gt;Estrutura de Dados Lista&lt;/a&gt; da Estrutura de Dados Tupla é que a primeira pode ter elementos adicionados a qualquer momento, enquanto que a segunda estrutura, após definida, não permite a adição ou remoção de elementos.&lt;/p&gt;
&lt;p&gt;Devemos pensar num primeiro momento, que a Tupla é uma lista que restringe a adição, alteração, remoção e o ordenamento do elementos. No entanto, pensar numa tupla como sendo somente uma lista imutável não está totalmente correto.&lt;/p&gt;
&lt;p&gt;Tuplas possuem muitas características das listas Listas, porém, possui um propósito diferente e não raramente levamos um tempo para conseguir realmente perceber a sutil diferença.&lt;/p&gt;
&lt;p&gt;Segundo Phillip J. Eby, contribuidor de diversos projetos do Python e criador da ferramenta Setuptools, numa discussão sobre a remoção das tuplas para a versão 3x do Python, trouxe uma argumentação bastante interessante, diz ele:&lt;/p&gt;
&lt;blockquote&gt;
É um equívoco pensar nas tuplas como listas constantes. As listas são destinadas a serem sequências homogêneas, enquanto que os Tuplas são estruturas de dados heterogêneas.
Phillip J. Eby&lt;/blockquote&gt;
&lt;p&gt;Em outras palavras, ele disse que em uma lista, as informações, geralmente são de um mesmo tipo, por exemplo, uma lista de e-mails. Enquanto que numa tupla, os elementos são de tipos distintos, por exemplo, uma Tupla que contém o dia, o dia da semana, o mês e o ano.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;segunda-feita&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Fevereiro&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2022&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;O que estudamos até o momento a respeito de listas, pode ser utilizado para manipular e controlar Tuplas, salvo a alteração da lista ou de seus elementos.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;x&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;y&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;c&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;x&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;y&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;c&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="s2"&gt;&amp;quot;x&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="s2"&gt;&amp;quot;c&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;y&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Uma Tupla é definida da mesma forma que uma lista, o que as diferencias, são os caracteres que as delimitam. Uma Lista, tem seus elementos delimitados por colchetes, enquanto que a Tupla, tem seus elementos delimitados por parêntesis.&lt;/li&gt;
&lt;li&gt;A ordem dos elementos numa Tupla será a ordem na qual estes foram definidos, ou seja, não é possível ordenar em tempo de execução os elementos.&lt;/li&gt;
&lt;li&gt;O primeiro elemento de uma Tupla também possui índice igual a 0 e o último índice igual a -1. Assim o acesso a elementos, bem como o fatiamentos funciona da mesma forma como já estudado no fatiamento de Listas.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="notacao"&gt;
&lt;h2&gt;NOTAÇÃO&lt;/h2&gt;
&lt;p&gt;É comum diferenciarmos a lista da tupla pelo seus caracteres delimitadores. Por exemplo, os elementos de uma lista são delimitados por colchetes, enquanto que os elementos de uma tupla por parêntesis.&lt;/p&gt;
&lt;p&gt;Distinguir as estruturas pelo seus caracteres delimitadores não é um erro, porém, na documentação oficial do Python consta que uma tupla é declarada pela utilização do operador vírgula, e que é utilizado para separar os elementos.&lt;/p&gt;
&lt;p&gt;A única exceção é na declaração de tuplas vazias. No código a seguir iremos declarar algumas tuplas e adicionaremos comentários em cima de cada declaração.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#tupla declarada sem o uso de parentesis&lt;/span&gt;
&lt;span class="n"&gt;t1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
&lt;span class="c1"&gt;#tupla declarada com o uso de parentesis&lt;/span&gt;
&lt;span class="n"&gt;t2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;#tupla com um único elemento&lt;/span&gt;
&lt;span class="n"&gt;t3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

&lt;span class="c1"&gt;#tupla vazia&lt;/span&gt;
&lt;span class="n"&gt;t4&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Inicialmente declaramos as variáveis &lt;code&gt;t1&lt;/code&gt; e &lt;code&gt;t2&lt;/code&gt; e associamos a cada uma tupla contendo 3 elementos. Ambas declarações são identicas e possuem um mesmo resultado.&lt;/p&gt;
&lt;p&gt;Em seguida declaramos uma terceira tupla &lt;code&gt;t3&lt;/code&gt; que possui um único elemento. Observe que a declaração é finalizada com uma vírgula! É dessa forma que declaramos tuplas com um único elemento.&lt;/p&gt;
&lt;p&gt;Por fim, declaramos uma tupla vazia &lt;code&gt;t4&lt;/code&gt; e nesta situação foram os parentesis que determinam o tipo do objeto declarado. Essa é a única situação onde é obrigatório a utilização dos parentesis na declaração da tupla.&lt;/p&gt;
&lt;p&gt;Vejamos agora o que a documentação do Python trás sobre a declaração de tuplas:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Observe que é a vírgula que é realmente define uma tupla, não os parênteses. Os parênteses são opcionais, exceto no caso da tupla vazia, ou quando são necessários para evitar a ambigüidade sintática. Por exemplo, :code:`f(a, b, c)` é uma chamada de função com três argumentos, enquanto :code:`f((a, b, c))` é uma chamada de função com uma tupla-3 como único argumento.
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="o-tiplo-tuple"&gt;
&lt;h2&gt;O TIPLO &lt;code&gt;tuple&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;No código a seguir, vamos obter o tipo reconhecido pelo Python.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nc"&gt;tuple&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;gt;&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nc"&gt;tuple&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;gt;&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nc"&gt;tuple&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;gt;&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nc"&gt;tuple&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima, definimos algumas estruturas e logo em seguida, verificamos o tipo reconhecido pelo Python, como podemos ver, em todos os casos, a estrutura reconhecida foi sendo a Tupla.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="conclusao-rapida-das-tuplas"&gt;
&lt;h2&gt;CONCLUSÃO RÁPIDA DAS TUPLAS&lt;/h2&gt;
&lt;p&gt;Todas as ideias estudadas até o momento em relação as listas, servem também, para a estrutura Tupla, com a ressalva de que não é possível adicionar ou remover novos elementos durante o tempo de execução.&lt;/p&gt;
&lt;p&gt;Porém, a Iteração, junção e a ideia de elementos como sendo Objetos, são os mesmos e possuem o mesmo funcionamento.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="declaracao-de-tuplas"&gt;
&lt;h2&gt;DECLARAÇÃO DE TUPLAS&lt;/h2&gt;
&lt;p&gt;Uma Tupla é uma estrutura que contém nenhum ou vários elementos. Os elementos de uma Tupla devem ser separados por vírgulas e podem ser delimitados por parêntesis. Uma sequência qualquer, onde os elementos estão separados por vírgula é reconhecido pela linguagem como sendo um tupla, mesmo que os elementos não estejam delimitados por parentesis.&lt;/p&gt;
&lt;p&gt;As tuplas são declaradas de maneira bastante semelhante as Listas, onde os elementos são separados pelo uso de vírgulas e ambas as estruturas são delimitadas por uma simbologia e esta acaba por definir a estrutura.&lt;/p&gt;
&lt;p&gt;No código abaixo, definiremos uma Tupla contendo alguns dias da semana.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;dias_da_semana&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;domingo&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;segunda&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;terça&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;quarta&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;dias_da_semana&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;domingo&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;segunda&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;terça&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;quarta&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Podemos rapidamente perceber a enorme semelhança entre a definições de Listas e Tuplas.&lt;/p&gt;
&lt;p&gt;É possível declarar as Tuplas de maneira implícita e explicita, como temos no código a seguir:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#declaração explicita&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;t1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;tuple&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;abc&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;t1&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;c&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;#declaração implicita&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;t2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;b&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;c&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;t2&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;c&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;#declaração implicita igual a declaração anterior&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;t3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;b&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;c&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;t3&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;c&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima, declaramos inicialmente uma Tupla com uso da notação explicita, isto é, passamos um String como parâmetro na inicialização da estrutura &lt;cite&gt;tuple&lt;/cite&gt;. Em seguida, implementamos 2 códigos que possuem o mesmo resultado, utilizando assim, as 2 notação de &lt;cite&gt;tuple&lt;/cite&gt; implicitadas da linguagem Python.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="veja-tambem"&gt;
&lt;h2&gt;VEJA TAMBÉM&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="{filename}../curso-de-python/0044_list-class-python.rst"&gt;Aula: Listas&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="links-externos"&gt;
&lt;h2&gt;LINKS EXTERNOS&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#tuple"&gt;Tuple&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://codingair.logdown.com/posts/179395-understand-common-sequence-data-types-in-python-string-tuple-and-list"&gt;Understand Common Sequence Data Types in Python – String, Tuple, and List&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="python"></category></entry><entry><title>Quantidade de Itens em Python</title><link href="http://excript.com/python/quantidade-de-itens-lista-python.html" rel="alternate"></link><published>2015-05-21T02:26:00-03:00</published><updated>2015-05-21T02:26:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2015-05-21:/python/quantidade-de-itens-lista-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula aprenderemos como saber a quantidade de elementos contidos numa lista, ou então, a quantidade de vezes que determinado elemento está contido ou mesmo, se o elemento está ou não contido.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="quantidade-de-itens"&gt;
&lt;h2&gt;QUANTIDADE DE ITENS&lt;/h2&gt;
&lt;p&gt;É normal a necessidade de conhecermos quantos elementos há numa lista, até porque, muitas funcionalidades …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula aprenderemos como saber a quantidade de elementos contidos numa lista, ou então, a quantidade de vezes que determinado elemento está contido ou mesmo, se o elemento está ou não contido.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="quantidade-de-itens"&gt;
&lt;h2&gt;QUANTIDADE DE ITENS&lt;/h2&gt;
&lt;p&gt;É normal a necessidade de conhecermos quantos elementos há numa lista, até porque, muitas funcionalidades estão diretamente relacioandas com a quantidade de elementos, por exemplo, quando pedimos num cadastro para que o usuário marque 3 itens de sua preferência. Nessas situações, precisaremos de uma maneira fácil e rápida para contar a quantidade de elementos.&lt;/p&gt;
&lt;p&gt;Também é comum, precisarmos saber a quantidade de vezes que determinado elemento está contido, essa é outra situação corriqueira e por isso, a biblioteca do Python, trás implementada.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="funcao-len"&gt;
&lt;h2&gt;FUNÇÃO &lt;tt class="docutils literal"&gt;len()&lt;/tt&gt;&lt;/h2&gt;
&lt;p&gt;A função built-in &lt;tt class="docutils literal"&gt;len()&lt;/tt&gt; retorna a quantidade de elementos contidos numa lista, por exemplo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="mi"&gt;4&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima, invocamos a função &lt;tt class="docutils literal"&gt;len()&lt;/tt&gt; passando como parâmetro uma lista contendo 4 elementos. Logo, nos foi retornado, que a quantidade de elementos existentes é igual a 4.&lt;/p&gt;
&lt;p&gt;A função &lt;tt class="docutils literal"&gt;len()&lt;/tt&gt; retorna a quantidade de elementos de qualquer lista em Python, essa é mais uma função built-in e disponível em qualquer parte dos nossos códigos.&lt;/p&gt;
&lt;p&gt;Se, ao invés de passarmos uma lista, passarmos uma expressão, também será retornado, a quantidade de elemento contidos no fatiamento, por exemplo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;c&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;d&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;e&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;f&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;6&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;c&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Então, seja uma lista ou então, somente uma parte da lista, a função &lt;tt class="docutils literal"&gt;len()&lt;/tt&gt; resolverá a expressão e retornará a quantidade de elementos contidos.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="funcao-count"&gt;
&lt;h2&gt;FUNÇÃO &lt;tt class="docutils literal"&gt;count()&lt;/tt&gt;&lt;/h2&gt;
&lt;p&gt;A função &lt;tt class="docutils literal"&gt;count()&lt;/tt&gt; retorna a quantidade de vezes que um mesmo elemento está contido numa lista. Essa é uma excelente maneira que evita a implementação de um &lt;tt class="docutils literal"&gt;Laço de Repetição&lt;/tt&gt; em busca de elementos iguais.&lt;/p&gt;
&lt;p&gt;No código a seguir, defimos uma lista e em seguida, invocamos a função &lt;tt class="docutils literal"&gt;count()&lt;/tt&gt;, pergunta assim, quantas vezes um determinado número existe nessa lista.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Observamos, que quando o número 4 não estava repetido, a função &lt;tt class="docutils literal"&gt;count(4)&lt;/tt&gt; retornou 1. A partir do momento em que adicionamos mais uma vez o número 4, o valor retornado foi 2.&lt;/p&gt;
&lt;p&gt;A seguir, vamos fazer outro exemplo, porém agora, trabalhando com objetos do tipo texto &lt;tt class="docutils literal"&gt;str&lt;/tt&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;b&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;c&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;d&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;e&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;f&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;6&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;x&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;A&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;b&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;1&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;c&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;d&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;e&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;f&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;7&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Inicialmente, definimos a referência &lt;tt class="docutils literal"&gt;A&lt;/tt&gt; um lista contendo 6 elementos do tipo &lt;tt class="docutils literal"&gt;str&lt;/tt&gt;, que nos caso, foram as letras de &lt;tt class="docutils literal"&gt;a&lt;/tt&gt; até &lt;tt class="docutils literal"&gt;f&lt;/tt&gt;. Em seguida, passamos a lista &lt;tt class="docutils literal"&gt;A&lt;/tt&gt; como parâmetro da função &lt;tt class="docutils literal"&gt;len()&lt;/tt&gt; para que fosse retornado a quantidade de elementos, e como resposta, obtivemos o número 6.
Feito isso, invocamos a função &lt;tt class="docutils literal"&gt;count()&lt;/tt&gt; passando como argumento, &lt;tt class="docutils literal"&gt;x&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;A&lt;/tt&gt; e &lt;tt class="docutils literal"&gt;a&lt;/tt&gt;. O elemento &lt;tt class="docutils literal"&gt;x&lt;/tt&gt; e &lt;tt class="docutils literal"&gt;A&lt;/tt&gt; maiúsculo não existem em nossa lista, logo, a função &lt;tt class="docutils literal"&gt;count()&lt;/tt&gt; retornou 0. Porém, quando passamos como parâmetro as letras &lt;tt class="docutils literal"&gt;a&lt;/tt&gt; e &lt;tt class="docutils literal"&gt;b&lt;/tt&gt;, nos foi retorna 1, isto é, os objetos do tipo &lt;tt class="docutils literal"&gt;str&lt;/tt&gt; que contém as letras &lt;tt class="docutils literal"&gt;a&lt;/tt&gt; e &lt;tt class="docutils literal"&gt;b&lt;/tt&gt; estão contidos.
Por fim, incrementamos a lista mais uma vez a letra &lt;tt class="docutils literal"&gt;a&lt;/tt&gt; e quando invocamos a função &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;count(&amp;quot;a&amp;quot;)&lt;/span&gt;&lt;/tt&gt; nos foi retornado 2, isto é, o elemento do tipo &lt;tt class="docutils literal"&gt;str&lt;/tt&gt; retornou que há 2 ocorrências.&lt;/p&gt;
&lt;p&gt;A função &lt;tt class="docutils literal"&gt;count()&lt;/tt&gt; também pode ser utilizada para saber se um determinado elemento está contido, até porque, se o valor retornado for igual a 0, sabemos, que determinado elemento ainda não foi adicionado.&lt;/p&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="python"></category></entry><entry><title>Incluindo, Alterando e Excluindo Elementos no Python</title><link href="http://excript.com/python/incluindo-alterando-excluindo-elementos-lista-python.html" rel="alternate"></link><published>2015-05-01T19:35:00-03:00</published><updated>2015-05-01T19:35:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2015-05-01:/python/incluindo-alterando-excluindo-elementos-lista-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos as principais funções realizadas em lista, como por exemplo, inclusão, alteração e exclusão. Também estudaremos a exclusão de elemento em intervalos e funções que retornam e removem elementos automaticamente.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="introducao"&gt;
&lt;h2&gt;INTRODUÇÃO&lt;/h2&gt;
&lt;p&gt;Nas aulas passadas estudamos diversos conceitos sobre as listas e também, aprendemos como trablhar com algumas funções …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos as principais funções realizadas em lista, como por exemplo, inclusão, alteração e exclusão. Também estudaremos a exclusão de elemento em intervalos e funções que retornam e removem elementos automaticamente.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="introducao"&gt;
&lt;h2&gt;INTRODUÇÃO&lt;/h2&gt;
&lt;p&gt;Nas aulas passadas estudamos diversos conceitos sobre as listas e também, aprendemos como trablhar com algumas funções. Nessa aula, nos dedicaremos, ao estudo das 3 principais funcionalidades que são a inclusão, alteração e exclusão de elememtos.&lt;/p&gt;
&lt;p&gt;O código a seguir, deve ser utilizado como base em todos os exemplos desta aula. A cada novo título, deve-se recriar as listas para conseguir um resultado igual.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;b&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;c&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;B&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;d&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;e&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;f&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="adicionando-elemento"&gt;
&lt;h2&gt;ADICIONANDO ELEMENTO&lt;/h2&gt;
&lt;p&gt;A função &lt;tt class="docutils literal"&gt;append()&lt;/tt&gt;, do inglês, significa &amp;quot;anexar&amp;quot;, logo, aqui no Python, essa função irá adicionar o elemento passado como argumento ao final da lista, por exemplo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;x&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;b&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;c&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;x&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Como podemos ver, agora, o ELEMENTO &amp;quot;x&amp;quot; foi anexado a lista &lt;tt class="docutils literal"&gt;A&lt;/tt&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="funcao-insert"&gt;
&lt;h2&gt;FUNÇÃO &lt;tt class="docutils literal"&gt;insert()&lt;/tt&gt;&lt;/h2&gt;
&lt;p&gt;A função &lt;tt class="docutils literal"&gt;insert()&lt;/tt&gt;, como o nome sugere, faz a inserção de um elemento em nossa lista, porém, agora, nós vamos informar em qual posição o elemento será inserido. Ou seja, enquanto a função &lt;tt class="docutils literal"&gt;append()&lt;/tt&gt; adiciona um elemento no final da lista, a função &lt;tt class="docutils literal"&gt;insert()&lt;/tt&gt; adiciona um elemento no local em que nós especificarmos, por exemplo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;y&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;y&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;b&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;c&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Como podemos observar, inserimos o caractere &lt;tt class="docutils literal"&gt;y&lt;/tt&gt; como sendo o primeiro elemento da lista &lt;tt class="docutils literal"&gt;A&lt;/tt&gt; com o uso da função &lt;tt class="docutils literal"&gt;insert()&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;A seguir, temos a assinatura da função &lt;tt class="docutils literal"&gt;insert()&lt;/tt&gt;.&lt;/p&gt;
&lt;blockquote&gt;
insert( &amp;lt;índice&amp;gt;, &amp;lt;objeto&amp;gt; )&lt;/blockquote&gt;
&lt;p&gt;Como podemos ver, o primeiro argumento é o índice e o segundo, o objeto propriamento dito. Assim, o objeto será adicionado à lista na posição cujo índice seja igual ao informado e os elementos que estiverem após o novo elemento, terão seus índices alterados automaticamente.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="alteracao-de-elemento"&gt;
&lt;h2&gt;ALTERAÇÃO DE ELEMENTO&lt;/h2&gt;
&lt;p&gt;A mesma notação utilizada para obtermos o elemento vinculado a determinado índice, pode ser utilizada, para alterarmos o elemento vinculado.&lt;/p&gt;
&lt;p&gt;Inicialmente, é importante observar, que nos exemplos a seguir, não iremos alterar o caractere de um objeto, mas sim, iremos substitui-lo.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;t&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;t&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;c&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima, alteramos o objeto &lt;tt class="docutils literal"&gt;b&lt;/tt&gt; pelo objeto &lt;tt class="docutils literal"&gt;t&lt;/tt&gt;. Observe que ambos são objetos diferentes e assim, o que o Python fez internamente, é excluir o objeto &lt;tt class="docutils literal"&gt;b&lt;/tt&gt; e adicionar em seu lugar, ou seja, com mesmo índice, um outro objeto.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="excluindo-elemento"&gt;
&lt;h2&gt;EXCLUINDO ELEMENTO&lt;/h2&gt;
&lt;p&gt;Para excluirmos um elemento, temos uma função built-in isto é, uma função implementada na VM do Python. Assim, basta passarmos como parâmetro o objeto a ser excluído que a função se encarregará pelo restante, como temos no código a seguir.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;del&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;c&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Como podemos ver, passamos como parâmetro o elemento &lt;tt class="docutils literal"&gt;a[1]&lt;/tt&gt; pela função &lt;tt class="docutils literal"&gt;del()&lt;/tt&gt; que o elemento foi removido da lista, como também, o índice de cada elemento a frente do elemento excluído foi alterado automáticamente.&lt;/p&gt;
&lt;p&gt;Desta forma, o elemento da lista A de índice igual a 2 era o objeto &lt;tt class="docutils literal"&gt;str&lt;/tt&gt; &lt;tt class="docutils literal"&gt;c&lt;/tt&gt;. Após excluírmos o elemento de índice igual a 1, o objeto que tinha índice igual a 2 passou a ter índice igual a 1, até porque, um elemento foi removido e o índice teve que ser reajustado, do contrário, teríamos que retornamos o elemento igual a 1 seria gerada uma exceção.&lt;/p&gt;
&lt;p&gt;Com isso, temos que entender que os índices não são valores absolutos e não podem ser utilizados como um meio para representar elementos, até porque, se um elemento é excluído ou um elemento é inserido no meio da lista, todos elementos a frente, terão seus índices alterados.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="excluindo-todos-os-elemento"&gt;
&lt;h2&gt;EXCLUINDO TODOS OS ELEMENTO&lt;/h2&gt;
&lt;p&gt;A função &lt;tt class="docutils literal"&gt;clear()&lt;/tt&gt; remove todos elementos da lista. A palavra &lt;tt class="docutils literal"&gt;Clear&lt;/tt&gt; do Inglês, significa &lt;tt class="docutils literal"&gt;limpar&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;limpeza&lt;/tt&gt;, logo, é essa a ação feita sobre uma lista que contém elementos.&lt;/p&gt;
&lt;p&gt;No código a seguir, vamos criar uma lista cuja referência será &lt;tt class="docutils literal"&gt;C&lt;/tt&gt; e os elementos será a junção dos elementos da lista A e B.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;B&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;c&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;d&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;e&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;f&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clear&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;
&lt;span class="p"&gt;[]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Como visto, inicialmente, criamos uma lista de nome C que contém os elementos de A e B e imprimimo-os na tela. Em seguida, invocamos a função &lt;tt class="docutils literal"&gt;clear()&lt;/tt&gt; da lista C e mandamos imprimir os elementos na tela. Como pode ser visto, foi impresso somente um par de colchetes &lt;tt class="docutils literal"&gt;[]&lt;/tt&gt;, representando assim, uma lista vazia.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="excluir-elementos-num-intervalo"&gt;
&lt;h2&gt;EXCLUIR ELEMENTOS NUM INTERVALO&lt;/h2&gt;
&lt;p&gt;Estudamos que a função built-in &lt;tt class="docutils literal"&gt;del()&lt;/tt&gt; remove um elemento da lista. Porém, a mesma é capaz de muito mais, como por exemplo, realizar a exclusão de todos os elementos num determinado intervalo, por exemplo, se tivermos uma lista &lt;tt class="docutils literal"&gt;[1,2,3,4,5,6]&lt;/tt&gt; e quisermos excluir todos elementos que esteja no intervalo de índice igual a 2 até o índice igual 4, passaríamos a ter a seguinte lista &lt;tt class="docutils literal"&gt;[1,2,5,6]&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Também podemos excluir os elementos que estejam entre outros num intervalo especifico, por exemplo, vamos supor a lista &lt;tt class="docutils literal"&gt;[1,2,3,4,5,6]&lt;/tt&gt;. Se precisarmos de uma lista contendo os elementos com 2 intervalos entre si, por exemplo, &lt;tt class="docutils literal"&gt;[1, 3, 5]&lt;/tt&gt; bastaria utilizarmos a notação que já estudamos.&lt;/p&gt;
&lt;p&gt;No código a seguir, será demonstrado um meio simples para você estudar o que estamos falando e ainda que a notação seja a mesma utilizada, a ideia que utilizaremos, talvez, seja novidade pra você.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#abaixo, definimos uma lista com 6 elementos e em seguida,&lt;/span&gt;
&lt;span class="c1"&gt;#utilizamos a notação que extrai elementos num intervalo&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;#abaixo, definimos uma lista com 6 elementos e em seguida,&lt;/span&gt;
&lt;span class="c1"&gt;#utilizamos a notação que define o passo [intervalo entre os elementos]&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;][::&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Para estudarmos os conceitos de exclusão estudados, iremos criar novamente a lista &lt;tt class="docutils literal"&gt;C&lt;/tt&gt; que é a junção das listas A e B e em seguida, aplicaremos o que estudamos.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#exclusão de elementos num intervalo&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;B&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;c&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;d&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;del&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;e&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;f&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;#exclusão de elementos que estejam entre intervalo&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;B&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;[::&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;c&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;e&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;del&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;[::&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;d&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;f&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Como podemos ver nos 2 exemplos acima apresentados, toda e qualquer sublista passada como argumento para a funçao &lt;tt class="docutils literal"&gt;del()&lt;/tt&gt; terá os elementos removidos da lista.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="funcao-pop"&gt;
&lt;h2&gt;FUNÇÃO &lt;tt class="docutils literal"&gt;pop()&lt;/tt&gt;&lt;/h2&gt;
&lt;p&gt;A função &lt;tt class="docutils literal"&gt;pop()&lt;/tt&gt; retorna um elemento da lista e no mesmo instânte, remove-o. É muito comum termos listas que contenham elementos que precisam ser processados e após o processamento, estes podem devem ser excluidos para que não haja processamento duplicado. Para essa tarefa repetitiva, o Python trás implementado uma função que retorna determinado elemento e ao mesmo tempo, exclui-o.&lt;/p&gt;
&lt;p&gt;Se nenhum argumento for passado pela função &lt;tt class="docutils literal"&gt;pop()&lt;/tt&gt; a mesma retornará e removerá o último elemento da lista. Porém, se desejarmos um elemento em especifico, basta passarmos como parâmetro o índice e então, o mesmo será retornado e excluído da lista.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;B&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;f&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;c&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;d&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;e&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;e&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;c&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;d&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;d&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;c&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;c&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima, criamos a lista &lt;tt class="docutils literal"&gt;C&lt;/tt&gt; que contém os elementos de &lt;tt class="docutils literal"&gt;A&lt;/tt&gt; e &lt;tt class="docutils literal"&gt;B&lt;/tt&gt; e em seguida, invocamos a função &lt;tt class="docutils literal"&gt;pop()&lt;/tt&gt;, um elemento foi impresso e em seguida, já verificamos a lista C e contatamos, que o elemento impresso com a função &lt;tt class="docutils literal"&gt;pop()&lt;/tt&gt; não mais fazia parte da lista.&lt;/p&gt;
&lt;p&gt;Como pode ser visto, quando não passamos o índice do elemento, o elemento excluido foi o último da lista. Dessa forma, removemos os elementos &lt;tt class="docutils literal"&gt;f&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;e&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;d&lt;/tt&gt;. Feito isso, invocamos a função &lt;tt class="docutils literal"&gt;pop()&lt;/tt&gt; novamente, porém, nessa quarta vez, passamos como parâmetro o número 0 e então, tivemos que o primeiro elemento da lista foi retornado e ao verificarmos a lista, o mesmo foi removido.&lt;/p&gt;
&lt;p&gt;A função por padrão retorna e remove o último elemento, porém, é possível informar qual elemento desejamos que seja retornado e removido, caso assim desejarmos.&lt;/p&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="python"></category></entry><entry><title>Fatiando Listas em Python</title><link href="http://excript.com/python/fatiando-lista-python.html" rel="alternate"></link><published>2015-04-28T01:31:00-03:00</published><updated>2015-04-28T01:31:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2015-04-28:/python/fatiando-lista-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos como fatiar listas, isto é, como extrair segmentos de dentro de grandes listas e também, estudaremos como extrair elementos dispostos num determinado intervalo.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="fatiamento-de-lista"&gt;
&lt;h2&gt;FATIAMENTO DE LISTA&lt;/h2&gt;
&lt;p&gt;Fatiamento de listas é a extração de um conjunto de elementos contidos numa lista.&lt;/p&gt;
&lt;p&gt;Tomemos como exemplo a lista &lt;tt class="docutils literal"&gt;[1,2 …&lt;/tt&gt;&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos como fatiar listas, isto é, como extrair segmentos de dentro de grandes listas e também, estudaremos como extrair elementos dispostos num determinado intervalo.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="fatiamento-de-lista"&gt;
&lt;h2&gt;FATIAMENTO DE LISTA&lt;/h2&gt;
&lt;p&gt;Fatiamento de listas é a extração de um conjunto de elementos contidos numa lista.&lt;/p&gt;
&lt;p&gt;Tomemos como exemplo a lista &lt;tt class="docutils literal"&gt;[1,2,3,4,5]&lt;/tt&gt; uma forma de fatiarmos é extraindo os elementos num determinado intervalo, como por exemplo &lt;tt class="docutils literal"&gt;[2,3,4]&lt;/tt&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="a-notacao-utilizada"&gt;
&lt;h2&gt;A NOTAÇÃO UTILIZADA&lt;/h2&gt;
&lt;p&gt;Para extrairmos um conjunto de elemento de uma lista, utilizamos inicialmente, a mesma notação utilizada para a obtenção de um único elemento, porém, ao invés de definirmos somente o elemento que desejamos, informaremos agora, o intervalo desejado.&lt;/p&gt;
&lt;p&gt;É importante observar que a notação de fatiamento é uma evolução da notação de obtenção de um único elemento, a diferença está somente na adição de alguns caracteres.&lt;/p&gt;
&lt;p&gt;Para retornarmos uma elemento de uma lista, devemos passar entre colchete, qual o índice do elemento. No fatiamento, adicionaremos 2 informações, o índice do primeiro e do último elemento a ser extraído, por exemplo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;c&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;d&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;e&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;c&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;d&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima, definimos uma referência &lt;code&gt;A&lt;/code&gt; e atribuimos a esta uma lista contendo 5 elementos. Em seguida, utilizamos a referência seguida por um par de colchetes &lt;code&gt;[]&lt;/code&gt; e dentro deste, definimos dois números que foram separados pelo caractere &lt;code&gt;:&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Então, a notação que devemos utilizar no fatiamento de listas é a seguinte:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;referência&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;inicio&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;fim&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Referência é o nome da variável que está vinculada a lista, &lt;code&gt;&amp;lt;inicio&amp;gt;&lt;/code&gt; é o índice corresponde ao primeiro elemento que deve pertencer a fração a ser extraída e &lt;code&gt;&amp;lt;fim&amp;gt;&lt;/code&gt;, deve ser o índice do último elemento que deve estar contido na lista a ser extraída.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="intervalo-elementos"&gt;
&lt;h2&gt;INTERVALO ELEMENTOS&lt;/h2&gt;
&lt;p&gt;Intervalo é a distância existente entre cada elemento resultante do fatiamento. Por exemplo, se tivermos uma lista com os elementos de 1 até 10 e definirmos o &lt;tt class="docutils literal"&gt;intervalo&lt;/tt&gt; como sendo igual a 2, iremos obter uma lista igual &lt;code&gt;[1, 3, 5, 7, 9]&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;A notação para a definição do intervalo é uma continuação da notação do fatiamento, assim, temos que:&lt;/p&gt;
&lt;blockquote&gt;
referência[ &amp;lt;inicio&amp;gt; : &amp;lt;fim&amp;gt; : &amp;lt;intervalo&amp;gt; ]&lt;/blockquote&gt;
&lt;p&gt;Na notação acima, a única novidade a utilização do sinal de &lt;tt class="docutils literal"&gt;:&lt;/tt&gt; e a definição do intervalo propriamente dito.&lt;/p&gt;
&lt;p&gt;A seguir, vamos definir uma lista e extrair desta uma lista onde os elementos tenham um intervalo pré-definido.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;[::&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Observe no código acima que não definimos o intervalo inicial e final, até porque, queríamos trabalhar com todos os elementos definidos em &lt;tt class="docutils literal"&gt;X&lt;/tt&gt;. Porém, poderíamos ter definido inicialmente o fatiamento e a notação final seria praticamente a mesma.&lt;/p&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="python"></category></entry><entry><title>Funções da Classe list do Python</title><link href="http://excript.com/python/funcoes-classe-list-python.html" rel="alternate"></link><published>2015-03-09T17:07:00-03:00</published><updated>2015-03-09T17:07:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2015-03-09:/python/funcoes-classe-list-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula vamos estudar as funções append(), del() que são, umas principais funções implementadas para manipulação da estrutura list. Faremos alguns exemplos demonstrado o funcionamento das funções bem como, estudaremos algumas situações interessantes.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="funcoes-das-listas"&gt;
&lt;h2&gt;FUNÇÕES DAS LISTAS&lt;/h2&gt;
&lt;p&gt;A classe list disponibiliza um conjunto de funcionalidades úteis e bastante performaticas. Jamais reinvente …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula vamos estudar as funções append(), del() que são, umas principais funções implementadas para manipulação da estrutura list. Faremos alguns exemplos demonstrado o funcionamento das funções bem como, estudaremos algumas situações interessantes.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="funcoes-das-listas"&gt;
&lt;h2&gt;FUNÇÕES DAS LISTAS&lt;/h2&gt;
&lt;p&gt;A classe list disponibiliza um conjunto de funcionalidades úteis e bastante performaticas. Jamais reinvente a roda se não houver uma boa razão! Até porque, as funcionalidades das listas estão adicionadas dentro da VM do Python e assim, a manipulação de listas é quase que a execução de código C.&lt;/p&gt;
&lt;p&gt;A maior parte da manipulação de lista é possível fazer utilizando a própria sintaxe da linguagem, porém, como veremos, nem tudo é possível. Há situações especificas na qual não temos uma maneira simples de acessarmos os elementos de maneira natural, logo, precisaremos utilizar funções definidas na classe &lt;code&gt;list&lt;/code&gt;. No parágrafo anterior foi dito que as funcionalidades da classe &lt;code&gt;list&lt;/code&gt; estão implementadas na VM do Python, porém, a partir de agora, iremos nos referir a essas funcionalidades como se as mesmas tivessem sido implementas na Linguagem Python, e pudessem ter o seu código alterado.&lt;/p&gt;
&lt;p&gt;Junto a lasse list(), temos diversas implementações que servem como ferramentas para as mais diversas funcionalidades, dessa forma, somos capazes de extrair elementos contidos em listas diferentes, ou então, mesclar duas listas sem mas duplicar elementos.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="concatenacao-de-listas"&gt;
&lt;h2&gt;CONCATENAÇÃO DE LISTAS&lt;/h2&gt;
&lt;p&gt;Estudamos que uma lista pode ser de qualquer tipo, até porque, para o Python, tudo são objetos.&lt;/p&gt;
&lt;p&gt;Também estudamos que podemos concatenar 2 pedaços de texto, utilizando o sinal de adição. Agora, sendo um pedaço de texto uma lista de caracteres, nós temos que o sinal de adição faz a concatenação de objetos, e não de caracteres. Logo, se temos 2 listas e desejarmos obter uma terceira que seja a junção, podemos utilizar o sinal de adição, por exemplo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;B&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;c&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;C&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;B&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A referência &lt;code&gt;C&lt;/code&gt; contém uma nova lista que foi formada pelos elementos da lista &lt;code&gt;A&lt;/code&gt; e os elementos da lista &lt;code&gt;B&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Do resultado do código anterior, é possível entender, que o operador &lt;code&gt;+&lt;/code&gt; funciona diferentemente com objetos de classes distintas.&lt;/p&gt;
&lt;p&gt;É possivel deduzir que objetos numéricos separados pelo sinal de adição, resultam na soma e geram um novo objeto numérico com o valor total.&lt;/p&gt;
&lt;p&gt;Cadeias de caracteres separadas com o sinal de adição, resultam num objeto do tipo &lt;code&gt;str&lt;/code&gt; com a junção de ambos textos.&lt;/p&gt;
&lt;p&gt;Agora, acabamos de ver, que o sinal de adição, entre 2 listas, resultam num terceiro objeto lista, que contém, os elementos das listas separadas pelo sinal de adição.&lt;/p&gt;
&lt;p&gt;É importante observar que o sinal de adição concatena 2 listas. Se nós tivermos uma concatenação entre uma lista e um objeto, será levantado uma mensagem de erro, por exemplo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="n"&gt;lista9&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="c1"&gt;#erro de compilação!&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Observe, que os elementos de uma lista estão sendo concatenado a um objeto que não é do tipo &lt;code&gt;list()&lt;/code&gt;, logo, obteremos uma mensagem de erro.&lt;/p&gt;
&lt;p&gt;No código abaixo, temos o mesmo resultado do código acima, porém, adicionamos a mensagem retornada pelo Python.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;

&lt;span class="n"&gt;Traceback&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;most&lt;/span&gt; &lt;span class="n"&gt;recent&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; pyshell-1 &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;module&lt;/span&gt;
    &lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="ne"&gt;TypeError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;can&lt;/span&gt; &lt;span class="n"&gt;only&lt;/span&gt; &lt;span class="n"&gt;concatenate&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;int&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Foi retornado um erro alertando que não é possível a soma de um objeto &lt;code&gt;list()&lt;/code&gt; com um objeto numérico.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="a-funcao-append"&gt;
&lt;h2&gt;A FUNÇÃO &lt;code&gt;append()&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;A função &lt;code&gt;append()&lt;/code&gt; adiciona o elemento definido como argumento ao fim da lista. A palavra &lt;code&gt;append()&lt;/code&gt; do Inglês, significa, adicionar, logo, seu uso em Python, cumpre com o seu significado.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima, temos um exemplo onde os colchetes &lt;code&gt;[]&lt;/code&gt; representam uma lista e na sequência utilizamos a função &lt;code&gt;append()&lt;/code&gt; para adicionar um elemento à lista.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="exclusao-de-elementos"&gt;
&lt;h2&gt;EXCLUSÃO DE ELEMENTOS&lt;/h2&gt;
&lt;p&gt;A função built-in de nome &lt;code&gt;del()&lt;/code&gt; remove o elemento passado como argumento da lista onde este está contido. Vale ressaltar que não é preciso adicionar nenhum pacote e nem fazer menção a qualquer referência, até porque, todas as funções built-in estão disponíveis em todo código &lt;tt class="docutils literal"&gt;Python&lt;/tt&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="k"&gt;del&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;O código acima, define uma lista com 6 elementos e em seguida, passa como parâmetro da função &lt;code&gt;del()&lt;/code&gt; o índice do elemento a ser removido.&lt;/p&gt;
&lt;p&gt;Se observar os elementos contido em na lista &lt;tt class="docutils literal"&gt;A&lt;/tt&gt; após a execução da função &lt;code&gt;del()&lt;/code&gt;, observaremos que o elemento numérico 2 terá sido removido.&lt;/p&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="python"></category></entry><entry><title>Classe list - Conceitos Avançados do Python</title><link href="http://excript.com/python/conceitos-avancados-lista-python.html" rel="alternate"></link><published>2014-11-12T14:57:00-02:00</published><updated>2014-11-12T14:57:00-02:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2014-11-12:/python/conceitos-avancados-lista-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nessa aula continuaremos o estudo das Listas em Python e veremos definições e tecnicas avançadas para a manipulação e construção de estruturas complexas com uso de conceito primitivo das listas.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="lista-de-objetos"&gt;
&lt;h2&gt;LISTA DE OBJETOS&lt;/h2&gt;
&lt;p&gt;Estudamos nas aulas anteriores como definir uma lista em Python utilizando a notação implicita e explicita. Para …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nessa aula continuaremos o estudo das Listas em Python e veremos definições e tecnicas avançadas para a manipulação e construção de estruturas complexas com uso de conceito primitivo das listas.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="lista-de-objetos"&gt;
&lt;h2&gt;LISTA DE OBJETOS&lt;/h2&gt;
&lt;p&gt;Estudamos nas aulas anteriores como definir uma lista em Python utilizando a notação implicita e explicita. Para recordamos ambos conceitos, analisemos o trecho de código a seguir.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="n"&gt;lista1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;#declaração implicita de lista&lt;/span&gt;
&lt;span class="n"&gt;lista2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;#declaração explicita de lista&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Observe como definimos os elementos que foi atribuido para a referência &lt;tt class="docutils literal"&gt;lista2&lt;/tt&gt;, isto é, enviamos 3 objetos numéricos e utilizamos 2 parenteis. O primeiro parêntesis é onde declaramos os parâmetros iniciais que podem ser enviados na definição de uma nova lista. O segundo parêntesis, é para dizer ao Python, que todos os 3 elementos devem ser adicionado a lista que estamos criando. Se o segundo parêntesis fosse omitido, estaríamos dizendo que cada objeto numérico é um parâmetro na inicialização de um objeto &lt;tt class="docutils literal"&gt;list&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Se é possível definir qualquer objeto como sendo um elemento de uma lista, podemos declarar listas que contém elementos que também são lista, como no código a seguir.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[],&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt; &lt;span class="p"&gt;[]]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Inicialmente, definimos uma lista de nome &amp;quot;l&amp;quot; e a esta atribuímos uma lista que contém 3 elementos do tipo lista, ou seja, temos lista contido dentro de outra lista.&lt;/p&gt;
&lt;p&gt;Para que seja mais fácil o nosso estudo, vamos definir uma outra lista que contém listas internamente, porém agora, vamos atribuir itens para  a lista interna, por exemplo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="n"&gt;lista&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;c&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Acima, nós definimos uma lista, de nome &amp;quot;lista&amp;quot; que contém dois elementos do tipo &lt;code&gt;list&lt;/code&gt;. O primeiro elemento que é do tipo lista, nós temos 3 outros elementos definidos. Assim, temos que a referência &amp;quot;lista5&amp;quot; contém um elemento que é uma lista que contém outros 3 elementos.&lt;/p&gt;
&lt;p&gt;Para nós acessarmos elementos contidos em listas, temos que utilizar uma notação especifica onde definimos o índice do elemento a ser acessado, como podemos ver no código seguinte.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="n"&gt;lista&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Se você executar esse código, perceberá que o elemento retornado também será uma lista, até porque, definimos uma Lista como sendo também, um elemento de outra Lista.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="listas-contidas-em-listas"&gt;
&lt;h2&gt;LISTAS CONTIDAS EM LISTAS&lt;/h2&gt;
&lt;p&gt;O acesso a elementos a listas contidas em outras, faz-se através da concatenação de pares de colchetes. Logo, quando mais aninhado tiver a lista, maior a concatenação de colchetes necessária. É importante destacar que cada par de colchete representa uma lista.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="n"&gt;lista&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Se executarmos o código acima, estaremos dizendo ao Python que queremos acessar o elemento 0 do objeto de nome &amp;quot;lista&amp;quot; e em seguida, queremos acessar um elemento de índice 0, do elemento que nos será retornado.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="o-primeiro-e-ultimo-elemento"&gt;
&lt;h2&gt;O PRIMEIRO E ÚLTIMO ELEMENTO&lt;/h2&gt;
&lt;p&gt;As linguagens geralmente definem que o primeiro elemento da lista tem índice 0, uma definição utilizada em linguagens antigas, decorrente de uma outra linguagem e a história vai longe.&lt;/p&gt;
&lt;p&gt;Quando escuto alguém dizer que essa notação está errado, concordo totalmente, porém, discordo que o padrão seja hoje descontinuado! Fisicamente, nenhuma lista contém elementos que precedem o primeiro, ou seja, não existe nem nomenclatura para nos referirmos ao elemento 0. Então, mesmo que nao haja lógica, o fato é que essa notação se tornou um padrão e é adotado pelas principais linguagens de programação do mercado.&lt;/p&gt;
&lt;p&gt;Por isso, hoje, é indiferente se o conceito é certo ou errado, até porque assim está definido e não crie esperanças de algum dia vê-lo alterado! Isso seria o maior caos para os sistemas legados.&lt;/p&gt;
&lt;p&gt;Um padrão não usual é se referir ao último elemento da lista com índice igual a -1. Esse conceito é bastante lógico às listas onde o primeiro elemento possui índice 0. Assim, se imaginarmos uma lista como sendo um círculo fechado e o primeiro elemento é igual a 0, nada mais justo do que atribuir ao último elemento índice igual a -1.&lt;/p&gt;
&lt;p&gt;E também, todos que já manipularam listas de forma primitiva, sabem que os elementos mais acessados na grande maioria das funcionalidades que devem ser implementas, manipulam o primeiro e o último elemento.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#coding: utf-8&lt;/span&gt;

&lt;span class="n"&gt;lista&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;#acesso ao primeiro elemento&lt;/span&gt;

&lt;span class="n"&gt;lista&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;#acesso ao último elemento&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="python"></category></entry><entry><title>Operadores Lógicos em Python</title><link href="http://excript.com/python/operadores-logicos-python.html" rel="alternate"></link><published>2014-06-03T18:11:00-03:00</published><updated>2014-06-03T18:11:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2014-06-03:/python/operadores-logicos-python.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos os operadores lógicos na linguagem Python. Aprenderemos também a definição de valor lógica, a definição de conjunção, disjunção e de sub-expressões lógicas.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="introducao-aos-operadores-logicos"&gt;
&lt;h2&gt;INTRODUÇÃO AOS OPERADORES LÓGICOS&lt;/h2&gt;
&lt;p&gt;Os &lt;strong&gt;operadores lógicos&lt;/strong&gt; unem expressões lógicas formando assim, uma nova expressão que é composta por 2 ou mais sub-expressões. O resultado …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos os operadores lógicos na linguagem Python. Aprenderemos também a definição de valor lógica, a definição de conjunção, disjunção e de sub-expressões lógicas.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="introducao-aos-operadores-logicos"&gt;
&lt;h2&gt;INTRODUÇÃO AOS OPERADORES LÓGICOS&lt;/h2&gt;
&lt;p&gt;Os &lt;strong&gt;operadores lógicos&lt;/strong&gt; unem expressões lógicas formando assim, uma nova expressão que é composta por 2 ou mais sub-expressões. O resultado lógico de expressões compostas será a relação entre as sub-expressões. Como estudamos, toda expressão lógica avaliada resultará num &lt;strong&gt;valor lógico&lt;/strong&gt; e a relação entre vários valores lógicos é um outro valor lógico.&lt;/p&gt;
&lt;p&gt;Quando estudamos os &lt;a class="reference external" href="{filename}../curso-de-python/0019_operador-relacional-python.rst"&gt;Operadores Relacionais&lt;/a&gt; aprendemos a obter o valor lógico entre 2 operandos, no caso, entre o operando que está a esquerda do operador e o operando que está a direita do Operador Relacional. Como resposta, obtemos valores do tipo Booleano, isto é, verdadeiro [&lt;strong&gt;True&lt;/strong&gt;] ou falso [&lt;strong&gt;False&lt;/strong&gt;].&lt;/p&gt;
&lt;p&gt;Os &lt;strong&gt;operadores lógicos&lt;/strong&gt; por sua vez, permite-nos unir 2 expressões ligando-as com os conectivos lógicos matemáticos que são, o conectivo &lt;strong&gt;E&lt;/strong&gt; e o conectivo &lt;strong&gt;OU&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="valor-logico"&gt;
&lt;h2&gt;VALOR LÓGICO&lt;/h2&gt;
&lt;p&gt;O &lt;strong&gt;valor lógico&lt;/strong&gt; é um tipo de dado binário, isto é, assume um valor dentre duas opções: verdadeiro ou falso.&lt;/p&gt;
&lt;p&gt;Os valores lógicos são de fato a base de toda a computação, até porque, temos que, o &lt;tt class="docutils literal"&gt;bit&lt;/tt&gt; está ligado ou o &lt;tt class="docutils literal"&gt;bit&lt;/tt&gt; está desligado. O valor lógico em sua forma mais primitiva assume o número 1 quando verdadeiro e assume o valor 0 quando falso.&lt;/p&gt;
&lt;p&gt;Toda expressão avaliada na computação de maneira geral, resulta num &lt;strong&gt;valor lógico&lt;/strong&gt;, isto é, ou a expressão é verdadeira, ou a expressão é falsa. Como aprenderemos de agora em diante, todas as estruturas da linguagem Python baseiam-se nos 2 valores lógicos possíveis.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="o-tipo-de-dado-booleano-bool"&gt;
&lt;h2&gt;O TIPO DE DADO BOOLEANO (&lt;tt class="docutils literal"&gt;bool&lt;/tt&gt;)&lt;/h2&gt;
&lt;p&gt;O tipo de dado Booleano, que em Python é representado pela classe &lt;cite&gt;bool&lt;/cite&gt; assume um valor dentre 2 valores constante: &lt;strong&gt;True&lt;/strong&gt; ou &lt;strong&gt;False&lt;/strong&gt;. A palavra &lt;a class="reference external" href="https://pt.wikipedia.org/wiki/Booliano"&gt;Booleano&lt;/a&gt; vem do sobrenome do filósofo e matemático &lt;a class="reference external" href="https://pt.wikipedia.org/wiki/George_Boole"&gt;George Boole&lt;/a&gt; o criado da &lt;a class="reference external" href="https://pt.wikipedia.org/wiki/%C3%81lgebra_booliana"&gt;Álgebra Booleana&lt;/a&gt; .&lt;/p&gt;
&lt;p&gt;Se formos no IDLE e verificarmos com a instrução &lt;tt class="docutils literal"&gt;type()&lt;/tt&gt; o tipo dos valores lógicos ou então, o tipo de uma expressão lógica, teremos como resposta o valor &lt;tt class="docutils literal"&gt;&amp;lt;class 'bool'&amp;gt;&lt;/tt&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nc"&gt;bool&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;gt;&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nc"&gt;bool&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;gt;&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nc"&gt;bool&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Como podemos ver acima o Python reconhece as 2 constantes como pertencentes ao tipo de dado &lt;cite&gt;bool&lt;/cite&gt;, no caso, as constantes &lt;strong&gt;True&lt;/strong&gt; e &lt;strong&gt;False&lt;/strong&gt;. É importante notar que ambas constantes iniciam com letra maiúscula, do contrário, o Python tratará como sendo uma referência desconhecida.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="conectivos-logicos"&gt;
&lt;h2&gt;CONECTIVOS LÓGICOS&lt;/h2&gt;
&lt;p&gt;As linguagens de programação, utilizam os &lt;strong&gt;conectivos lógicos&lt;/strong&gt; da lógica formal, ou melhor da lógica Aristotélica, na construção de expressões lógicas. Existem 2 conectivos lógicos e, mesmo que não os conheçamos com o nome de &lt;strong&gt;conectivos lógicos&lt;/strong&gt;, utilizamo-os constantemente ao conversarmos ou então, para explicarmos qualquer disciplina a outra pessoa.&lt;/p&gt;
&lt;p&gt;Os dois conectivos lógicos são:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Conectivo de &lt;strong&gt;conjunção&lt;/strong&gt;: &lt;strong&gt;E&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Conectivo de &lt;strong&gt;disjunção&lt;/strong&gt;: &lt;strong&gt;OU&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;Por exemplo, a simples frase &lt;tt class="docutils literal"&gt;A e B são caracteres iguais&lt;/tt&gt; implica numa expressão lógica e acabamos de representar a mesma textualmente. Porém, a expressão pode ser facilmente escrita matematicamente, ou então, com o uso de uma linguagem de programação.&lt;/p&gt;
&lt;p&gt;Por essa razão, devemos olhar para as Linguagens de Programação como sendo, antes de tudo,  formas ou estilos de &lt;strong&gt;Notação&lt;/strong&gt; lógica. Como sabemos, existe a notação matemática que possui suas próprias regras e sua própria sintaxe. Existem algumas linguagens de programação que por exemplo, suportam a sintaxe matemática na definição de expressões e na composição de sentenças lógicas.&lt;/p&gt;
&lt;p&gt;Por fim, os &lt;strong&gt;conectivos lógicos&lt;/strong&gt; devem ser entendidos como ferramenta de notação utilizada para unir duas ou mais expressões, e como resultado da união, forma-se uma nova expressão.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="avaliacao-de-expressoes"&gt;
&lt;h2&gt;AVALIAÇÃO DE EXPRESSÕES&lt;/h2&gt;
&lt;p&gt;A avaliação de expressão em linguagens de programação é, o trabalho que o compilador ou interpretador faz, quando este, através de 2 expressões, avalia se a &lt;strong&gt;proposição&lt;/strong&gt;, isto é, a expressão avaliada é ou não verdadeira.&lt;/p&gt;
&lt;p&gt;É importante observar que as expressões, são sempre avaliadas se são verdadeiras e é bom esse entendimento, até porque, podia ser o contrário, e as vezes será, quando assim desejarmos e utilizarmos uma notação especifica para isso.&lt;/p&gt;
&lt;p&gt;Então, por padrão, &lt;strong&gt;todas as expressão são avaliadas&lt;/strong&gt; com a pergunta se são ou não verdadeiras.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="tabela-de-valores-logicos"&gt;
&lt;h2&gt;TABELA DE VALORES LÓGICOS&lt;/h2&gt;
&lt;p&gt;A tabela de valor lógica é uma tabela que mostra o resultado da avaliação de 2 expressões lógicas. É importante observar que &lt;strong&gt;essa tabela NÃO é uma convenção&lt;/strong&gt;, mas sim, o resultado da dedução lógica e que você pode facilmente deduzi-la.&lt;/p&gt;
&lt;p&gt;True &lt;strong&gt;E&lt;/strong&gt; True é True
True &lt;strong&gt;E&lt;/strong&gt; False é False
False &lt;strong&gt;E&lt;/strong&gt; True é False&lt;/p&gt;
&lt;p&gt;True &lt;strong&gt;OU&lt;/strong&gt; False é True
False &lt;strong&gt;OU&lt;/strong&gt; True é True
True &lt;strong&gt;OU&lt;/strong&gt; True é True
False &lt;strong&gt;OU&lt;/strong&gt; False é False&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="o-conectivo-de-conjuncao-e"&gt;
&lt;h2&gt;O CONECTIVO DE CONJUNÇÃO &lt;tt class="docutils literal"&gt;E&lt;/tt&gt;&lt;/h2&gt;
&lt;p&gt;O &lt;strong&gt;conectivo lógico de conjunção E&lt;/strong&gt;, une a expressão a sua esquerda a expressão a sua direita. Expressões com o uso do &lt;strong&gt;conectivo de conjunção&lt;/strong&gt; originam frases em Português, mais ou menos assim: &lt;tt class="docutils literal"&gt;A é verdadeiro e B é verdadeiro&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Nas situações em que A for verdadeiro e B também, o resultado, segundo a tabela lógica, será também verdadeiro.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No exemplo acima, temos uma &lt;tt class="docutils literal"&gt;expressão lógica composta&lt;/tt&gt; constituida por 2 expressões lógicas simples e, ligadas pelo &lt;tt class="docutils literal"&gt;conectivo de conjunção&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Primeira expressão simples: &lt;tt class="docutils literal"&gt;(var1 == 0)&lt;/tt&gt;
Segunda expressão simples expressão: &lt;tt class="docutils literal"&gt;(var1 == 0)&lt;/tt&gt;
Conectivo lógico de conjunção: &lt;strong&gt;and&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Para analisarmos uma &lt;tt class="docutils literal"&gt;expressão lógica composta&lt;/tt&gt;, precisamos antes, analisar suas &lt;tt class="docutils literal"&gt;expressões lógicas simples&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;No trecho de código acima, a primeira sub-expressão, analisas se o valor da variável &lt;tt class="docutils literal"&gt;x&lt;/tt&gt; é maior do que 0. A variável &lt;tt class="docutils literal"&gt;x&lt;/tt&gt; está declarada na linha anterior a expressão e inicializada com o valor 1, por isso, a primeira sub-expressão é verdadeira.&lt;/p&gt;
&lt;p&gt;A segunda expressão, analisa se o valor da variável &lt;tt class="docutils literal"&gt;x&lt;/tt&gt; é menor do que 100. O valor da variável &lt;tt class="docutils literal"&gt;x&lt;/tt&gt; é igual a 1 e, por isso, menor do que 100. Por fim, obtivemos 2 valores lógicos e agora podemos deduzir o resultado lógica de toda expressão e o fazemos no trecho de código a seguir.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima, temos a mesma expressão do exemplo anterior, porém, substituimos as duas &lt;strong&gt;expressões lógicas simples&lt;/strong&gt; por seus respectivos &lt;strong&gt;valores lógicos&lt;/strong&gt;, isto é, o valor decorrente da &lt;strong&gt;análise lógica&lt;/strong&gt; de cada sub-expressão.&lt;/p&gt;
&lt;p&gt;A expressão &lt;tt class="docutils literal"&gt;(True) and (True)&lt;/tt&gt;, se comparada com a &lt;strong&gt;Tabela Lógica de Valores&lt;/strong&gt;, tem-se que o valor decorrente dessa segunda análise, será True, até porque, &lt;tt class="docutils literal"&gt;True and True == True&lt;/tt&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="conectivo-de-disjuncao-ou"&gt;
&lt;h2&gt;CONECTIVO DE DISJUNÇÃO &lt;tt class="docutils literal"&gt;OU&lt;/tt&gt;&lt;/h2&gt;
&lt;p&gt;O &lt;strong&gt;conectivo lógico de disjunção OU&lt;/strong&gt; liga a expressão a sua esquerda a expressão a sua direita. Expressões com o uso do &lt;strong&gt;conectivo de disjunção&lt;/strong&gt; dão origem a frases em Português  mais ou menos assim: &lt;tt class="docutils literal"&gt;A é verdadeiro OU B é verdadeiro&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;O &lt;strong&gt;operador lógico OU&lt;/strong&gt; sempre precisará que uma das 2 &lt;strong&gt;sub-expressões&lt;/strong&gt; conectadas sejam verdadeiras para que, a expressão num todo seja verdadeira.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;ou&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A expressão lógica composta que temos no código acima, será desmembrada como estudado anteriormente, e agora, para que a avaliação seja verdadeira, uma das 2 expressões simples precisam ser verdadeiras.&lt;/p&gt;
&lt;p&gt;A primeira expressão &lt;tt class="docutils literal"&gt;(x &amp;gt; 10)&lt;/tt&gt;, a variável``x`` está declarada na linha anterior e inicializada com o valor igual a 1, logo, essa expressão é falsa, até porque, o valor de &lt;tt class="docutils literal"&gt;x&lt;/tt&gt; não é maior do que 10.&lt;/p&gt;
&lt;p&gt;A segunda expressão &lt;tt class="docutils literal"&gt;(x &amp;lt; 100)&lt;/tt&gt; está perguntando se o valor da variável &lt;tt class="docutils literal"&gt;x&lt;/tt&gt; é menor do que o número 100. Essa expressão é verdadeira, até porque, o número 1 é menor do que o número 100.&lt;/p&gt;
&lt;p&gt;No código a seguir, temos a expressão originada a partir do código anterior.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Agora, temos que o primeiro &lt;strong&gt;valor lógico&lt;/strong&gt; é falso, enquanto o segundo é verdadeiro. Esse valores estão ligados pelo &lt;strong&gt;conectivo de disjunção&lt;/strong&gt; que será verdadeiro caso uma das sub-expressões o seja. Como o segundo valor lógico é verdadeiro, o valor decorrente dessa &lt;strong&gt;análise lógica&lt;/strong&gt; será verdadeiro.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="expressoes-simples-e-compostas"&gt;
&lt;h2&gt;EXPRESSÕES SIMPLES E COMPOSTAS&lt;/h2&gt;
&lt;p&gt;Os &lt;strong&gt;operadores relacionais&lt;/strong&gt; obtém a relação entre os operandos e, por isso, podemos chamar esse tipo de expressão como sendo, &lt;strong&gt;expressões simples&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;As &lt;strong&gt;expressões compostas&lt;/strong&gt;, por sua vez, são a união de 2 ou mais expressões simples e, ligadas por algum &lt;strong&gt;conectivo lógico&lt;/strong&gt;. A seguir, temos um exemplo utilizando o &lt;strong&gt;conectivo lógico de conjunção&lt;/strong&gt; que une 2 expressões e dá origem a uma nova &lt;strong&gt;expressão lógica&lt;/strong&gt;.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
EXEMPLO 1
isso E isso

EXEMPLO 2
x E y
&lt;/pre&gt;
&lt;p&gt;Em ambos exemplos, estamos unindo 2 membros, mas não estamos perguntando nada. Porém, a frase correta e que é utilizada pela grande maioria das linguagens de programação, senão todas, é a seguinte: &lt;tt class="docutils literal"&gt;A é verdadeiro e B é verdadeiro, logo ...&lt;/tt&gt;. Chamamos isso de &lt;tt class="docutils literal"&gt;expressão lógica&lt;/tt&gt; ou melhor, &lt;tt class="docutils literal"&gt;expressão lógica composta&lt;/tt&gt;, até porque, a expressão se origina de duas outras expressões, isto é, a que está ao lado esquerdo do operador relacional e a expressão que está ao seu lado direito.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="veja-tambem"&gt;
&lt;h2&gt;VEJA TAMBÉM&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/operador-aritmetico-em-python.html"&gt;Aula 16: Operadores Aritméticos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="{filename}../curso-de-python/0019_operador-relacional-python.rst"&gt;Aula 19: Operadores Relacionais&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/operador-relacional-composto-python.html"&gt;Aula 23: Operadores Relacionais Compostos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/operadores-relacionais-na-pratica-python.html"&gt;Aula 24: Operadores Relacionais na Prática&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/operadores-logicos-python.html"&gt;Aula 25: Operadores Lógicos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/operador-de-atribuicao-python.html"&gt;Aula 30: Operadores de Atribuição&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/atribuicao-multipla-python.html"&gt;Aula 31: Operador de Atribuição Múltipla&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://excript.com/python/operadores-de-atribuicao-compostos-python.html"&gt;Aula 32: Operador de Atribuição Compostos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="python"></category><category term="operadores"></category><category term="operadores lógicos"></category><category term="and"></category><category term="or"></category><category term="not"></category><category term="is"></category><category term="is not"></category><category term="in"></category><category term="not in"></category><category term="blog"></category></entry></feed>