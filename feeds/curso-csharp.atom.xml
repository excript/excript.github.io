<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>eXcript - curso csharp</title><link href="http://excript.com/" rel="alternate"></link><link href="http://feeds.excript.com/feeds/curso-csharp.atom.xml" rel="self"></link><id>http://excript.com/</id><updated>2016-05-01T00:00:00-03:00</updated><subtitle></subtitle><entry><title>Curso de C#</title><link href="http://excript.com/curso-csharp.html" rel="alternate"></link><published>2016-05-01T00:00:00-03:00</published><updated>2016-05-01T00:00:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2016-05-01:/curso-csharp.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; O Curso de C# lhe ensinará tanto a Lógica de Programação, como também, a linguagem C# propriamente dita. O curso parte do princípio que o aluno não conhece nada de programação e assim, aborda desde o início, todos os aspectos ligados com a programação e o desenvolvimento de software.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="sobre-o-curso"&gt;
&lt;h2&gt;SOBRE …&lt;/h2&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; O Curso de C# lhe ensinará tanto a Lógica de Programação, como também, a linguagem C# propriamente dita. O curso parte do princípio que o aluno não conhece nada de programação e assim, aborda desde o início, todos os aspectos ligados com a programação e o desenvolvimento de software.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="sobre-o-curso"&gt;
&lt;h2&gt;SOBRE O CURSO&lt;/h2&gt;
&lt;p&gt;O &lt;a class="reference external" href="curso-csharp.html"&gt;Curso C#&lt;/a&gt; da eXcript é a forma mais fácil para iniciar os estudos na linguagem de programação C#. As aulas partem do princípio que o aluno nunca programou e por isso, é ensinado o básico da linguagem de programação, até a execução de lógicas complexas na manipulação do fluxo de controle das aplicações.&lt;/p&gt;
&lt;p&gt;Ainda nas primeiras aulas, estudamos como instalar o C#, como instalar uma IDE (editor de código), como executar os códigos que você escreveu e etc. Dessa forma, é exigido do aluno só e somente só, conhecimentos de como utilizar o Sistema Operacional e um navegador Web.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="pre-requisitos"&gt;
&lt;h2&gt;PRÉ-REQUISITOS&lt;/h2&gt;
&lt;p&gt;Para o bom aproveitamento deste curso, &lt;strong&gt;NÃO É NECESSÁRIO ter conhecimentos prévios de programação&lt;/strong&gt;! Basta você ter conhecimentos elementares sobre como utilizar um sistema operacional, que já será o suficiente para acompanhar todas as aulas de programação de computadores com a linguagem C#.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="sistema-operacional"&gt;
&lt;h2&gt;SISTEMA OPERACIONAL&lt;/h2&gt;
&lt;p&gt;O C# atualmente, pode ser executado nos principais Sistemas Operacionais do mercado e por isso, sinta-se a vontade para escolher a plataforma onde irás instalar e configurar o seu ambiente de estudo.&lt;/p&gt;
&lt;p&gt;Neste curso, utilizamos o Sistema Operacional Windows. Você poderá utilizar qualquer sistema operacional do mercado, como por exemplo, Mac OS, Linux (qualquer distro), Microsoft Windows (qualquer versão).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="e-a-logica-de-programacao"&gt;
&lt;h2&gt;E A LÓGICA DE PROGRAMAÇÃO?&lt;/h2&gt;
&lt;p&gt;A &lt;strong&gt;Lógica de Programação&lt;/strong&gt; será ensinada junto com a linguagem C#. Talvez você fique na dúvida se é melhor estudar a lógica de programação com uma linguagem que esteja em Português, como por exemplo, Portugol. &lt;strong&gt;Nós garantimos que não há necessidade de ter qualquer conhecimento de programação para acompanhar este curso&lt;/strong&gt;!&lt;/p&gt;
&lt;p&gt;Economize tempo e vá direto ao assunto, aprenda lógica de programação e a programar com a linguagem consagrada para o ensino de programação: o Python!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="lista-das-aulas"&gt;
&lt;h2&gt;LISTA DAS AULAS&lt;/h2&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="csharp"></category><category term="curso de csharp"></category><category term="aula de csharp"></category><category term="eXcript"></category><category term="blog"></category></entry><entry><title>Operadores Aritméticos do C#</title><link href="http://excript.com/csharp/operador-aritmetico-csharp.html" rel="alternate"></link><published>2015-05-22T01:40:00-03:00</published><updated>2015-05-22T01:40:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2015-05-22:/csharp/operador-aritmetico-csharp.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos os operadores aritméticos do C#. Aprenderemos a somar, subtrair, multiplicar e a dividir dentre outras operações aritméticas.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="operadores-aritmeticos"&gt;
&lt;h2&gt;OPERADORES ARITMÉTICOS&lt;/h2&gt;
&lt;p&gt;Operadores Aritméticos são os operadores matemáticos para realizarmos operações de soma, subtraçao, multiplicação e divisão. A linguagem C# proporciona a execução dessas operações utilizando os mesmos operadores matematicos …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos os operadores aritméticos do C#. Aprenderemos a somar, subtrair, multiplicar e a dividir dentre outras operações aritméticas.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="operadores-aritmeticos"&gt;
&lt;h2&gt;OPERADORES ARITMÉTICOS&lt;/h2&gt;
&lt;p&gt;Operadores Aritméticos são os operadores matemáticos para realizarmos operações de soma, subtraçao, multiplicação e divisão. A linguagem C# proporciona a execução dessas operações utilizando os mesmos operadores matematicos que já conhecemos.&lt;/p&gt;
&lt;p&gt;Na tabela a seguir, temos a lista de operadores e o nome da função.&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="63%" /&gt;
&lt;col width="37%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;Operação&lt;/td&gt;
&lt;td&gt;Operador&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;adição&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;+&lt;/tt&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;subtração&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;-&lt;/tt&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;multiplicação&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;*&lt;/tt&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;divisão&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;/&lt;/tt&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;módulo&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;%&lt;/tt&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;O operador módulo &lt;tt class="docutils literal"&gt;%&lt;/tt&gt; sera estudado em detalhes em aulas futuras.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="exemplos"&gt;
&lt;h2&gt;EXEMPLOS&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;//soma&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;soma&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="c1"&gt;//subtraçao&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;soma&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="c1"&gt;//multiplicação&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;multi&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="c1"&gt;//divisão&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;divi&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="divisao-por-zero"&gt;
&lt;h2&gt;DIVISÃO POR ZERO&lt;/h2&gt;
&lt;p&gt;É importante tomar cuidado com a divisão por zero, até porque, o C# levantará uma exceção se tentarmos dividir qualquer número por zero, veja o exemplo a seguir:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;//soma&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;divi&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;20&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;System&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;System.Collections.Generic&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;System.Linq&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;System.Text&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;System.Threading.Tasks&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="k"&gt;namespace&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;Aula&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;Program&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;static&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;Main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;soma&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;20&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;soma2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;25&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;25&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="kt"&gt;double&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;50&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="kt"&gt;double&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;div2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;22.0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;3.0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="kt"&gt;double&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;div3&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0.055&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Soma = &amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;soma&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Soma2 = &amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;soma2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;div = &amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;div2 = &amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;div2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;div3 = &amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;div3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="csharp"></category></entry><entry><title>Estrutura else senão</title><link href="http://excript.com/csharp/estrutura-else-senao-csharp.html" rel="alternate"></link><published>2015-05-18T23:01:00-03:00</published><updated>2015-05-18T23:01:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2015-05-18:/csharp/estrutura-else-senao-csharp.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos o uso da instrução else junto a instrução if. Aprenderemos também, como definir blocos de código que serão executados nas vezes em que o valor lógico das expressões analisadas for falso.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;System&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;System.Collections.Generic&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;System.Linq&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;System.Text …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos o uso da instrução else junto a instrução if. Aprenderemos também, como definir blocos de código que serão executados nas vezes em que o valor lógico das expressões analisadas for falso.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;System&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;System.Collections.Generic&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;System.Linq&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;System.Text&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;System.Threading.Tasks&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="k"&gt;namespace&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;Aula&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;Program&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;static&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;Main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Digite um número: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Convert&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ToInt32&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ReadLine&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;O número digitado é maior do que 10.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="c1"&gt;//senão&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;O número digitado é menor do que 10.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="csharp"></category></entry><entry><title>Tomada de Decisão em C# (Parte II)</title><link href="http://excript.com/csharp/tomada-decisao-csharp-parte2.html" rel="alternate"></link><published>2015-04-13T14:24:00-03:00</published><updated>2015-04-13T14:24:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2015-04-13:/csharp/tomada-decisao-csharp-parte2.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nessa aula estudaremos a Tomada de Decisão e como utilizar instrução "if" na prática. Para isso, estudaremos tanto através da codificação, como também, analisando juntos um diagrama que expressa a estrutura "if".&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;System&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;System.Collections.Generic&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;System.Linq&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;System.Text&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;System …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nessa aula estudaremos a Tomada de Decisão e como utilizar instrução "if" na prática. Para isso, estudaremos tanto através da codificação, como também, analisando juntos um diagrama que expressa a estrutura "if".&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;System&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;System.Collections.Generic&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;System.Linq&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;System.Text&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;System.Threading.Tasks&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="k"&gt;namespace&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;Aula&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;Program&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;static&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;Main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;texto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;O número digitado é: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Digite um número qualquer: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Convert&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ToInt32&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ReadLine&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;texto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;positivo&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;texto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;negativo&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="csharp"></category></entry><entry><title>Tomada de Decisão em C#</title><link href="http://excript.com/csharp/tomada-de-decisao-csharp.html" rel="alternate"></link><published>2015-04-12T16:39:00-03:00</published><updated>2015-04-12T16:39:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2015-04-12:/csharp/tomada-de-decisao-csharp.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos a Tomada de Decisão na linguagem C#. Aprenderemos a utilizar a instrução if para analisar expressões e definir qual bloco de código deve ser executado caso o valor lógica seja verdadeiro, e caso o valor lógica seja falso.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="introducao-a-tomada-de-decisao"&gt;
&lt;h2&gt;INTRODUÇÃO À TOMADA DE DECISÃO&lt;/h2&gt;
&lt;p&gt;A &lt;strong&gt;Tomada de Decisão …&lt;/strong&gt;&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos a Tomada de Decisão na linguagem C#. Aprenderemos a utilizar a instrução if para analisar expressões e definir qual bloco de código deve ser executado caso o valor lógica seja verdadeiro, e caso o valor lógica seja falso.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="introducao-a-tomada-de-decisao"&gt;
&lt;h2&gt;INTRODUÇÃO À TOMADA DE DECISÃO&lt;/h2&gt;
&lt;p&gt;A &lt;strong&gt;Tomada de Decisão&lt;/strong&gt; é uma estrutura que verifica uma expressão e decide qual Bloco de Instrução deve ser executado, mediante valor avaliado.&lt;/p&gt;
&lt;p&gt;Tomar uma decisão, ou então, utilizar um &lt;strong&gt;Desvio Condicional&lt;/strong&gt;, é uma prática comum no Desenvolvimento de Software e será com essa estrutura que verificaremos expressões e decidiremos, qual &lt;strong&gt;Bloco de Instrução&lt;/strong&gt; que deve ser executado..&lt;/p&gt;
&lt;p&gt;É importante observar que outras estruturas da linguagem trabalham de maneira similar ao que temos com as &lt;strong&gt;Tomadas de Decisão&lt;/strong&gt;. Ou seja, há algumas estrutiras em que uma situação será verificada, e em seguida, mediante ao valor retornado, será definido o &lt;strong&gt;Bloco de Código&lt;/strong&gt; que será executado. Por essa razão, temos que o entendimento da tomada de decisão é necessário para o bom estudo de toda a linguagem.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="a-instrucao-if"&gt;
&lt;h2&gt;A INSTRUÇÃO &lt;tt class="docutils literal"&gt;if&lt;/tt&gt;&lt;/h2&gt;
&lt;p&gt;A palavra &lt;tt class="docutils literal"&gt;if&lt;/tt&gt; do Inglês, significa &lt;tt class="docutils literal"&gt;SE&lt;/tt&gt;. Com a estrutura condicional &lt;tt class="docutils literal"&gt;if&lt;/tt&gt; podemos determinar o que deve acontecer caso a expressão verificada for verdadeira, ou então, o que deve acontecer, caso a expressão seja falsa.&lt;/p&gt;
&lt;p&gt;Por exemplo, vamos verificar uma situação, porém, utilizando a Lingua Portuguêsa:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;SE&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;verdadeiro&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;faça_isso&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;faça_e_mais_isso&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;faça_aquilo&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima, estamos verificando se a expressão entre parêntesis é verdadeira. É comum chamarmos a expressão entre parêntesis de &lt;strong&gt;Cabeçalho da Estrutura&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Em seguida, com um par de chaves, definimos o bloco de instrução que será executado, caso o valor lógico da expressão seja verdadeiro.&lt;/p&gt;
&lt;p&gt;Nesse primeiro momento, temos que entender que na situação em que a expressão definida no cabeçalho da estrutura &lt;tt class="docutils literal"&gt;SE&lt;/tt&gt;, isto é, entre parêntesis, for verdadeira, tudo que estiver nas linhas seguintes, entre chaves, normalmente com a indentação avançada, é que será executado. A instrução &lt;tt class="docutils literal"&gt;faça_isso()&lt;/tt&gt;, é a primeira instrução do &lt;strong&gt;Bloco de Instrução&lt;/strong&gt; que será executado todas as vezes que a expressão definida no cabeçalho da estrutura &lt;tt class="docutils literal"&gt;if&lt;/tt&gt; for verdadeira.&lt;/p&gt;
&lt;p&gt;Caso a expressão contida entre parêntesis não seja verdadeira, nada acontecerá, e a execução das linhas após a estrutura de &lt;tt class="docutils literal"&gt;Tomada de Decisão&lt;/tt&gt; ocorrerá normalmente.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="um-caso-real-utilizando-a-estrutura-if"&gt;
&lt;h2&gt;UM CASO REAL UTILIZANDO A ESTRUTURA &lt;tt class="docutils literal"&gt;if&lt;/tt&gt;&lt;/h2&gt;
&lt;p&gt;Agora, vamos fazer uma exemplo onde verificaremos se o número digitado por um usuário é maior do que zero. Caso seja, o &lt;strong&gt;Bloco de Instrução&lt;/strong&gt; que segue a estrutura será executado.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Digite um número: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ReadLine&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Convert&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ToInt32&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;O número digitado é maior do que &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No exemplo acima, utilizamos a função &lt;tt class="docutils literal"&gt;Console.WriteLine&lt;/tt&gt; para imprimirmos uma mensagem na tela, ou seja, no &lt;tt class="docutils literal"&gt;Console&lt;/tt&gt; do usuário. Em seguida, colocamos o &lt;tt class="docutils literal"&gt;Console&lt;/tt&gt; no modo de edição, isto é, fazendo com que seja possível que o usuário digite valores. Após o usuário digitar um número e pressionar a tecla Enter, o valor  será passado para a variável &lt;tt class="docutils literal"&gt;string&lt;/tt&gt; de nome &lt;tt class="docutils literal"&gt;str&lt;/tt&gt;. Em seguida, converteremos de &lt;tt class="docutils literal"&gt;String&lt;/tt&gt; para número e atribuiremos o valor para a variável inteira &lt;tt class="docutils literal"&gt;num&lt;/tt&gt;. Por fim, comparamos o valor da variável &lt;tt class="docutils literal"&gt;num&lt;/tt&gt; e, caso o valor seja maior do que zero, o bloco de instrução verdadeiro será executado, do contrário, nada acontecerá.&lt;/p&gt;
&lt;p&gt;É importante observar que caso nada seja digitado, ou então, não seja digitado um número, uma exceção será levantada e a execução do nosso programa será interrompido. Isso ocorre porque não estamos tratando os valores digitados pelo nosso usuário.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;System&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;System.Collections.Generic&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;System.Linq&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;System.Text&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;System.Threading.Tasks&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="k"&gt;namespace&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;Aula&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;Program&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;static&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;Main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Digite um número: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ReadLine&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Convert&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ToInt32&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;O número digitado é positivo.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="csharp"></category></entry><entry><title>Operadores Lógicos em C#</title><link href="http://excript.com/csharp/operador-logico-csharp.html" rel="alternate"></link><published>2015-04-11T20:02:00-03:00</published><updated>2015-04-11T20:02:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2015-04-11:/csharp/operador-logico-csharp.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos os operadores lógicos do C#, como também, as suas utilizações, significados e a maneira como devemos utilizá-los. Também desenvolveremos exemplos demonstrando o funcionamento dos Conectivos Lógicos, ligando expressões que possuem Operadores Relacionais.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="introducao"&gt;
&lt;h2&gt;INTRODUÇÃO&lt;/h2&gt;
&lt;p&gt;Os &lt;strong&gt;Operadores Lógicos&lt;/strong&gt;, também chamados de &lt;strong&gt;Conectivos Lógicos&lt;/strong&gt; são, junto com os &lt;strong&gt;Operadores Relacionais …&lt;/strong&gt;&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos os operadores lógicos do C#, como também, as suas utilizações, significados e a maneira como devemos utilizá-los. Também desenvolveremos exemplos demonstrando o funcionamento dos Conectivos Lógicos, ligando expressões que possuem Operadores Relacionais.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="introducao"&gt;
&lt;h2&gt;INTRODUÇÃO&lt;/h2&gt;
&lt;p&gt;Os &lt;strong&gt;Operadores Lógicos&lt;/strong&gt;, também chamados de &lt;strong&gt;Conectivos Lógicos&lt;/strong&gt; são, junto com os &lt;strong&gt;Operadores Relacionais&lt;/strong&gt;, a base lógica da filosofia, matemática e programação. Por isso, estes conceitos são as ferramentas que utilizaremos na construção de praticamente todas condições. Compreender e saber aplicar ambos conceitos, significa, ter domínio da lógica, e por conseguinte, o entendimento da programação.&lt;/p&gt;
&lt;p&gt;Enquanto os &lt;strong&gt;Operadores Relacionais&lt;/strong&gt; estabelecem as relações, os &lt;strong&gt;Conectivos&lt;/strong&gt; ligam os &lt;strong&gt;Valores Lógicos&lt;/strong&gt; das relações dando origem a novas expressões, isto é, expressões que contém sub-expressões.&lt;/p&gt;
&lt;p&gt;Programar é dizer ao computador o que deve ser feito, e os &lt;strong&gt;Conectivos Lógicos&lt;/strong&gt; e os &lt;strong&gt;Operadores Relacionais&lt;/strong&gt; são os que decidem, analisando valores, quais blocos devem ser executados.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="conectivos-logicos"&gt;
&lt;h2&gt;CONECTIVOS LÓGICOS&lt;/h2&gt;
&lt;p&gt;Os &lt;strong&gt;operadores lógicos&lt;/strong&gt; unem 2 ou mais expressões, dando origem a uma nova expressão que será avaliada independentemente. O resultado lógico será a avaliação de cada sub-expressão. Toda expressão lógica avaliada resulta num valor chamado de valor lógico.&lt;/p&gt;
&lt;p&gt;Com os operadores relacionais verificamos relações entre o operando a esquerda com o operando a direita do operador relacional. Como resposta a cada expressão avaliada, teremos um valor Booleano, isto é, verdadeiro (True) ou falso (False).&lt;/p&gt;
&lt;p&gt;Os &lt;strong&gt;conectivos lógicos&lt;/strong&gt; permitem a união de 2 ou mais expressões, e assim, temos uma nova expressão e seu valor lógico será o resultado das sub-expressões juntas.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="valor-logico"&gt;
&lt;h2&gt;VALOR LÓGICO&lt;/h2&gt;
&lt;p&gt;O &lt;strong&gt;valor lógico&lt;/strong&gt; é a base de toda a computação. Há 2 valores lógicos possíveis: verdadeiro ou falso, também chamado de ligado ou desligado. Os 2 valores lógicos possíveis são representados matematicamente pelos números 0 (falso) e 1 (true).&lt;/p&gt;
&lt;p&gt;Toda expressão avaliada na computação de maneira geral, resulta num &lt;strong&gt;valor lógico&lt;/strong&gt;, isto é, ou a expressão é verdadeira, ou a expressão é falsa.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;CONECTIVOS LÓGICOS&lt;/h2&gt;
&lt;p&gt;As linguagens de programação, utilizam os &lt;strong&gt;conectivos lógicos&lt;/strong&gt; da lógica formal, ou melhor da lógica Aristotélica para a construção de expressões. Existem 2 conectivos e mesmo que não os conheçamos como &lt;strong&gt;conectivos lógicos&lt;/strong&gt;, utilizamo-os constantemente.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Conectivo de conjunção&lt;/li&gt;
&lt;li&gt;Conectivo de disjunção&lt;/li&gt;
&lt;/ol&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="46%" /&gt;
&lt;col width="31%" /&gt;
&lt;col width="23%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;Expressão&lt;/td&gt;
&lt;td&gt;Português&lt;/td&gt;
&lt;td&gt;C#&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;conjunção&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;E&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;&amp;amp;&amp;amp;&lt;/tt&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;disjunção&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;OU&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;||&lt;/tt&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Por exemplo, a simples frase &lt;tt class="docutils literal"&gt;A e B são caracteres iguais&lt;/tt&gt; implica numa expressão lógica que foi representada textualmente. Porém, está pode ser facilmente escrita matematicamente, ou então, com o uso qualquer linguagem de programação.&lt;/p&gt;
&lt;p&gt;É por isso que temos que olhar para as Linguagens de Programação, como sendo formas ou estilos de &lt;strong&gt;Notação&lt;/strong&gt;, que utilizamos para representar e em seguida executar expressões numa sequência determinada.&lt;/p&gt;
&lt;p&gt;A notação matemática não é diferente, porém, a mesma é comumente utilizada para representar &lt;strong&gt;sentenças matemáticas&lt;/strong&gt;, logo, é uma notação que possui um objetivo diferente e que tem um propósito diferente. A linguagem C# não permite não contempla a notação matemática, por isso, temos que utilizar a notação aqui estudada.&lt;/p&gt;
&lt;p&gt;Por fim, os &lt;strong&gt;conectivos lógicos&lt;/strong&gt; devem ser entendidos como ferramentas de notação utilizadas para unir expressões.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="avaliacao-de-expressoes"&gt;
&lt;h2&gt;AVALIAÇÃO DE EXPRESSÕES&lt;/h2&gt;
&lt;p&gt;O interpretador .NET avalia cada proposição (expressão) isoladamente e atribui a esta um dos 2 valores lógicos.&lt;/p&gt;
&lt;p&gt;Por padrão, &lt;strong&gt;todas as expressão são avaliadas&lt;/strong&gt; se são ou não verdadeiras.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="tabela-de-valores-logicos"&gt;
&lt;h2&gt;TABELA DE VALORES LÓGICOS&lt;/h2&gt;
&lt;p&gt;A &lt;strong&gt;Tabela de Valores Lógicos&lt;/strong&gt; é uma tabela que mostra o resultado da avaliação de 2 valores lógicos. É importante observar que &lt;strong&gt;essa tabela NÃO uma convenção&lt;/strong&gt;, mas sim, o resultado da dedução lógica e que você pode facilmente comprovar cada resultado através da analise de cada proposições.&lt;/p&gt;
&lt;div class="section" id="tabela-com-o-conectivo-de-conjuncao-e"&gt;
&lt;h3&gt;TABELA COM O CONECTIVO DE CONJUNÇÃO &lt;tt class="docutils literal"&gt;E&lt;/tt&gt;&lt;/h3&gt;
&lt;p&gt;Na tabela a seguir está sendo comparado 2 valores lógicos unidos pelo conectivo &lt;tt class="docutils literal"&gt;E&lt;/tt&gt;. Devemos ler cada linha da seguinte maneira:&lt;/p&gt;
&lt;p&gt;O valor lógico de (&lt;strong&gt;X&lt;/strong&gt; e &lt;strong&gt;Y&lt;/strong&gt;) é &lt;strong&gt;Z&lt;/strong&gt;.&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="60%" /&gt;
&lt;col width="40%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;Expressão&lt;/td&gt;
&lt;td&gt;Resultado&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;True &lt;strong&gt;E&lt;/strong&gt; True&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;True&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;True &lt;strong&gt;E&lt;/strong&gt; False&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;False&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;False &lt;strong&gt;E&lt;/strong&gt; True&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;False&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="tabela-com-o-conectivo-de-disjuncao-ou"&gt;
&lt;h3&gt;TABELA COM O CONECTIVO DE DISJUNÇÃO &lt;tt class="docutils literal"&gt;OU&lt;/tt&gt;&lt;/h3&gt;
&lt;p&gt;Na tabela a seguir está sendo comparado 2 valores lógicos unidos pelo conectivo &lt;tt class="docutils literal"&gt;OU&lt;/tt&gt;. Devemos ler cada linha da seguinte maneira:&lt;/p&gt;
&lt;p&gt;O valor lógico de (&lt;strong&gt;X&lt;/strong&gt; ou &lt;strong&gt;Y&lt;/strong&gt;) é &lt;strong&gt;Z&lt;/strong&gt;.&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="60%" /&gt;
&lt;col width="40%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;Expressão&lt;/td&gt;
&lt;td&gt;Resultado&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;True &lt;strong&gt;OU&lt;/strong&gt; False&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;True&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;False &lt;strong&gt;OU&lt;/strong&gt; True&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;True&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;True &lt;strong&gt;OU&lt;/strong&gt; True&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;True&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;False &lt;strong&gt;OU&lt;/strong&gt; False&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;False&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="o-conectivo-de-conjuncao-e"&gt;
&lt;h2&gt;O CONECTIVO DE CONJUNÇÃO &lt;tt class="docutils literal"&gt;E&lt;/tt&gt;&lt;/h2&gt;
&lt;p&gt;O &lt;strong&gt;Conectivo Lógico de Conjunção&lt;/strong&gt; &lt;tt class="docutils literal"&gt;||&lt;/tt&gt; une a expressão a sua esquerda com a expressão a sua direita. Expressões com o uso do &lt;strong&gt;Conectivo de Conjunção&lt;/strong&gt; dão origem a frases em Português, mais ou menos assim: &lt;strong&gt;X&lt;/strong&gt; é verdadeiro e &lt;strong&gt;Y&lt;/strong&gt; é verdadeiro?&lt;/p&gt;
&lt;p&gt;Nas situações em que &lt;strong&gt;A&lt;/strong&gt; for verdadeiro e &lt;strong&gt;B&lt;/strong&gt; também, o resultado, segundo a tabela lógica, será também verdadeiro.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No exemplo acima, temos uma &lt;tt class="docutils literal"&gt;expressão lógica composta&lt;/tt&gt; constituida por 2 expressões lógicas simples e ligadas pelo &lt;tt class="docutils literal"&gt;conectivo de conjunção&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Primeira expressão simples : (var1 == 0)
Segunda expressão simples: (var1 == 0)
Conectivo lógico de conjunção: &lt;strong&gt;&amp;amp;&amp;amp;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Para analisarmos uma &lt;tt class="docutils literal"&gt;expressão lógica composta&lt;/tt&gt;, precisamos antes, analisar suas &lt;tt class="docutils literal"&gt;expressões lógicas simples&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;A primeira expressão, está perguntando se o valor da variável &lt;tt class="docutils literal"&gt;x&lt;/tt&gt; é maior do que zero. A variável &lt;tt class="docutils literal"&gt;x&lt;/tt&gt; está declarada na linha acima e inicializada com o valor 1, por isso, a primeira expressão é verdadeira.&lt;/p&gt;
&lt;p&gt;A segunda expressão, pergunta se o valor da variável &lt;tt class="docutils literal"&gt;x&lt;/tt&gt; é menor do que 100. O valor da variável &lt;tt class="docutils literal"&gt;x&lt;/tt&gt; é igual a 1 e por isso é menor do que 100. Analisado ambas expressões,acabamos por ter uma nova expressão, como pode ser visto abaixo.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima, temos a mesma expressão do exemplo anterior, porém, substituirmos as duas &lt;strong&gt;expressões lógicas simples&lt;/strong&gt; pelos seus respectivos &lt;strong&gt;valores lógicos&lt;/strong&gt;, isto é, o valor decorrente da &lt;strong&gt;análise lógica&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;A expressão &lt;tt class="docutils literal"&gt;(True) &amp;amp;&amp;amp; (True)&lt;/tt&gt; se comparada com a &lt;strong&gt;Tabela Lógica de Valores&lt;/strong&gt;, tem-se que o valor decorrente dessa segunda análise, constituida por 2 valores lógicos ligados pelo &lt;strong&gt;conectivo de ligação E&lt;/strong&gt;, será o &lt;strong&gt;valor lógico&lt;/strong&gt; &lt;tt class="docutils literal"&gt;True&lt;/tt&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="conectivo-ou"&gt;
&lt;h2&gt;CONECTIVO ( OU )&lt;/h2&gt;
&lt;p&gt;O &lt;strong&gt;conectivo lógico de disjunção&lt;/strong&gt; &lt;strong&gt;OU&lt;/strong&gt; liga a expressão a sua esquerda a expressão a sua direita. Expressões com o uso do &lt;strong&gt;conectivo de disjunção&lt;/strong&gt; dão origem a frases em Português, mais ou menos assim: &lt;strong&gt;X&lt;/strong&gt; é verdadeiro ou &lt;strong&gt;Y&lt;/strong&gt; é verdadeiro?&lt;/p&gt;
&lt;p&gt;O &lt;strong&gt;operador lógico OU&lt;/strong&gt; sempre precisará que uma das 2 &lt;strong&gt;expressões simples&lt;/strong&gt; avaliadas sejam verdadeiras para que avaliação seja verdadeira. No caso onde ambas &lt;strong&gt;expressões simples&lt;/strong&gt; forem verdadeiras, o resultado também será verdadeiro, porém, se ambas expressões forem falsas, o resultado lógico será falso.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;||&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A &lt;strong&gt;expressão lógica composta&lt;/strong&gt; que temos no código acima, será desmembrada como estudado anteriormente, e agora, para que a avaliação seja verdadeira, uma das 2 expressões precisam ser verdadeiras.&lt;/p&gt;
&lt;p&gt;A primeira expressão verifica se &lt;tt class="docutils literal"&gt;(x &amp;gt; 10)&lt;/tt&gt;. A variável``x`` está declarada na linha acima e inicializada com o valor igual a 1, logo, essa expressão é falsa, até porque, o valor de &lt;tt class="docutils literal"&gt;x&lt;/tt&gt; &lt;strong&gt;não é maior&lt;/strong&gt; do que 10.&lt;/p&gt;
&lt;p&gt;A segunda expressão &lt;tt class="docutils literal"&gt;(x &amp;lt; 100)&lt;/tt&gt; está perguntando se o valor da variável &lt;tt class="docutils literal"&gt;x&lt;/tt&gt; &lt;strong&gt;é menor&lt;/strong&gt; do que o número 100. Essa expressão é verdadeira, até porque, o número 1 &lt;strong&gt;é menor&lt;/strong&gt; do que o número 100.&lt;/p&gt;
&lt;p&gt;No código a seguir, temos a expressão que será originadas a partir do código anterior.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;||&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Agora, temos que o primeiro &lt;strong&gt;valor lógico&lt;/strong&gt; é falso, enquanto o segundo é verdadeiro. Esses valores estão ligados pelo &lt;strong&gt;conectivo de disjunção&lt;/strong&gt; utilizado para avaliar se uma das expressões é verdadeira. Como o segundo valor lógico é verdadeiro, o valor decorrente dessa &lt;strong&gt;análise lógica&lt;/strong&gt; será verdadeiro.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="expressoes-simples-e-compostas"&gt;
&lt;h2&gt;EXPRESSÕES SIMPLES E COMPOSTAS&lt;/h2&gt;
&lt;p&gt;Os &lt;strong&gt;operadores relacionais&lt;/strong&gt; obtém a relação entre os operandos e por isso, podemos chamar esse tipo de expressão como sendo, &lt;strong&gt;expressões simples&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;As &lt;strong&gt;expressões compostas&lt;/strong&gt;, por sua vez, são a união de 2 ou mais expressões simples e ligadas por um &lt;strong&gt;conectivo lógico&lt;/strong&gt;. A seguir, temos um exemplo utilizando o &lt;strong&gt;conectivo lógico de conjunção&lt;/strong&gt; unindo assim, 2 expressões e dando origem a uma nova &lt;strong&gt;expressão lógica&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;//  EXEMPLO&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;isso&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;E&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;isso&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="c1"&gt;// A EXPRESSAO ACIMA ORIGINOU:&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;E&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Como podemos ver, em ambos exemplos, estamos unindo 2 membros, mas não estamos perguntando nada. Porém, a frase correta e que é utilizada pela grande maioria das linguagens de programação, senão todas, é a seguinte:&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&amp;quot;A&amp;quot; é verdadeiro e &amp;quot;B&amp;quot; é verdadeiro&lt;/tt&gt;. Chamamos isso de &lt;tt class="docutils literal"&gt;expressão lógica&lt;/tt&gt; ou melhor, &lt;tt class="docutils literal"&gt;expressão lógica composta&lt;/tt&gt; até porque, a expressão se origina de duas outras expressões.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="construindo-expressoes"&gt;
&lt;h2&gt;CONSTRUINDO EXPRESSÕES&lt;/h2&gt;
&lt;p&gt;A linguagem C# possui algumas regras sintáticas para uso dos &lt;strong&gt;Conectivos Lógicos&lt;/strong&gt;.
Quando ligamos 2 ou mais expressões, devemos envolver todas as expressões com parêntesis, por exemplo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;&amp;gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;&amp;lt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima, no cabeçalho da tomada de decisão, definimos 2 expressões. A primeira &lt;tt class="docutils literal"&gt;num &amp;gt;= 0&lt;/tt&gt; e a segunda &lt;tt class="docutils literal"&gt;num &amp;lt;= 10&lt;/tt&gt;. Devido ao fato que ambas expressões foram ligadas com um &lt;strong&gt;Conectivo Lógico&lt;/strong&gt;, foi necessário envolver a expressão originada com parêntesis.&lt;/p&gt;
&lt;p&gt;Da mesma forma, não é permitido isolar cada expressão sem não envolver ambas com parêntesis. O código a seguir não compila, até porque, as expressões que estão sendo ligadas pelo operador &lt;tt class="docutils literal"&gt;&amp;amp;&amp;amp;&lt;/tt&gt; não estão agrupadas com parêntesis.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;&amp;gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;&amp;lt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;O código a seguir, corrige o problema do código acima, isolando cada expressão com parêntesis e delimitando a expressão resultante também.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;&amp;gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;&amp;lt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;System&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;System.Collections.Generic&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;System.Linq&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;System.Text&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;System.Threading.Tasks&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="k"&gt;namespace&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;Aula&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;Program&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;static&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;Main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="c1"&gt;//=========== eXcript.com ===========&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="c1"&gt;//======== NetCoders.com.br  ========&lt;/span&gt;

&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="c1"&gt;//CONECTIVOS LÓGICOS&lt;/span&gt;

&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Informe um número no intervalo de 20 à 30.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Convert&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ToInt32&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ReadLine&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;20&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;30&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;O número está no intervalo.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Número incorreto!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="csharp"></category></entry><entry><title>Definições da Linguagem C#</title><link href="http://excript.com/csharp/definicao-linguagem-csharp.html" rel="alternate"></link><published>2015-04-07T03:15:00-03:00</published><updated>2015-04-07T03:15:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2015-04-07:/csharp/definicao-linguagem-csharp.html</id><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos as principais definições da linguagem C#, bem como os principais recursos, e como podemos obter o máximo para a construção de aplicações.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="definicoes-da-linguagem"&gt;
&lt;h2&gt;DEFINIÇÕES DA LINGUAGEM&lt;/h2&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="csharp"></category></entry><entry><title>Módulo da Divisão em C#</title><link href="http://excript.com/csharp/modulo-divisao-csharp.html" rel="alternate"></link><published>2014-06-03T18:11:00-03:00</published><updated>2014-06-03T18:11:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2014-06-03:/csharp/modulo-divisao-csharp.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos o módulo da divisão, ou seja, a parte restante de uma divisão e veremos também, o operador que a linguagem Python tem definido para facilmente obtermos esse valor.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="modulo-da-divisao-ou-operacao-modulo"&gt;
&lt;h2&gt;MÓDULO DA DIVISÃO OU OPERAÇÃO MÓDULO&lt;/h2&gt;
&lt;p&gt;O &lt;strong&gt;Módulo da Divisão&lt;/strong&gt;, também chamado de &lt;strong&gt;Operação Módulo&lt;/strong&gt;, é o operador que …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos o módulo da divisão, ou seja, a parte restante de uma divisão e veremos também, o operador que a linguagem Python tem definido para facilmente obtermos esse valor.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="modulo-da-divisao-ou-operacao-modulo"&gt;
&lt;h2&gt;MÓDULO DA DIVISÃO OU OPERAÇÃO MÓDULO&lt;/h2&gt;
&lt;p&gt;O &lt;strong&gt;Módulo da Divisão&lt;/strong&gt;, também chamado de &lt;strong&gt;Operação Módulo&lt;/strong&gt;, é o operador que retorna o resto da divisão. Este é um operador que serve como atalho pra obtenção do Resto de uma Divisão.&lt;/p&gt;
&lt;p&gt;Matematicamente, há várias formas para obtermos a parte restante da divisão, porém, como essa é uma funcionalidade que possui bastante uso, foi definido um operador especial para esta operação.&lt;/p&gt;
&lt;p&gt;Fica definido entao, que o simbolo de porcentagem, &lt;tt class="docutils literal"&gt;%&lt;/tt&gt; é o &lt;strong&gt;Operador Módulo&lt;/strong&gt;. E isso não é características do C#, mas sim, de todas linguagens que derivam do C.&lt;/p&gt;
&lt;p&gt;Então, do lado esquerdo, colocaremos o número a ser dividido, e ao lado direito, o divisor, como pode ser visto no código a seguir.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;%&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="n"&gt;obtém&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;módulo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;da&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;divisão&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;de&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;por&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima, estamos dividindo o número 10 por 2 implicitamente com o uso do Operador Módulo &lt;tt class="docutils literal"&gt;%&lt;/tt&gt;, portanto, o resultado da expressão, será o resto da divisão.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="numeros-pares"&gt;
&lt;h2&gt;NÚMEROS PARES&lt;/h2&gt;
&lt;p&gt;Uma das aplicações do módulo da divisão, e para a obtenção de por exemplo, números pares. Isso porque, todo número dividido por 2 que não tenha resto, será por definição, um número par. No código abaixo, implementamos um código que verifica se determinado numero e par.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Digite um número: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;%&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Número par.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Número ímpar&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima, pedimos que o usuário digite um número. Em seguida, armazenamos esse número na variável de inteira de nome &lt;tt class="docutils literal"&gt;num&lt;/tt&gt;. Feito isso, verificamos se o valor da variável &lt;tt class="docutils literal"&gt;num&lt;/tt&gt; possui resto, ou seja, definimos uma expressão cujo retorno sera o módulo da divisão. Caso o valor retornado seja 0, imprimiremos no Console que o número é par. Do contrário, será impresso que o número é ímpar.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="numeros-cheios-ou-numeros-redondos"&gt;
&lt;h2&gt;NÚMEROS CHEIOS OU NÚMEROS REDONDOS&lt;/h2&gt;
&lt;p&gt;Uma outra utilidade simples, porém, importante, é saber se um determinado número é redondo, por exemplo: 100, 200, 500 e etc. Para isso, basta dividirmos o mesmo por 100 e compararmos o módulo com zero, por exemplo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="n"&gt;coding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;utf&lt;/span&gt;&lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="m"&gt;8&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Digite um número: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;%&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Número redondo.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;O número não é redondo&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima, pedimos para o usuário digitar um valor e em seguida, verificamos se o módulo da divisão do número informado é igual a zero, caso seja, o número é redondo e inferior a 900.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="consideracoes-finais"&gt;
&lt;h2&gt;CONSIDERAÇÕES FINAIS&lt;/h2&gt;
&lt;p&gt;Os exemplos estudados são bastante simples, porém, a utilidade do módulo de uma divisão possui utilidades infinitas e de suma importância para a computação, como por exemplo, na área da criptografia.&lt;/p&gt;
&lt;p&gt;Há diversas lógicas e algoritmos que fazem uso extensivo do módulo e por isso, não há forma melhor para trabalharmos, do que termos um operador especifico para uma determinada função.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="n"&gt;coding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;utf&lt;/span&gt;&lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="m"&gt;8&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;%&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;%&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;%&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;7&lt;/span&gt;&lt;span class="p"&gt;%&lt;/span&gt;&lt;span class="m"&gt;3.1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;900&lt;/span&gt;&lt;span class="p"&gt;%&lt;/span&gt;&lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="p"&gt;==&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="n"&gt;num1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;float&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Digite um número: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;num2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;float&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Digite outro número: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="n"&gt;divisao&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;num1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;num2&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;resto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;num1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;%&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;num2&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;divido por&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;num2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;é igual a: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;divisao&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;O resto da divisão entre&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;num1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;e&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;num2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot; é igual a:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;resto&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="csharp"></category><category term="módulo"></category><category term="operação módulo"></category><category term="módulo da divisão"></category><category term="divisão"></category><category term="número primo"></category></entry><entry><title>Comentários em C#</title><link href="http://excript.com/csharp/comentario-csharp.html" rel="alternate"></link><published>2014-02-27T11:28:00-03:00</published><updated>2014-02-27T11:28:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2014-02-27:/csharp/comentario-csharp.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos a utilização de comentários junto ao código C#. Também aprenderemos a importância em documnentar o que implementamos, e como devemos organizar todos os comentários que formos inserindo.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="comentarios"&gt;
&lt;h2&gt;COMENTÁRIOS&lt;/h2&gt;
&lt;p&gt;Comentário é qualquer texto contido dentro do nosso código que será ignorado pelo compilador. Trabalhar com comentários é uma …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos a utilização de comentários junto ao código C#. Também aprenderemos a importância em documnentar o que implementamos, e como devemos organizar todos os comentários que formos inserindo.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="comentarios"&gt;
&lt;h2&gt;COMENTÁRIOS&lt;/h2&gt;
&lt;p&gt;Comentário é qualquer texto contido dentro do nosso código que será ignorado pelo compilador. Trabalhar com comentários é uma prática comum pelos desenvolvedores. O objetivo é poder adicionar descrições em partes especificas de código para documentar funcionalides, módulos, ou então, para descrever qualquer outra informação necessaria  e relevante.&lt;/p&gt;
&lt;p&gt;Os comentários, utilizam um notação especial para se diferenciar do código propriamente dito. Há 2 formas para trabalharmos com comentários. Comentário de uma única linha, comentário em várias linhas.&lt;/p&gt;
&lt;div class="section" id="a-notacao-inline"&gt;
&lt;h3&gt;A NOTAÇÃO INLINE&lt;/h3&gt;
&lt;p&gt;O uso de duas barras &lt;tt class="docutils literal"&gt;//&lt;/tt&gt; define comentários de uma única linha. Tudo que estiver após a marcação, sera ignorado pelo compilardor. Essa notação é comumente utilizada para colocar descrições no final de uma instrução, como podemos ver no código a seguir.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;//o que estiver a frente barra-barra é ignorado&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="notacao-multilines-varias-linhas"&gt;
&lt;h2&gt;NOTAÇÃO MULTILINES (VÁRIAS LINHAS)&lt;/h2&gt;
&lt;p&gt;O uso de &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;/**/&lt;/span&gt;&lt;/tt&gt; define comentários de várias linhas. Tudo que estiver entre &lt;tt class="docutils literal"&gt;/*&lt;/tt&gt; e o &lt;tt class="docutils literal"&gt;*/&lt;/tt&gt; será ignorado pelo interpretador, indifente de quantas linhas existirem, tudo que estiver delimitado por essa notação, é automaticamente ignorado.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cm"&gt;/*&lt;/span&gt;
&lt;span class="cm"&gt;    esse aqui&lt;/span&gt;
&lt;span class="cm"&gt;    é um comentário&lt;/span&gt;
&lt;span class="cm"&gt;    de várias linhas&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="para-que-utilizamos-comentarios"&gt;
&lt;h2&gt;PARA QUE UTILIZAMOS COMENTÁRIOS?&lt;/h2&gt;
&lt;p&gt;A utilização de comentários pode ser tanto para a inserção de alguma informações que não pode ser esquecida, ou então, algo que desejamos que outros programadores saibam no momento em que estiverem lendo o código.&lt;/p&gt;
&lt;p&gt;A primeira utilização dos comentário é fazer o que o próprio nome sugere: comentar os nosso códigos, informando assim, ao interpretador, que essas linhas não devem ser executadas.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="documentacao-de-programas"&gt;
&lt;h2&gt;DOCUMENTAÇÃO DE PROGRAMAS&lt;/h2&gt;
&lt;p&gt;Utilizamos a marcação de comentários para documentarmos programas, classes, funções, variáveis, constantes ou seja lá o que for. Quando criamos uma biblioteca e essa será utilizada por terceiros, é importante que o código possua uma documentação para que os outros programadores entendam a nossa biblioteca e saibam como invocar as funções corretamente. É comum que haja informações para o fácil entendimento da lógica que foi utilizada ou entao, para descrever a razão pela qual foi implementado desta forma e nao de algum aoutra.&lt;/p&gt;
&lt;p&gt;Quando documentamos partes internas do nosso programa, temos que, ao mesmo tempo em que documentamos o que estamos fazendo, também geramos documentação que será, posteriormente extraída nosso código e então, a mesma, será utilizada, na documentação propriamente dita. Dessa forma, conseguimos manter o codigo e a sua documentação num mesmo arquivo.&lt;/p&gt;
&lt;p&gt;É recomendável se acostumar a documentar o código! Isso não somente faz de nós melhores programadores como também, ajuda-nos na definição para nós mesmo da existência de cada parte e módulo do programa.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;p&gt;A seguir, temos o exemplo feito na vídeo aulas sobre a utilização de comentários.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;System&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="k"&gt;namespace&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;Aula&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;Program&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="cm"&gt;/**/&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;static&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;Main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="c1"&gt;//Isso aqui é um comentário&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="csharp"></category></entry><entry><title>Conversão de Dados em C#</title><link href="http://excript.com/csharp/conversao-dados-csharp.html" rel="alternate"></link><published>2014-02-27T06:24:00-03:00</published><updated>2014-02-27T06:24:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2014-02-27:/csharp/conversao-dados-csharp.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos a conversão de dados para tipos diferentes, isto é, a informação continuará a ser a mesma, porém, manipularemos de maneira diferente.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="conversao-numerica"&gt;
&lt;h2&gt;CONVERSÃO NUMÉRICA&lt;/h2&gt;
&lt;p&gt;A conversão de dados pela linguagem C- é bastante simples e temos funções definidas para a conversão de um tipo em qualquer outro definido …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos a conversão de dados para tipos diferentes, isto é, a informação continuará a ser a mesma, porém, manipularemos de maneira diferente.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="conversao-numerica"&gt;
&lt;h2&gt;CONVERSÃO NUMÉRICA&lt;/h2&gt;
&lt;p&gt;A conversão de dados pela linguagem C- é bastante simples e temos funções definidas para a conversão de um tipo em qualquer outro definido pela linguagem. Assim, basta somente conhecermos os princípios de como ocorre a conversão de dados que em seguida, conseguiremos converter diversas informações.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima, nós declaramos 2 variáveis. Uma do tipo String e outra do tipo inteiro. O objetivo, é nós convertermos o número que foi adicionado como um String para a variável &lt;cite&gt;s&lt;/cite&gt; para a nossas variável inteira de nome &lt;cite&gt;i&lt;/cite&gt;.&lt;/p&gt;
&lt;p&gt;A conversão, ocorre através da função &lt;cite&gt;int.Parse()&lt;/cite&gt;. Assim, temos que o nosso valor que é do tipo String será convertido para o tipo Inteiro.&lt;/p&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="csharp"></category></entry><entry><title>Características das Variáveis em C#</title><link href="http://excript.com/csharp/caracteristica-variavel-csharp.html" rel="alternate"></link><published>2014-02-27T06:20:00-03:00</published><updated>2014-02-27T06:20:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2014-02-27:/csharp/caracteristica-variavel-csharp.html</id><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos as características das variáveis, bem como as principais definições e entenderemos o seu funcionamento na linguagem C#.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="caracteristica"&gt;
&lt;h2&gt;CARACTERÍSTICA&lt;/h2&gt;
&lt;p&gt;Nenhum texto a ser exibido neste momento.&lt;/p&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="csharp"></category></entry><entry><title>Console Application em C#</title><link href="http://excript.com/csharp/console-application-csharp.html" rel="alternate"></link><published>2014-02-27T06:20:00-03:00</published><updated>2014-02-27T06:20:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2014-02-27:/csharp/console-application-csharp.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos como criar uma aplicação Console Application no VisualStudio e daremos continuidade ao estudo da linguagem C#&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="console-application"&gt;
&lt;h2&gt;CONSOLE APPLICATION&lt;/h2&gt;
&lt;p&gt;Aplicações chamada de &lt;strong&gt;Console Application&lt;/strong&gt; são todas as aplicações executadas dentro de um &lt;strong&gt;Prompt de Comando&lt;/strong&gt;. Assim, tudo que é enviado para a saída padrão é impresso nesse prompt …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos como criar uma aplicação Console Application no VisualStudio e daremos continuidade ao estudo da linguagem C#&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="console-application"&gt;
&lt;h2&gt;CONSOLE APPLICATION&lt;/h2&gt;
&lt;p&gt;Aplicações chamada de &lt;strong&gt;Console Application&lt;/strong&gt; são todas as aplicações executadas dentro de um &lt;strong&gt;Prompt de Comando&lt;/strong&gt;. Assim, tudo que é enviado para a saída padrão é impresso nesse prompt, da mesma forma que, é possível fazer com que o &lt;strong&gt;Prompt de Comando&lt;/strong&gt;, entre em modo de leitura, permitindo assim, que o usuário digite valores, ou seja, envie dados para dentro do programa.&lt;/p&gt;
&lt;p&gt;A execução de software dentro de um &lt;strong&gt;Prompt de Comando&lt;/strong&gt; foi por anos abandonado e negado pela Microsoft. Porém, como muitos sabiam e está atualmente provado, a utilização do Prompt durante as fases de desenvolvimento e teste proporcionam maior agilidades e produtividade, melhorando todo o processo de escrita de software.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="estudo-pelo-prompt"&gt;
&lt;h2&gt;ESTUDO PELO PROMPT&lt;/h2&gt;
&lt;p&gt;É comum que o estudante de &lt;strong&gt;Desenvolvimento de Software&lt;/strong&gt; queira, desde o início do estudo, construir janelas com botões, campos, e outros controles. Aparentemente, estudar dessa maneira não implica em problemas, porém, na prática, o que ocorre, é o uso de conceitos de Orientação a Objetos antes mesmo de se adquirir um domínimo mínimo das estruturas da linguagem de programação.&lt;/p&gt;
&lt;p&gt;Os cursos da eXcript, de maneira geral, evitam a utilização de GUI no início do curso, e a razão para isso é bastante simples: &amp;quot;eu Cláudio, aprendi a desenvolver em Pascal com Delphi, a plataforma que revolucionou a criação de GUI&amp;quot;.&lt;/p&gt;
&lt;p&gt;O resultado do meu estudo, foi a confusão entre o processamento da informação, com a entrada e saída de dados. Ao invés de pensar em rotinas, particularmente, pensava em telas com campos e botões, o que é por definição técnica um erro e uma forma de concepção totalmente equivocada induz ao erro.&lt;/p&gt;
&lt;p&gt;O estudo da estrutura da linguagem deve ser feito simplificando a entrada e a saída de dados, até porque, o objetivo é a utilização das estruturas e a manipulação das informações pelo estudante. Logo, se utiliza-se por exemplo telas com campos e controles, muito do estudo será direcionado ao controle e interceptação dos eventos da tela, desviando o foco do estudo e fazendo com que o aluno pense em telas, enquanto deveria pensar em rotinas e funções.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;System&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="k"&gt;namespace&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;Aula&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;Program&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;static&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;Main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Qualquer&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="csharp"></category></entry><entry><title>C# Project</title><link href="http://excript.com/csharp/csharp-project.html" rel="alternate"></link><published>2014-02-27T06:20:00-03:00</published><updated>2014-02-27T06:20:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2014-02-27:/csharp/csharp-project.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula aprenderemos a criar uma Projeto C# no VisualStudio que será executado em cima do Prompt de Comando do Windows.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;System&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="c1"&gt;//Quais os pacotes que nós vamos utilizar&lt;/span&gt;

&lt;span class="k"&gt;namespace&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;Aula&lt;/span&gt;&lt;span class="c1"&gt;//Agrupador de instruções&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;eXcript&lt;/span&gt;&lt;span class="c1"&gt;//Modelo de um objeto&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;static&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;Main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;args …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula aprenderemos a criar uma Projeto C# no VisualStudio que será executado em cima do Prompt de Comando do Windows.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="exemplo-feito-em-aula"&gt;
&lt;h2&gt;EXEMPLO FEITO EM AULA&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;System&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="c1"&gt;//Quais os pacotes que nós vamos utilizar&lt;/span&gt;

&lt;span class="k"&gt;namespace&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;Aula&lt;/span&gt;&lt;span class="c1"&gt;//Agrupador de instruções&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;eXcript&lt;/span&gt;&lt;span class="c1"&gt;//Modelo de um objeto&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;static&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;Main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;eXcript.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;classe2&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="csharp"></category></entry><entry><title>Entrada de Dados em C#</title><link href="http://excript.com/csharp/entrada-de-dados-csharp.html" rel="alternate"></link><published>2014-02-27T06:20:00-03:00</published><updated>2014-02-27T06:20:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2014-02-27:/csharp/entrada-de-dados-csharp.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos a entrada de dados através do Console e como receber e armazenar os dados digitados pelos nossos usuários.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="entrada-de-dados"&gt;
&lt;h2&gt;ENTRADA DE DADOS&lt;/h2&gt;
&lt;p&gt;Nós já aprendemos que podemos imprimir dados na tela através da função &lt;cite&gt;WriteLine()&lt;/cite&gt;, agora, vamos estudar como que nós podemos ler o que o nosso usuário …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos a entrada de dados através do Console e como receber e armazenar os dados digitados pelos nossos usuários.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="entrada-de-dados"&gt;
&lt;h2&gt;ENTRADA DE DADOS&lt;/h2&gt;
&lt;p&gt;Nós já aprendemos que podemos imprimir dados na tela através da função &lt;cite&gt;WriteLine()&lt;/cite&gt;, agora, vamos estudar como que nós podemos ler o que o nosso usuário digita e armazenar esse valor numa variável. Assim, seremos capazes que receber uma informação e em seguida, processar a mesma, por exemplo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;texto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;texto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ReadLine&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No código acima, estamos declarando uma variável que é todo tipo String e de nome &amp;quot;texto&amp;quot; e seguida, através da classe Console, lemos o que o usuário digitou no prompt de comando e atribuímos essa valor para a variável de nome texto.
Assim, temos que podemos ler o que um usuário digita através da função &lt;cite&gt;ReadLine()&lt;/cite&gt; implementada na classe Console.&lt;/p&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="csharp"></category></entry><entry><title>Introdução à Linguagem C#</title><link href="http://excript.com/csharp/introducao-csharp.html" rel="alternate"></link><published>2014-02-27T06:20:00-03:00</published><updated>2014-02-27T06:20:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2014-02-27:/csharp/introducao-csharp.html</id><summary type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nessa aula teremos a Abertura do Curso C#. Este curso de programação é gratuito e está disponível no YouTube a todos. Também é possível estudá-lo na plataforma da eXcript. Nesta primeira aula de C#, desenvolveremos um simples programa e veremos algumas características e peculiaridades do nosso curso de programação em …&lt;/p&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</summary><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nessa aula teremos a Abertura do Curso C#. Este curso de programação é gratuito e está disponível no YouTube a todos. Também é possível estudá-lo na plataforma da eXcript. Nesta primeira aula de C#, desenvolveremos um simples programa e veremos algumas características e peculiaridades do nosso curso de programação em C#!&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="curso-c-da-excript"&gt;
&lt;h2&gt;CURSO C# da eXcript&lt;/h2&gt;
&lt;p&gt;Sejam todos bem-vindos ao Curso C# da eXcript!!&lt;/p&gt;
&lt;p&gt;É com muita satisfação que disponibilizamos publicamente e gratuitamente o &lt;strong&gt;Curso C#&lt;/strong&gt;, que pode ser estudado por qualquer pessoa que tenha conhecimentos mínimos sobre o funcionamento de qualquer Sistema Operacinal. Ousamos dizer que, qualquer pessoa que saiba utilizar o &lt;a class="reference external" href="https://www.facebook.com/excript/"&gt;Facebook&lt;/a&gt; e também, saiba como copiar e colar texto, já possui os pré-requisitos para iniciar os estudos de programação e a trilhar os caminhos do Desenvolvimento de Software.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="a-linguagem-de-programamacao-c"&gt;
&lt;h2&gt;A LINGUAGEM DE PROGRAMAMAÇÃO C#&lt;/h2&gt;
&lt;p&gt;A linguagem C# foi desenvolvida pela Microsoft para concorrer com o Java, linguagem que estava em alto crescimento em meados de 2005. Junto a linguagem, foi desenvolvido a plataforma .NET que acabou se tornando o padrão para o desenvolvimento Microsoft.&lt;/p&gt;
&lt;p&gt;Atualmente, o C# pode ser executado em vários Sistemas Operacionais, possui várias IDE que suportam o desenvolvimento e é uma linguagem de alta produção, estável, com bibliotecas maduras e uma linguagem em contínua evolução.&lt;/p&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="csharp"></category></entry><entry><title>Tipos de Dados em C#</title><link href="http://excript.com/csharp/tipo-dados-csharp.html" rel="alternate"></link><published>2014-02-27T06:20:00-03:00</published><updated>2014-02-27T06:20:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2014-02-27:/csharp/tipo-dados-csharp.html</id><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos os tipos de dados da linguagem C#. Aprenderemos como podemos utilizar os diferentes tipos de dados e quais informações conseguimos manipular através de cada estrutura.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="tipos"&gt;
&lt;h2&gt;TIPOS&lt;/h2&gt;
&lt;p&gt;Nenhum texto a ser exibido neste momento.&lt;/p&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="csharp"></category></entry><entry><title>Variáveis em C#</title><link href="http://excript.com/csharp/variavel-csharp.html" rel="alternate"></link><published>2014-02-27T06:20:00-03:00</published><updated>2014-02-27T06:20:00-03:00</updated><author><name>Cláudio Rogério Carvalho Filho</name></author><id>tag:excript.com,2014-02-27:/csharp/variavel-csharp.html</id><content type="html">
    &lt;div class="admonitionblock note data-line" style="margin-top: 1.50em"&gt;
        &lt;table style="margin: 0"&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td class="content" style="border-left: 0"&gt;
                        &lt;div class="paragraph data-line"&gt;
                            &lt;p&gt; Nesta aula estudaremos o que são variáveis, como declara-las, quais as principais características que as definem e demais informações que precisamos conhecer para desenvolvermos em C#.&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;div class="section" id="variaveis"&gt;
&lt;h2&gt;VARIÁVEIS&lt;/h2&gt;
&lt;p&gt;Nenhum texto a ser exibido neste momento.&lt;/p&gt;
&lt;/div&gt;
</content><category term="curso"></category><category term="csharp"></category></entry></feed>